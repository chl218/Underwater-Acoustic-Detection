// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "peaks.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic peaks::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic peaks::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> peaks::ap_ST_st1_fsm_0 = "1";
const sc_lv<9> peaks::ap_ST_st2_fsm_1 = "10";
const sc_lv<9> peaks::ap_ST_st3_fsm_2 = "100";
const sc_lv<9> peaks::ap_ST_st4_fsm_3 = "1000";
const sc_lv<9> peaks::ap_ST_pp0_stg0_fsm_4 = "10000";
const sc_lv<9> peaks::ap_ST_pp0_stg1_fsm_5 = "100000";
const sc_lv<9> peaks::ap_ST_st25_fsm_6 = "1000000";
const sc_lv<9> peaks::ap_ST_st26_fsm_7 = "10000000";
const sc_lv<9> peaks::ap_ST_st27_fsm_8 = "100000000";
const sc_lv<32> peaks::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> peaks::ap_const_lv1_1 = "1";
const sc_lv<32> peaks::ap_const_lv32_4 = "100";
const sc_lv<32> peaks::ap_const_lv32_1 = "1";
const sc_lv<32> peaks::ap_const_lv32_5 = "101";
const sc_lv<32> peaks::ap_const_lv32_7 = "111";
const sc_lv<1> peaks::ap_const_lv1_0 = "0";
const sc_lv<32> peaks::ap_const_lv32_6 = "110";
const sc_lv<32> peaks::ap_const_lv32_3 = "11";
const sc_lv<32> peaks::ap_const_lv32_2 = "10";
const sc_lv<7> peaks::ap_const_lv7_1 = "1";
const sc_lv<64> peaks::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> peaks::ap_const_lv64_20 = "100000";
const sc_lv<64> peaks::ap_const_lv64_21 = "100001";
const sc_lv<32> peaks::ap_const_lv32_8 = "1000";
const sc_lv<32> peaks::ap_const_lv32_63 = "1100011";
const sc_lv<7> peaks::ap_const_lv7_63 = "1100011";
const sc_lv<7> peaks::ap_const_lv7_7F = "1111111";
const sc_lv<7> peaks::ap_const_lv7_3 = "11";
const sc_lv<16> peaks::ap_const_lv16_AB = "10101011";
const sc_lv<32> peaks::ap_const_lv32_9 = "1001";
const sc_lv<32> peaks::ap_const_lv32_F = "1111";
const sc_lv<3> peaks::ap_const_lv3_0 = "000";
const sc_lv<3> peaks::ap_const_lv3_1 = "1";

peaks::peaks(sc_module_name name) : sc_module(name), mVcdFile(0) {
    peaks_urem_7ns_3ns_7_11_U0 = new peaks_urem_7ns_3ns_7_11<1,11,7,3,7>("peaks_urem_7ns_3ns_7_11_U0");
    peaks_urem_7ns_3ns_7_11_U0->clk(ap_clk);
    peaks_urem_7ns_3ns_7_11_U0->reset(ap_rst);
    peaks_urem_7ns_3ns_7_11_U0->din0(i_phi_fu_278_p4);
    peaks_urem_7ns_3ns_7_11_U0->din1(grp_fu_335_p1);
    peaks_urem_7ns_3ns_7_11_U0->ce(grp_fu_335_ce);
    peaks_urem_7ns_3ns_7_11_U0->dout(grp_fu_335_p2);
    peaks_urem_7ns_3ns_7_11_U1 = new peaks_urem_7ns_3ns_7_11<1,11,7,3,7>("peaks_urem_7ns_3ns_7_11_U1");
    peaks_urem_7ns_3ns_7_11_U1->clk(ap_clk);
    peaks_urem_7ns_3ns_7_11_U1->reset(ap_rst);
    peaks_urem_7ns_3ns_7_11_U1->din0(tmp_2_reg_572);
    peaks_urem_7ns_3ns_7_11_U1->din1(grp_fu_341_p1);
    peaks_urem_7ns_3ns_7_11_U1->ce(grp_fu_341_ce);
    peaks_urem_7ns_3ns_7_11_U1->dout(grp_fu_341_p2);
    peaks_mul_9ns_7ns_16_3_U2 = new peaks_mul_9ns_7ns_16_3<1,3,9,7,16>("peaks_mul_9ns_7ns_16_3_U2");
    peaks_mul_9ns_7ns_16_3_U2->clk(ap_clk);
    peaks_mul_9ns_7ns_16_3_U2->reset(ap_rst);
    peaks_mul_9ns_7ns_16_3_U2->din0(grp_fu_355_p0);
    peaks_mul_9ns_7ns_16_3_U2->din1(grp_fu_355_p1);
    peaks_mul_9ns_7ns_16_3_U2->ce(grp_fu_355_ce);
    peaks_mul_9ns_7ns_16_3_U2->dout(grp_fu_355_p2);
    peaks_mul_9ns_7ns_16_3_U3 = new peaks_mul_9ns_7ns_16_3<1,3,9,7,16>("peaks_mul_9ns_7ns_16_3_U3");
    peaks_mul_9ns_7ns_16_3_U3->clk(ap_clk);
    peaks_mul_9ns_7ns_16_3_U3->reset(ap_rst);
    peaks_mul_9ns_7ns_16_3_U3->din0(grp_fu_365_p0);
    peaks_mul_9ns_7ns_16_3_U3->din1(grp_fu_365_p1);
    peaks_mul_9ns_7ns_16_3_U3->ce(grp_fu_365_ce);
    peaks_mul_9ns_7ns_16_3_U3->dout(grp_fu_365_p2);
    peaks_mul_7ns_9ns_16_3_U4 = new peaks_mul_7ns_9ns_16_3<1,3,7,9,16>("peaks_mul_7ns_9ns_16_3_U4");
    peaks_mul_7ns_9ns_16_3_U4->clk(ap_clk);
    peaks_mul_7ns_9ns_16_3_U4->reset(ap_rst);
    peaks_mul_7ns_9ns_16_3_U4->din0(grp_fu_474_p0);
    peaks_mul_7ns_9ns_16_3_U4->din1(grp_fu_474_p1);
    peaks_mul_7ns_9ns_16_3_U4->ce(grp_fu_474_ce);
    peaks_mul_7ns_9ns_16_3_U4->dout(grp_fu_474_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_amplitude_address0);
    sensitive << ( ap_reg_ppiten_pp0_it9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( tmp_s_fu_514_p1 );
    sensitive << ( tmp_6_fu_537_p1 );
    sensitive << ( ap_sig_cseq_ST_st27_fsm_8 );

    SC_METHOD(thread_amplitude_ce0);
    sensitive << ( ap_reg_ppiten_pp0_it9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st27_fsm_8 );

    SC_METHOD(thread_amplitude_d0);
    sensitive << ( ap_reg_ppiten_pp0_it9 );
    sensitive << ( reg_289 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_5 );
    sensitive << ( ap_reg_ppstg_signals_load_6_phi_reg_667_pp0_it8 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st27_fsm_8 );

    SC_METHOD(thread_amplitude_we0);
    sensitive << ( ap_reg_ppiten_pp0_it9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_5 );
    sensitive << ( ap_reg_ppstg_tmp_5_reg_673_pp0_it8 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( tmp_fu_304_p2 );
    sensitive << ( tmp_9_fu_509_p2 );
    sensitive << ( ap_sig_cseq_ST_st27_fsm_8 );
    sensitive << ( tmp_1_fu_531_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sig_cseq_ST_st27_fsm_8 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st27_fsm_8 );

    SC_METHOD(thread_ap_sig_bdd_114);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_121);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_130);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_286);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_295);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_310);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_350);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_81);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_4);
    sensitive << ( ap_sig_bdd_81 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg1_fsm_5);
    sensitive << ( ap_sig_bdd_121 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_25 );

    SC_METHOD(thread_ap_sig_cseq_ST_st25_fsm_6);
    sensitive << ( ap_sig_bdd_286 );

    SC_METHOD(thread_ap_sig_cseq_ST_st26_fsm_7);
    sensitive << ( ap_sig_bdd_130 );

    SC_METHOD(thread_ap_sig_cseq_ST_st27_fsm_8);
    sensitive << ( ap_sig_bdd_350 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_bdd_114 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_bdd_310 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_bdd_295 );

    SC_METHOD(thread_exitcond_fu_323_p2);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_4 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( i_phi_fu_278_p4 );

    SC_METHOD(thread_grp_fu_335_ce);

    SC_METHOD(thread_grp_fu_335_p1);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_4 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );

    SC_METHOD(thread_grp_fu_341_ce);

    SC_METHOD(thread_grp_fu_341_p1);
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_5 );

    SC_METHOD(thread_grp_fu_355_ce);

    SC_METHOD(thread_grp_fu_355_p0);
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_5 );

    SC_METHOD(thread_grp_fu_355_p1);
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_5 );
    sensitive << ( grp_fu_355_p10 );

    SC_METHOD(thread_grp_fu_355_p10);
    sensitive << ( ap_reg_ppstg_tmp_2_reg_572_pp0_it3 );

    SC_METHOD(thread_grp_fu_365_ce);

    SC_METHOD(thread_grp_fu_365_p0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_4 );
    sensitive << ( ap_reg_ppiten_pp0_it4 );

    SC_METHOD(thread_grp_fu_365_p1);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_4 );
    sensitive << ( ap_reg_ppiten_pp0_it4 );
    sensitive << ( grp_fu_365_p10 );

    SC_METHOD(thread_grp_fu_365_p10);
    sensitive << ( ap_reg_ppstg_i_reg_274_pp0_it3 );

    SC_METHOD(thread_grp_fu_474_ce);

    SC_METHOD(thread_grp_fu_474_p0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_4 );
    sensitive << ( ap_reg_ppiten_pp0_it7 );
    sensitive << ( grp_fu_474_p00 );

    SC_METHOD(thread_grp_fu_474_p00);
    sensitive << ( tmp_7_reg_677 );

    SC_METHOD(thread_grp_fu_474_p1);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_4 );
    sensitive << ( ap_reg_ppiten_pp0_it7 );

    SC_METHOD(thread_i_1_fu_346_p2);
    sensitive << ( i_reg_274 );

    SC_METHOD(thread_i_cast_fu_319_p1);
    sensitive << ( i_phi_fu_278_p4 );

    SC_METHOD(thread_i_phi_fu_278_p4);
    sensitive << ( i_reg_274 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_4 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond_reg_568 );
    sensitive << ( i_1_reg_578 );

    SC_METHOD(thread_locations_address0);
    sensitive << ( ap_reg_ppiten_pp0_it9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( tmp_s_fu_514_p1 );
    sensitive << ( tmp_6_fu_537_p1 );
    sensitive << ( ap_sig_cseq_ST_st27_fsm_8 );

    SC_METHOD(thread_locations_ce0);
    sensitive << ( ap_reg_ppiten_pp0_it9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st27_fsm_8 );

    SC_METHOD(thread_locations_d0);
    sensitive << ( ap_reg_ppiten_pp0_it9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_5 );
    sensitive << ( ap_reg_ppstg_i_cast_reg_563_pp0_it9 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st27_fsm_8 );

    SC_METHOD(thread_locations_we0);
    sensitive << ( ap_reg_ppiten_pp0_it9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_5 );
    sensitive << ( ap_reg_ppstg_tmp_5_reg_673_pp0_it8 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( tmp_fu_304_p2 );
    sensitive << ( tmp_9_fu_509_p2 );
    sensitive << ( ap_sig_cseq_ST_st27_fsm_8 );
    sensitive << ( tmp_1_fu_531_p2 );

    SC_METHOD(thread_newIndex2_fu_381_p1);
    sensitive << ( tmp_4_reg_593 );

    SC_METHOD(thread_newIndex4_fu_405_p1);
    sensitive << ( tmp_8_reg_619 );

    SC_METHOD(thread_newIndex9_fu_490_p1);
    sensitive << ( tmp_10_reg_687 );

    SC_METHOD(thread_peak_1_ph_cast_fu_310_p1);
    sensitive << ( peak_1_ph_reg_261 );

    SC_METHOD(thread_peak_fu_520_p2);
    sensitive << ( peak_1_fu_68 );

    SC_METHOD(thread_sel_tmp1_fu_426_p3);
    sensitive << ( reg_289 );
    sensitive << ( reg_299 );
    sensitive << ( sel_tmp_fu_421_p2 );

    SC_METHOD(thread_sel_tmp2_fu_434_p2);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_4 );
    sensitive << ( ap_reg_ppiten_pp0_it6 );
    sensitive << ( tmp_11_reg_624 );

    SC_METHOD(thread_sel_tmp3_fu_496_p3);
    sensitive << ( signals_0_q1 );
    sensitive << ( signals_1_q1 );
    sensitive << ( ap_reg_ppstg_sel_tmp4_reg_645_pp0_it8 );

    SC_METHOD(thread_sel_tmp4_fu_411_p2);
    sensitive << ( ap_reg_ppiten_pp0_it5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_5 );
    sensitive << ( tmp_12_reg_613 );

    SC_METHOD(thread_sel_tmp5_fu_447_p3);
    sensitive << ( signals_0_q0 );
    sensitive << ( signals_2_q0 );
    sensitive << ( sel_tmp4_reg_645 );

    SC_METHOD(thread_sel_tmp6_fu_416_p2);
    sensitive << ( ap_reg_ppiten_pp0_it5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_5 );
    sensitive << ( tmp_12_reg_613 );

    SC_METHOD(thread_sel_tmp_fu_421_p2);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_4 );
    sensitive << ( ap_reg_ppiten_pp0_it6 );
    sensitive << ( tmp_11_reg_624 );

    SC_METHOD(thread_signals_0_address0);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_4 );
    sensitive << ( ap_reg_ppiten_pp0_it5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_5 );
    sensitive << ( newIndex2_fu_381_p1 );
    sensitive << ( newIndex4_fu_405_p1 );

    SC_METHOD(thread_signals_0_address1);
    sensitive << ( ap_reg_ppiten_pp0_it8 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st25_fsm_6 );
    sensitive << ( newIndex9_fu_490_p1 );

    SC_METHOD(thread_signals_0_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_4 );
    sensitive << ( ap_reg_ppiten_pp0_it5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_5 );

    SC_METHOD(thread_signals_0_ce1);
    sensitive << ( ap_reg_ppiten_pp0_it8 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st25_fsm_6 );

    SC_METHOD(thread_signals_1_address0);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_4 );
    sensitive << ( ap_reg_ppiten_pp0_it5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_5 );
    sensitive << ( newIndex2_fu_381_p1 );
    sensitive << ( newIndex4_fu_405_p1 );

    SC_METHOD(thread_signals_1_address1);
    sensitive << ( ap_reg_ppiten_pp0_it8 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_5 );
    sensitive << ( newIndex9_fu_490_p1 );

    SC_METHOD(thread_signals_1_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_4 );
    sensitive << ( ap_reg_ppiten_pp0_it5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_5 );

    SC_METHOD(thread_signals_1_ce1);
    sensitive << ( ap_reg_ppiten_pp0_it8 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_5 );

    SC_METHOD(thread_signals_2_address0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_4 );
    sensitive << ( ap_reg_ppiten_pp0_it5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_5 );
    sensitive << ( newIndex2_fu_381_p1 );
    sensitive << ( newIndex4_fu_405_p1 );

    SC_METHOD(thread_signals_2_address1);
    sensitive << ( ap_reg_ppiten_pp0_it8 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st25_fsm_6 );
    sensitive << ( newIndex9_fu_490_p1 );

    SC_METHOD(thread_signals_2_ce0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_4 );
    sensitive << ( ap_reg_ppiten_pp0_it5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_5 );

    SC_METHOD(thread_signals_2_ce1);
    sensitive << ( ap_reg_ppiten_pp0_it8 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st25_fsm_6 );

    SC_METHOD(thread_signals_load_5_phi_fu_439_p3);
    sensitive << ( reg_295 );
    sensitive << ( sel_tmp2_fu_434_p2 );
    sensitive << ( sel_tmp1_fu_426_p3 );

    SC_METHOD(thread_signals_load_6_phi_fu_454_p3);
    sensitive << ( reg_295 );
    sensitive << ( sel_tmp6_reg_651 );
    sensitive << ( sel_tmp5_reg_662 );

    SC_METHOD(thread_signals_load_8_phi_fu_503_p3);
    sensitive << ( reg_299 );
    sensitive << ( ap_reg_ppstg_sel_tmp6_reg_651_pp0_it8 );
    sensitive << ( sel_tmp3_reg_707 );

    SC_METHOD(thread_tmp_11_fu_401_p1);
    sensitive << ( grp_fu_341_p2 );

    SC_METHOD(thread_tmp_12_fu_387_p1);
    sensitive << ( grp_fu_335_p2 );

    SC_METHOD(thread_tmp_1_fu_531_p2);
    sensitive << ( reg_289 );
    sensitive << ( reg_299 );
    sensitive << ( ap_sig_cseq_ST_st27_fsm_8 );

    SC_METHOD(thread_tmp_2_fu_329_p2);
    sensitive << ( i_phi_fu_278_p4 );

    SC_METHOD(thread_tmp_5_fu_460_p2);
    sensitive << ( ap_reg_ppiten_pp0_it6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_5 );
    sensitive << ( signals_load_5_phi_reg_657 );
    sensitive << ( signals_load_6_phi_fu_454_p3 );

    SC_METHOD(thread_tmp_6_fu_537_p1);
    sensitive << ( peak_1_fu_68 );

    SC_METHOD(thread_tmp_7_fu_465_p2);
    sensitive << ( ap_reg_ppstg_i_reg_274_pp0_it6 );

    SC_METHOD(thread_tmp_9_fu_509_p2);
    sensitive << ( ap_reg_ppiten_pp0_it9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_5 );
    sensitive << ( ap_reg_ppstg_tmp_5_reg_673_pp0_it8 );
    sensitive << ( ap_reg_ppstg_signals_load_6_phi_reg_667_pp0_it8 );
    sensitive << ( signals_load_8_phi_fu_503_p3 );

    SC_METHOD(thread_tmp_fu_304_p2);
    sensitive << ( reg_289 );
    sensitive << ( reg_295 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_tmp_s_fu_514_p1);
    sensitive << ( peak_1_fu_68 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it8 );
    sensitive << ( ap_reg_ppiten_pp0_it9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_5 );
    sensitive << ( exitcond_fu_323_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000000001";
    ap_reg_ppiten_pp0_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it2 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it3 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it4 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it5 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it6 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it7 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it8 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it9 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "peaks_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, signals_0_address0, "(port)signals_0_address0");
    sc_trace(mVcdFile, signals_0_ce0, "(port)signals_0_ce0");
    sc_trace(mVcdFile, signals_0_q0, "(port)signals_0_q0");
    sc_trace(mVcdFile, signals_0_address1, "(port)signals_0_address1");
    sc_trace(mVcdFile, signals_0_ce1, "(port)signals_0_ce1");
    sc_trace(mVcdFile, signals_0_q1, "(port)signals_0_q1");
    sc_trace(mVcdFile, signals_1_address0, "(port)signals_1_address0");
    sc_trace(mVcdFile, signals_1_ce0, "(port)signals_1_ce0");
    sc_trace(mVcdFile, signals_1_q0, "(port)signals_1_q0");
    sc_trace(mVcdFile, signals_1_address1, "(port)signals_1_address1");
    sc_trace(mVcdFile, signals_1_ce1, "(port)signals_1_ce1");
    sc_trace(mVcdFile, signals_1_q1, "(port)signals_1_q1");
    sc_trace(mVcdFile, signals_2_address0, "(port)signals_2_address0");
    sc_trace(mVcdFile, signals_2_ce0, "(port)signals_2_ce0");
    sc_trace(mVcdFile, signals_2_q0, "(port)signals_2_q0");
    sc_trace(mVcdFile, signals_2_address1, "(port)signals_2_address1");
    sc_trace(mVcdFile, signals_2_ce1, "(port)signals_2_ce1");
    sc_trace(mVcdFile, signals_2_q1, "(port)signals_2_q1");
    sc_trace(mVcdFile, amplitude_address0, "(port)amplitude_address0");
    sc_trace(mVcdFile, amplitude_ce0, "(port)amplitude_ce0");
    sc_trace(mVcdFile, amplitude_we0, "(port)amplitude_we0");
    sc_trace(mVcdFile, amplitude_d0, "(port)amplitude_d0");
    sc_trace(mVcdFile, locations_address0, "(port)locations_address0");
    sc_trace(mVcdFile, locations_ce0, "(port)locations_ce0");
    sc_trace(mVcdFile, locations_we0, "(port)locations_we0");
    sc_trace(mVcdFile, locations_d0, "(port)locations_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_25, "ap_sig_bdd_25");
    sc_trace(mVcdFile, i_reg_274, "i_reg_274");
    sc_trace(mVcdFile, ap_reg_ppstg_i_reg_274_pp0_it1, "ap_reg_ppstg_i_reg_274_pp0_it1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_4, "ap_sig_cseq_ST_pp0_stg0_fsm_4");
    sc_trace(mVcdFile, ap_sig_bdd_81, "ap_sig_bdd_81");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it2, "ap_reg_ppiten_pp0_it2");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it3, "ap_reg_ppiten_pp0_it3");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it4, "ap_reg_ppiten_pp0_it4");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it5, "ap_reg_ppiten_pp0_it5");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it6, "ap_reg_ppiten_pp0_it6");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it7, "ap_reg_ppiten_pp0_it7");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it8, "ap_reg_ppiten_pp0_it8");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it9, "ap_reg_ppiten_pp0_it9");
    sc_trace(mVcdFile, ap_reg_ppstg_i_reg_274_pp0_it2, "ap_reg_ppstg_i_reg_274_pp0_it2");
    sc_trace(mVcdFile, ap_reg_ppstg_i_reg_274_pp0_it3, "ap_reg_ppstg_i_reg_274_pp0_it3");
    sc_trace(mVcdFile, ap_reg_ppstg_i_reg_274_pp0_it4, "ap_reg_ppstg_i_reg_274_pp0_it4");
    sc_trace(mVcdFile, ap_reg_ppstg_i_reg_274_pp0_it5, "ap_reg_ppstg_i_reg_274_pp0_it5");
    sc_trace(mVcdFile, ap_reg_ppstg_i_reg_274_pp0_it6, "ap_reg_ppstg_i_reg_274_pp0_it6");
    sc_trace(mVcdFile, reg_289, "reg_289");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_114, "ap_sig_bdd_114");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg1_fsm_5, "ap_sig_cseq_ST_pp0_stg1_fsm_5");
    sc_trace(mVcdFile, ap_sig_bdd_121, "ap_sig_bdd_121");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st26_fsm_7, "ap_sig_cseq_ST_st26_fsm_7");
    sc_trace(mVcdFile, ap_sig_bdd_130, "ap_sig_bdd_130");
    sc_trace(mVcdFile, reg_295, "reg_295");
    sc_trace(mVcdFile, reg_299, "reg_299");
    sc_trace(mVcdFile, tmp_5_reg_673, "tmp_5_reg_673");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_5_reg_673_pp0_it8, "ap_reg_ppstg_tmp_5_reg_673_pp0_it8");
    sc_trace(mVcdFile, sel_tmp6_reg_651, "sel_tmp6_reg_651");
    sc_trace(mVcdFile, ap_reg_ppstg_sel_tmp6_reg_651_pp0_it8, "ap_reg_ppstg_sel_tmp6_reg_651_pp0_it8");
    sc_trace(mVcdFile, i_cast_fu_319_p1, "i_cast_fu_319_p1");
    sc_trace(mVcdFile, i_cast_reg_563, "i_cast_reg_563");
    sc_trace(mVcdFile, ap_reg_ppstg_i_cast_reg_563_pp0_it1, "ap_reg_ppstg_i_cast_reg_563_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppstg_i_cast_reg_563_pp0_it2, "ap_reg_ppstg_i_cast_reg_563_pp0_it2");
    sc_trace(mVcdFile, ap_reg_ppstg_i_cast_reg_563_pp0_it3, "ap_reg_ppstg_i_cast_reg_563_pp0_it3");
    sc_trace(mVcdFile, ap_reg_ppstg_i_cast_reg_563_pp0_it4, "ap_reg_ppstg_i_cast_reg_563_pp0_it4");
    sc_trace(mVcdFile, ap_reg_ppstg_i_cast_reg_563_pp0_it5, "ap_reg_ppstg_i_cast_reg_563_pp0_it5");
    sc_trace(mVcdFile, ap_reg_ppstg_i_cast_reg_563_pp0_it6, "ap_reg_ppstg_i_cast_reg_563_pp0_it6");
    sc_trace(mVcdFile, ap_reg_ppstg_i_cast_reg_563_pp0_it7, "ap_reg_ppstg_i_cast_reg_563_pp0_it7");
    sc_trace(mVcdFile, ap_reg_ppstg_i_cast_reg_563_pp0_it8, "ap_reg_ppstg_i_cast_reg_563_pp0_it8");
    sc_trace(mVcdFile, ap_reg_ppstg_i_cast_reg_563_pp0_it9, "ap_reg_ppstg_i_cast_reg_563_pp0_it9");
    sc_trace(mVcdFile, exitcond_fu_323_p2, "exitcond_fu_323_p2");
    sc_trace(mVcdFile, exitcond_reg_568, "exitcond_reg_568");
    sc_trace(mVcdFile, tmp_2_fu_329_p2, "tmp_2_fu_329_p2");
    sc_trace(mVcdFile, tmp_2_reg_572, "tmp_2_reg_572");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_2_reg_572_pp0_it1, "ap_reg_ppstg_tmp_2_reg_572_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_2_reg_572_pp0_it2, "ap_reg_ppstg_tmp_2_reg_572_pp0_it2");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_2_reg_572_pp0_it3, "ap_reg_ppstg_tmp_2_reg_572_pp0_it3");
    sc_trace(mVcdFile, i_1_fu_346_p2, "i_1_fu_346_p2");
    sc_trace(mVcdFile, i_1_reg_578, "i_1_reg_578");
    sc_trace(mVcdFile, tmp_4_reg_593, "tmp_4_reg_593");
    sc_trace(mVcdFile, tmp_12_fu_387_p1, "tmp_12_fu_387_p1");
    sc_trace(mVcdFile, tmp_12_reg_613, "tmp_12_reg_613");
    sc_trace(mVcdFile, tmp_8_reg_619, "tmp_8_reg_619");
    sc_trace(mVcdFile, tmp_11_fu_401_p1, "tmp_11_fu_401_p1");
    sc_trace(mVcdFile, tmp_11_reg_624, "tmp_11_reg_624");
    sc_trace(mVcdFile, sel_tmp4_fu_411_p2, "sel_tmp4_fu_411_p2");
    sc_trace(mVcdFile, sel_tmp4_reg_645, "sel_tmp4_reg_645");
    sc_trace(mVcdFile, ap_reg_ppstg_sel_tmp4_reg_645_pp0_it6, "ap_reg_ppstg_sel_tmp4_reg_645_pp0_it6");
    sc_trace(mVcdFile, ap_reg_ppstg_sel_tmp4_reg_645_pp0_it7, "ap_reg_ppstg_sel_tmp4_reg_645_pp0_it7");
    sc_trace(mVcdFile, ap_reg_ppstg_sel_tmp4_reg_645_pp0_it8, "ap_reg_ppstg_sel_tmp4_reg_645_pp0_it8");
    sc_trace(mVcdFile, sel_tmp6_fu_416_p2, "sel_tmp6_fu_416_p2");
    sc_trace(mVcdFile, ap_reg_ppstg_sel_tmp6_reg_651_pp0_it6, "ap_reg_ppstg_sel_tmp6_reg_651_pp0_it6");
    sc_trace(mVcdFile, ap_reg_ppstg_sel_tmp6_reg_651_pp0_it7, "ap_reg_ppstg_sel_tmp6_reg_651_pp0_it7");
    sc_trace(mVcdFile, signals_load_5_phi_fu_439_p3, "signals_load_5_phi_fu_439_p3");
    sc_trace(mVcdFile, signals_load_5_phi_reg_657, "signals_load_5_phi_reg_657");
    sc_trace(mVcdFile, sel_tmp5_fu_447_p3, "sel_tmp5_fu_447_p3");
    sc_trace(mVcdFile, sel_tmp5_reg_662, "sel_tmp5_reg_662");
    sc_trace(mVcdFile, signals_load_6_phi_fu_454_p3, "signals_load_6_phi_fu_454_p3");
    sc_trace(mVcdFile, signals_load_6_phi_reg_667, "signals_load_6_phi_reg_667");
    sc_trace(mVcdFile, ap_reg_ppstg_signals_load_6_phi_reg_667_pp0_it7, "ap_reg_ppstg_signals_load_6_phi_reg_667_pp0_it7");
    sc_trace(mVcdFile, ap_reg_ppstg_signals_load_6_phi_reg_667_pp0_it8, "ap_reg_ppstg_signals_load_6_phi_reg_667_pp0_it8");
    sc_trace(mVcdFile, tmp_5_fu_460_p2, "tmp_5_fu_460_p2");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_5_reg_673_pp0_it7, "ap_reg_ppstg_tmp_5_reg_673_pp0_it7");
    sc_trace(mVcdFile, tmp_7_fu_465_p2, "tmp_7_fu_465_p2");
    sc_trace(mVcdFile, tmp_7_reg_677, "tmp_7_reg_677");
    sc_trace(mVcdFile, tmp_10_reg_687, "tmp_10_reg_687");
    sc_trace(mVcdFile, sel_tmp3_fu_496_p3, "sel_tmp3_fu_496_p3");
    sc_trace(mVcdFile, sel_tmp3_reg_707, "sel_tmp3_reg_707");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st25_fsm_6, "ap_sig_cseq_ST_st25_fsm_6");
    sc_trace(mVcdFile, ap_sig_bdd_286, "ap_sig_bdd_286");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_bdd_295, "ap_sig_bdd_295");
    sc_trace(mVcdFile, peak_1_ph_reg_261, "peak_1_ph_reg_261");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_310, "ap_sig_bdd_310");
    sc_trace(mVcdFile, tmp_fu_304_p2, "tmp_fu_304_p2");
    sc_trace(mVcdFile, i_phi_fu_278_p4, "i_phi_fu_278_p4");
    sc_trace(mVcdFile, newIndex2_fu_381_p1, "newIndex2_fu_381_p1");
    sc_trace(mVcdFile, newIndex4_fu_405_p1, "newIndex4_fu_405_p1");
    sc_trace(mVcdFile, newIndex9_fu_490_p1, "newIndex9_fu_490_p1");
    sc_trace(mVcdFile, tmp_s_fu_514_p1, "tmp_s_fu_514_p1");
    sc_trace(mVcdFile, tmp_9_fu_509_p2, "tmp_9_fu_509_p2");
    sc_trace(mVcdFile, tmp_6_fu_537_p1, "tmp_6_fu_537_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st27_fsm_8, "ap_sig_cseq_ST_st27_fsm_8");
    sc_trace(mVcdFile, ap_sig_bdd_350, "ap_sig_bdd_350");
    sc_trace(mVcdFile, tmp_1_fu_531_p2, "tmp_1_fu_531_p2");
    sc_trace(mVcdFile, peak_1_fu_68, "peak_1_fu_68");
    sc_trace(mVcdFile, peak_1_ph_cast_fu_310_p1, "peak_1_ph_cast_fu_310_p1");
    sc_trace(mVcdFile, peak_fu_520_p2, "peak_fu_520_p2");
    sc_trace(mVcdFile, grp_fu_335_p1, "grp_fu_335_p1");
    sc_trace(mVcdFile, grp_fu_341_p1, "grp_fu_341_p1");
    sc_trace(mVcdFile, grp_fu_355_p0, "grp_fu_355_p0");
    sc_trace(mVcdFile, grp_fu_355_p1, "grp_fu_355_p1");
    sc_trace(mVcdFile, grp_fu_365_p0, "grp_fu_365_p0");
    sc_trace(mVcdFile, grp_fu_365_p1, "grp_fu_365_p1");
    sc_trace(mVcdFile, grp_fu_355_p2, "grp_fu_355_p2");
    sc_trace(mVcdFile, grp_fu_335_p2, "grp_fu_335_p2");
    sc_trace(mVcdFile, grp_fu_365_p2, "grp_fu_365_p2");
    sc_trace(mVcdFile, grp_fu_341_p2, "grp_fu_341_p2");
    sc_trace(mVcdFile, sel_tmp_fu_421_p2, "sel_tmp_fu_421_p2");
    sc_trace(mVcdFile, sel_tmp2_fu_434_p2, "sel_tmp2_fu_434_p2");
    sc_trace(mVcdFile, sel_tmp1_fu_426_p3, "sel_tmp1_fu_426_p3");
    sc_trace(mVcdFile, grp_fu_474_p0, "grp_fu_474_p0");
    sc_trace(mVcdFile, grp_fu_474_p1, "grp_fu_474_p1");
    sc_trace(mVcdFile, grp_fu_474_p2, "grp_fu_474_p2");
    sc_trace(mVcdFile, signals_load_8_phi_fu_503_p3, "signals_load_8_phi_fu_503_p3");
    sc_trace(mVcdFile, grp_fu_335_ce, "grp_fu_335_ce");
    sc_trace(mVcdFile, grp_fu_341_ce, "grp_fu_341_ce");
    sc_trace(mVcdFile, grp_fu_355_ce, "grp_fu_355_ce");
    sc_trace(mVcdFile, grp_fu_365_ce, "grp_fu_365_ce");
    sc_trace(mVcdFile, grp_fu_474_ce, "grp_fu_474_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_355_p10, "grp_fu_355_p10");
    sc_trace(mVcdFile, grp_fu_365_p10, "grp_fu_365_p10");
    sc_trace(mVcdFile, grp_fu_474_p00, "grp_fu_474_p00");
#endif

    }
    mHdltvinHandle.open("peaks.hdltvin.dat");
    mHdltvoutHandle.open("peaks.hdltvout.dat");
}

peaks::~peaks() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete peaks_urem_7ns_3ns_7_11_U0;
    delete peaks_urem_7ns_3ns_7_11_U1;
    delete peaks_mul_9ns_7ns_16_3_U2;
    delete peaks_mul_9ns_7ns_16_3_U3;
    delete peaks_mul_7ns_9ns_16_3_U4;
}

void peaks::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_4.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_323_p2.read()))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_568.read()))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_1;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read()) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_568.read())))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read())) {
            ap_reg_ppiten_pp0_it2 = ap_reg_ppiten_pp0_it1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read())) {
            ap_reg_ppiten_pp0_it3 = ap_reg_ppiten_pp0_it2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read())) {
            ap_reg_ppiten_pp0_it4 = ap_reg_ppiten_pp0_it3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read())) {
            ap_reg_ppiten_pp0_it5 = ap_reg_ppiten_pp0_it4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read())) {
            ap_reg_ppiten_pp0_it6 = ap_reg_ppiten_pp0_it5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read())) {
            ap_reg_ppiten_pp0_it7 = ap_reg_ppiten_pp0_it6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read())) {
            ap_reg_ppiten_pp0_it8 = ap_reg_ppiten_pp0_it7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read())) {
            ap_reg_ppiten_pp0_it9 = ap_reg_ppiten_pp0_it8.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
            ap_reg_ppiten_pp0_it9 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        i_reg_274 = ap_const_lv7_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_4.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_568.read()))) {
        i_reg_274 = i_1_reg_578.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read()) && 
         !esl_seteq<1,1,1>(ap_reg_ppstg_tmp_5_reg_673_pp0_it8.read(), ap_const_lv1_0) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_509_p2.read()))) {
        peak_1_fu_68 = peak_fu_520_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        peak_1_fu_68 = peak_1_ph_cast_fu_310_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_304_p2.read())) {
            peak_1_ph_reg_261 = ap_const_lv1_0;
        } else if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_304_p2.read())) {
            peak_1_ph_reg_261 = ap_const_lv1_1;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st26_fsm_7.read())) {
        reg_289 = signals_0_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read())))) {
        reg_289 = signals_0_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st26_fsm_7.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_4.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it9.read()) && 
          !esl_seteq<1,1,1>(ap_reg_ppstg_tmp_5_reg_673_pp0_it8.read(), ap_const_lv1_0) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_sel_tmp6_reg_651_pp0_it8.read())))) {
        reg_299 = signals_2_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read()))) {
        reg_299 = signals_2_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_4.read())) {
        ap_reg_ppstg_i_cast_reg_563_pp0_it1 = i_cast_reg_563.read();
        ap_reg_ppstg_i_cast_reg_563_pp0_it2 = ap_reg_ppstg_i_cast_reg_563_pp0_it1.read();
        ap_reg_ppstg_i_cast_reg_563_pp0_it3 = ap_reg_ppstg_i_cast_reg_563_pp0_it2.read();
        ap_reg_ppstg_i_cast_reg_563_pp0_it4 = ap_reg_ppstg_i_cast_reg_563_pp0_it3.read();
        ap_reg_ppstg_i_cast_reg_563_pp0_it5 = ap_reg_ppstg_i_cast_reg_563_pp0_it4.read();
        ap_reg_ppstg_i_cast_reg_563_pp0_it6 = ap_reg_ppstg_i_cast_reg_563_pp0_it5.read();
        ap_reg_ppstg_i_cast_reg_563_pp0_it7 = ap_reg_ppstg_i_cast_reg_563_pp0_it6.read();
        ap_reg_ppstg_i_cast_reg_563_pp0_it8 = ap_reg_ppstg_i_cast_reg_563_pp0_it7.read();
        ap_reg_ppstg_i_cast_reg_563_pp0_it9 = ap_reg_ppstg_i_cast_reg_563_pp0_it8.read();
        ap_reg_ppstg_i_reg_274_pp0_it1 = i_reg_274.read();
        ap_reg_ppstg_i_reg_274_pp0_it2 = ap_reg_ppstg_i_reg_274_pp0_it1.read();
        ap_reg_ppstg_i_reg_274_pp0_it3 = ap_reg_ppstg_i_reg_274_pp0_it2.read();
        ap_reg_ppstg_i_reg_274_pp0_it4 = ap_reg_ppstg_i_reg_274_pp0_it3.read();
        ap_reg_ppstg_i_reg_274_pp0_it5 = ap_reg_ppstg_i_reg_274_pp0_it4.read();
        ap_reg_ppstg_i_reg_274_pp0_it6 = ap_reg_ppstg_i_reg_274_pp0_it5.read();
        ap_reg_ppstg_tmp_2_reg_572_pp0_it1 = tmp_2_reg_572.read();
        ap_reg_ppstg_tmp_2_reg_572_pp0_it2 = ap_reg_ppstg_tmp_2_reg_572_pp0_it1.read();
        ap_reg_ppstg_tmp_2_reg_572_pp0_it3 = ap_reg_ppstg_tmp_2_reg_572_pp0_it2.read();
        exitcond_reg_568 = exitcond_fu_323_p2.read();
        i_cast_reg_563 = i_cast_fu_319_p1.read();
        signals_load_5_phi_reg_657 = signals_load_5_phi_fu_439_p3.read();
        tmp_12_reg_613 = tmp_12_fu_387_p1.read();
        tmp_8_reg_619 = grp_fu_365_p2.read().range(15, 9);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read())) {
        ap_reg_ppstg_sel_tmp4_reg_645_pp0_it6 = sel_tmp4_reg_645.read();
        ap_reg_ppstg_sel_tmp4_reg_645_pp0_it7 = ap_reg_ppstg_sel_tmp4_reg_645_pp0_it6.read();
        ap_reg_ppstg_sel_tmp4_reg_645_pp0_it8 = ap_reg_ppstg_sel_tmp4_reg_645_pp0_it7.read();
        ap_reg_ppstg_sel_tmp6_reg_651_pp0_it6 = sel_tmp6_reg_651.read();
        ap_reg_ppstg_sel_tmp6_reg_651_pp0_it7 = ap_reg_ppstg_sel_tmp6_reg_651_pp0_it6.read();
        ap_reg_ppstg_sel_tmp6_reg_651_pp0_it8 = ap_reg_ppstg_sel_tmp6_reg_651_pp0_it7.read();
        ap_reg_ppstg_signals_load_6_phi_reg_667_pp0_it7 = signals_load_6_phi_reg_667.read();
        ap_reg_ppstg_signals_load_6_phi_reg_667_pp0_it8 = ap_reg_ppstg_signals_load_6_phi_reg_667_pp0_it7.read();
        ap_reg_ppstg_tmp_5_reg_673_pp0_it7 = tmp_5_reg_673.read();
        ap_reg_ppstg_tmp_5_reg_673_pp0_it8 = ap_reg_ppstg_tmp_5_reg_673_pp0_it7.read();
        sel_tmp4_reg_645 = sel_tmp4_fu_411_p2.read();
        sel_tmp6_reg_651 = sel_tmp6_fu_416_p2.read();
        signals_load_6_phi_reg_667 = signals_load_6_phi_fu_454_p3.read();
        tmp_11_reg_624 = tmp_11_fu_401_p1.read();
        tmp_4_reg_593 = grp_fu_355_p2.read().range(15, 9);
        tmp_5_reg_673 = tmp_5_fu_460_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_568.read()))) {
        i_1_reg_578 = i_1_fu_346_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_4.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read())))) {
        reg_295 = signals_1_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_4.read()) && !esl_seteq<1,1,1>(ap_reg_ppstg_tmp_5_reg_673_pp0_it8.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_sel_tmp6_reg_651_pp0_it8.read()))) {
        sel_tmp3_reg_707 = sel_tmp3_fu_496_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, sel_tmp6_reg_651.read()))) {
        sel_tmp5_reg_662 = sel_tmp5_fu_447_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_4.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_tmp_5_reg_673_pp0_it7.read()))) {
        tmp_10_reg_687 = grp_fu_474_p2.read().range(15, 9);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_323_p2.read()))) {
        tmp_2_reg_572 = tmp_2_fu_329_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_460_p2.read()))) {
        tmp_7_reg_677 = tmp_7_fu_465_p2.read();
    }
}

void peaks::thread_amplitude_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st27_fsm_8.read())) {
        amplitude_address0 =  (sc_lv<6>) (tmp_6_fu_537_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it9.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read()))) {
        amplitude_address0 =  (sc_lv<6>) (tmp_s_fu_514_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        amplitude_address0 =  (sc_lv<6>) (ap_const_lv64_0);
    } else {
        amplitude_address0 = "XXXXXX";
    }
}

void peaks::thread_amplitude_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it9.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st27_fsm_8.read()))) {
        amplitude_ce0 = ap_const_logic_1;
    } else {
        amplitude_ce0 = ap_const_logic_0;
    }
}

void peaks::thread_amplitude_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read()))) {
        amplitude_d0 = ap_reg_ppstg_signals_load_6_phi_reg_667_pp0_it8.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st27_fsm_8.read()))) {
        amplitude_d0 = reg_289.read();
    } else {
        amplitude_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void peaks::thread_amplitude_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_304_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it9.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read()) && 
          !esl_seteq<1,1,1>(ap_reg_ppstg_tmp_5_reg_673_pp0_it8.read(), ap_const_lv1_0) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_509_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st27_fsm_8.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_531_p2.read())))) {
        amplitude_we0 = ap_const_logic_1;
    } else {
        amplitude_we0 = ap_const_logic_0;
    }
}

void peaks::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st27_fsm_8.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void peaks::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void peaks::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st27_fsm_8.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void peaks::thread_ap_sig_bdd_114() {
    ap_sig_bdd_114 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void peaks::thread_ap_sig_bdd_121() {
    ap_sig_bdd_121 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void peaks::thread_ap_sig_bdd_130() {
    ap_sig_bdd_130 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void peaks::thread_ap_sig_bdd_25() {
    ap_sig_bdd_25 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void peaks::thread_ap_sig_bdd_286() {
    ap_sig_bdd_286 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void peaks::thread_ap_sig_bdd_295() {
    ap_sig_bdd_295 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void peaks::thread_ap_sig_bdd_310() {
    ap_sig_bdd_310 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void peaks::thread_ap_sig_bdd_350() {
    ap_sig_bdd_350 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(8, 8));
}

void peaks::thread_ap_sig_bdd_81() {
    ap_sig_bdd_81 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void peaks::thread_ap_sig_cseq_ST_pp0_stg0_fsm_4() {
    if (ap_sig_bdd_81.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_4 = ap_const_logic_0;
    }
}

void peaks::thread_ap_sig_cseq_ST_pp0_stg1_fsm_5() {
    if (ap_sig_bdd_121.read()) {
        ap_sig_cseq_ST_pp0_stg1_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg1_fsm_5 = ap_const_logic_0;
    }
}

void peaks::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_25.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void peaks::thread_ap_sig_cseq_ST_st25_fsm_6() {
    if (ap_sig_bdd_286.read()) {
        ap_sig_cseq_ST_st25_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st25_fsm_6 = ap_const_logic_0;
    }
}

void peaks::thread_ap_sig_cseq_ST_st26_fsm_7() {
    if (ap_sig_bdd_130.read()) {
        ap_sig_cseq_ST_st26_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st26_fsm_7 = ap_const_logic_0;
    }
}

void peaks::thread_ap_sig_cseq_ST_st27_fsm_8() {
    if (ap_sig_bdd_350.read()) {
        ap_sig_cseq_ST_st27_fsm_8 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st27_fsm_8 = ap_const_logic_0;
    }
}

void peaks::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_bdd_114.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void peaks::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_bdd_310.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void peaks::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_bdd_295.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void peaks::thread_exitcond_fu_323_p2() {
    exitcond_fu_323_p2 = (!i_phi_fu_278_p4.read().is_01() || !ap_const_lv7_63.is_01())? sc_lv<1>(): sc_lv<1>(i_phi_fu_278_p4.read() == ap_const_lv7_63);
}

void peaks::thread_grp_fu_335_ce() {
    grp_fu_335_ce = ap_const_logic_1;
}

void peaks::thread_grp_fu_335_p1() {
    grp_fu_335_p1 =  (sc_lv<3>) (ap_const_lv7_3);
}

void peaks::thread_grp_fu_341_ce() {
    grp_fu_341_ce = ap_const_logic_1;
}

void peaks::thread_grp_fu_341_p1() {
    grp_fu_341_p1 =  (sc_lv<3>) (ap_const_lv7_3);
}

void peaks::thread_grp_fu_355_ce() {
    grp_fu_355_ce = ap_const_logic_1;
}

void peaks::thread_grp_fu_355_p0() {
    grp_fu_355_p0 =  (sc_lv<9>) (ap_const_lv16_AB);
}

void peaks::thread_grp_fu_355_p1() {
    grp_fu_355_p1 =  (sc_lv<7>) (grp_fu_355_p10.read());
}

void peaks::thread_grp_fu_355_p10() {
    grp_fu_355_p10 = esl_zext<16,7>(ap_reg_ppstg_tmp_2_reg_572_pp0_it3.read());
}

void peaks::thread_grp_fu_365_ce() {
    grp_fu_365_ce = ap_const_logic_1;
}

void peaks::thread_grp_fu_365_p0() {
    grp_fu_365_p0 =  (sc_lv<9>) (ap_const_lv16_AB);
}

void peaks::thread_grp_fu_365_p1() {
    grp_fu_365_p1 =  (sc_lv<7>) (grp_fu_365_p10.read());
}

void peaks::thread_grp_fu_365_p10() {
    grp_fu_365_p10 = esl_zext<16,7>(ap_reg_ppstg_i_reg_274_pp0_it3.read());
}

void peaks::thread_grp_fu_474_ce() {
    grp_fu_474_ce = ap_const_logic_1;
}

void peaks::thread_grp_fu_474_p0() {
    grp_fu_474_p0 =  (sc_lv<7>) (grp_fu_474_p00.read());
}

void peaks::thread_grp_fu_474_p00() {
    grp_fu_474_p00 = esl_zext<16,7>(tmp_7_reg_677.read());
}

void peaks::thread_grp_fu_474_p1() {
    grp_fu_474_p1 =  (sc_lv<9>) (ap_const_lv16_AB);
}

void peaks::thread_i_1_fu_346_p2() {
    i_1_fu_346_p2 = (!i_reg_274.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_reg_274.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void peaks::thread_i_cast_fu_319_p1() {
    i_cast_fu_319_p1 = esl_zext<32,7>(i_phi_fu_278_p4.read());
}

void peaks::thread_i_phi_fu_278_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_568.read()))) {
        i_phi_fu_278_p4 = i_1_reg_578.read();
    } else {
        i_phi_fu_278_p4 = i_reg_274.read();
    }
}

void peaks::thread_locations_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st27_fsm_8.read())) {
        locations_address0 =  (sc_lv<6>) (tmp_6_fu_537_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it9.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read()))) {
        locations_address0 =  (sc_lv<6>) (tmp_s_fu_514_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        locations_address0 =  (sc_lv<6>) (ap_const_lv64_0);
    } else {
        locations_address0 = "XXXXXX";
    }
}

void peaks::thread_locations_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it9.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st27_fsm_8.read()))) {
        locations_ce0 = ap_const_logic_1;
    } else {
        locations_ce0 = ap_const_logic_0;
    }
}

void peaks::thread_locations_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st27_fsm_8.read())) {
        locations_d0 = ap_const_lv32_63;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it9.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read()))) {
        locations_d0 = ap_reg_ppstg_i_cast_reg_563_pp0_it9.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        locations_d0 = ap_const_lv32_0;
    } else {
        locations_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void peaks::thread_locations_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_304_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it9.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read()) && 
          !esl_seteq<1,1,1>(ap_reg_ppstg_tmp_5_reg_673_pp0_it8.read(), ap_const_lv1_0) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_509_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st27_fsm_8.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_531_p2.read())))) {
        locations_we0 = ap_const_logic_1;
    } else {
        locations_we0 = ap_const_logic_0;
    }
}

void peaks::thread_newIndex2_fu_381_p1() {
    newIndex2_fu_381_p1 = esl_zext<64,7>(tmp_4_reg_593.read());
}

void peaks::thread_newIndex4_fu_405_p1() {
    newIndex4_fu_405_p1 = esl_zext<64,7>(tmp_8_reg_619.read());
}

void peaks::thread_newIndex9_fu_490_p1() {
    newIndex9_fu_490_p1 = esl_zext<64,7>(tmp_10_reg_687.read());
}

void peaks::thread_peak_1_ph_cast_fu_310_p1() {
    peak_1_ph_cast_fu_310_p1 = esl_zext<32,1>(peak_1_ph_reg_261.read());
}

void peaks::thread_peak_fu_520_p2() {
    peak_fu_520_p2 = (!peak_1_fu_68.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(peak_1_fu_68.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void peaks::thread_sel_tmp1_fu_426_p3() {
    sel_tmp1_fu_426_p3 = (!sel_tmp_fu_421_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp_fu_421_p2.read()[0].to_bool())? reg_289.read(): reg_299.read());
}

void peaks::thread_sel_tmp2_fu_434_p2() {
    sel_tmp2_fu_434_p2 = (!tmp_11_reg_624.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<1>(): sc_lv<1>(tmp_11_reg_624.read() == ap_const_lv3_1);
}

void peaks::thread_sel_tmp3_fu_496_p3() {
    sel_tmp3_fu_496_p3 = (!ap_reg_ppstg_sel_tmp4_reg_645_pp0_it8.read()[0].is_01())? sc_lv<32>(): ((ap_reg_ppstg_sel_tmp4_reg_645_pp0_it8.read()[0].to_bool())? signals_1_q1.read(): signals_0_q1.read());
}

void peaks::thread_sel_tmp4_fu_411_p2() {
    sel_tmp4_fu_411_p2 = (!tmp_12_reg_613.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_12_reg_613.read() == ap_const_lv3_0);
}

void peaks::thread_sel_tmp5_fu_447_p3() {
    sel_tmp5_fu_447_p3 = (!sel_tmp4_reg_645.read()[0].is_01())? sc_lv<32>(): ((sel_tmp4_reg_645.read()[0].to_bool())? signals_0_q0.read(): signals_2_q0.read());
}

void peaks::thread_sel_tmp6_fu_416_p2() {
    sel_tmp6_fu_416_p2 = (!tmp_12_reg_613.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<1>(): sc_lv<1>(tmp_12_reg_613.read() == ap_const_lv3_1);
}

void peaks::thread_sel_tmp_fu_421_p2() {
    sel_tmp_fu_421_p2 = (!tmp_11_reg_624.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_11_reg_624.read() == ap_const_lv3_0);
}

void peaks::thread_signals_0_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read()))) {
        signals_0_address0 =  (sc_lv<6>) (newIndex4_fu_405_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_4.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()))) {
        signals_0_address0 =  (sc_lv<6>) (newIndex2_fu_381_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) {
        signals_0_address0 =  (sc_lv<6>) (ap_const_lv64_0);
    } else {
        signals_0_address0 = "XXXXXX";
    }
}

void peaks::thread_signals_0_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st25_fsm_6.read())) {
        signals_0_address1 =  (sc_lv<6>) (ap_const_lv64_21);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it8.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read()))) {
        signals_0_address1 =  (sc_lv<6>) (newIndex9_fu_490_p1.read());
    } else {
        signals_0_address1 = "XXXXXX";
    }
}

void peaks::thread_signals_0_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
          !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_4.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read())))) {
        signals_0_ce0 = ap_const_logic_1;
    } else {
        signals_0_ce0 = ap_const_logic_0;
    }
}

void peaks::thread_signals_0_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st25_fsm_6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it8.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read())))) {
        signals_0_ce1 = ap_const_logic_1;
    } else {
        signals_0_ce1 = ap_const_logic_0;
    }
}

void peaks::thread_signals_1_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read()))) {
        signals_1_address0 =  (sc_lv<6>) (newIndex4_fu_405_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_4.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()))) {
        signals_1_address0 =  (sc_lv<6>) (newIndex2_fu_381_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) {
        signals_1_address0 =  (sc_lv<6>) (ap_const_lv64_0);
    } else {
        signals_1_address0 = "XXXXXX";
    }
}

void peaks::thread_signals_1_address1() {
    signals_1_address1 =  (sc_lv<6>) (newIndex9_fu_490_p1.read());
}

void peaks::thread_signals_1_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
          !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_4.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read())))) {
        signals_1_ce0 = ap_const_logic_1;
    } else {
        signals_1_ce0 = ap_const_logic_0;
    }
}

void peaks::thread_signals_1_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read()))) {
        signals_1_ce1 = ap_const_logic_1;
    } else {
        signals_1_ce1 = ap_const_logic_0;
    }
}

void peaks::thread_signals_2_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read())) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read())) {
            signals_2_address0 =  (sc_lv<6>) (newIndex4_fu_405_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_4.read())) {
            signals_2_address0 =  (sc_lv<6>) (newIndex2_fu_381_p1.read());
        } else {
            signals_2_address0 = "XXXXXX";
        }
    } else {
        signals_2_address0 = "XXXXXX";
    }
}

void peaks::thread_signals_2_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st25_fsm_6.read())) {
        signals_2_address1 =  (sc_lv<6>) (ap_const_lv64_20);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it8.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read()))) {
        signals_2_address1 =  (sc_lv<6>) (newIndex9_fu_490_p1.read());
    } else {
        signals_2_address1 = "XXXXXX";
    }
}

void peaks::thread_signals_2_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_4.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read())))) {
        signals_2_ce0 = ap_const_logic_1;
    } else {
        signals_2_ce0 = ap_const_logic_0;
    }
}

void peaks::thread_signals_2_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st25_fsm_6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it8.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read())))) {
        signals_2_ce1 = ap_const_logic_1;
    } else {
        signals_2_ce1 = ap_const_logic_0;
    }
}

void peaks::thread_signals_load_5_phi_fu_439_p3() {
    signals_load_5_phi_fu_439_p3 = (!sel_tmp2_fu_434_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp2_fu_434_p2.read()[0].to_bool())? reg_295.read(): sel_tmp1_fu_426_p3.read());
}

void peaks::thread_signals_load_6_phi_fu_454_p3() {
    signals_load_6_phi_fu_454_p3 = (!sel_tmp6_reg_651.read()[0].is_01())? sc_lv<32>(): ((sel_tmp6_reg_651.read()[0].to_bool())? reg_295.read(): sel_tmp5_reg_662.read());
}

void peaks::thread_signals_load_8_phi_fu_503_p3() {
    signals_load_8_phi_fu_503_p3 = (!ap_reg_ppstg_sel_tmp6_reg_651_pp0_it8.read()[0].is_01())? sc_lv<32>(): ((ap_reg_ppstg_sel_tmp6_reg_651_pp0_it8.read()[0].to_bool())? reg_299.read(): sel_tmp3_reg_707.read());
}

void peaks::thread_tmp_11_fu_401_p1() {
    tmp_11_fu_401_p1 = grp_fu_341_p2.read().range(3-1, 0);
}

void peaks::thread_tmp_12_fu_387_p1() {
    tmp_12_fu_387_p1 = grp_fu_335_p2.read().range(3-1, 0);
}

void peaks::thread_tmp_1_fu_531_p2() {
    tmp_1_fu_531_p2 = (!reg_299.read().is_01() || !reg_289.read().is_01())? sc_lv<1>(): (sc_bigint<32>(reg_299.read()) < sc_bigint<32>(reg_289.read()));
}

void peaks::thread_tmp_2_fu_329_p2() {
    tmp_2_fu_329_p2 = (!ap_const_lv7_7F.is_01() || !i_phi_fu_278_p4.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_7F) + sc_biguint<7>(i_phi_fu_278_p4.read()));
}

void peaks::thread_tmp_5_fu_460_p2() {
    tmp_5_fu_460_p2 = (!signals_load_5_phi_reg_657.read().is_01() || !signals_load_6_phi_fu_454_p3.read().is_01())? sc_lv<1>(): (sc_bigint<32>(signals_load_5_phi_reg_657.read()) < sc_bigint<32>(signals_load_6_phi_fu_454_p3.read()));
}

void peaks::thread_tmp_6_fu_537_p1() {
    tmp_6_fu_537_p1 = esl_sext<64,32>(peak_1_fu_68.read());
}

void peaks::thread_tmp_7_fu_465_p2() {
    tmp_7_fu_465_p2 = (!ap_reg_ppstg_i_reg_274_pp0_it6.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(ap_reg_ppstg_i_reg_274_pp0_it6.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void peaks::thread_tmp_9_fu_509_p2() {
    tmp_9_fu_509_p2 = (!ap_reg_ppstg_signals_load_6_phi_reg_667_pp0_it8.read().is_01() || !signals_load_8_phi_fu_503_p3.read().is_01())? sc_lv<1>(): (sc_bigint<32>(ap_reg_ppstg_signals_load_6_phi_reg_667_pp0_it8.read()) > sc_bigint<32>(signals_load_8_phi_fu_503_p3.read()));
}

void peaks::thread_tmp_fu_304_p2() {
    tmp_fu_304_p2 = (!reg_289.read().is_01() || !reg_295.read().is_01())? sc_lv<1>(): (sc_bigint<32>(reg_289.read()) > sc_bigint<32>(reg_295.read()));
}

void peaks::thread_tmp_s_fu_514_p1() {
    tmp_s_fu_514_p1 = esl_sext<64,32>(peak_1_fu_68.read());
}

void peaks::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_4;
            break;
        case 16 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_323_p2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) {
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_5;
            } else {
                ap_NS_fsm = ap_ST_st25_fsm_6;
            }
            break;
        case 32 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it9.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_5.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it8.read()))) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_4;
            } else {
                ap_NS_fsm = ap_ST_st25_fsm_6;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st26_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st27_fsm_8;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<9>) ("XXXXXXXXX");
            break;
    }
}

void peaks::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"signals_0_address0\" :  \"" << signals_0_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"signals_0_ce0\" :  \"" << signals_0_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"signals_0_q0\" :  \"" << signals_0_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"signals_0_address1\" :  \"" << signals_0_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"signals_0_ce1\" :  \"" << signals_0_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"signals_0_q1\" :  \"" << signals_0_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"signals_1_address0\" :  \"" << signals_1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"signals_1_ce0\" :  \"" << signals_1_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"signals_1_q0\" :  \"" << signals_1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"signals_1_address1\" :  \"" << signals_1_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"signals_1_ce1\" :  \"" << signals_1_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"signals_1_q1\" :  \"" << signals_1_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"signals_2_address0\" :  \"" << signals_2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"signals_2_ce0\" :  \"" << signals_2_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"signals_2_q0\" :  \"" << signals_2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"signals_2_address1\" :  \"" << signals_2_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"signals_2_ce1\" :  \"" << signals_2_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"signals_2_q1\" :  \"" << signals_2_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"amplitude_address0\" :  \"" << amplitude_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"amplitude_ce0\" :  \"" << amplitude_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"amplitude_we0\" :  \"" << amplitude_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"amplitude_d0\" :  \"" << amplitude_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"locations_address0\" :  \"" << locations_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"locations_ce0\" :  \"" << locations_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"locations_we0\" :  \"" << locations_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"locations_d0\" :  \"" << locations_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

