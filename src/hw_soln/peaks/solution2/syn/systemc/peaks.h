// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _peaks_HH_
#define _peaks_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "peaks_fcmp_32ns_32ns_1_4.h"

namespace ap_rtl {

struct peaks : public sc_module {
    // Port declarations 15
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > samples_V_dout;
    sc_in< sc_logic > samples_V_empty_n;
    sc_out< sc_logic > samples_V_read;
    sc_out< sc_lv<32> > amplitude_V_din;
    sc_in< sc_logic > amplitude_V_full_n;
    sc_out< sc_logic > amplitude_V_write;
    sc_out< sc_lv<32> > locations_V_din;
    sc_in< sc_logic > locations_V_full_n;
    sc_out< sc_logic > locations_V_write;


    // Module declarations
    peaks(sc_module_name name);
    SC_HAS_PROCESS(peaks);

    ~peaks();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    peaks_fcmp_32ns_32ns_1_4<1,4,32,32,1>* peaks_fcmp_32ns_32ns_1_4_U0;
    peaks_fcmp_32ns_32ns_1_4<1,4,32,32,1>* peaks_fcmp_32ns_32ns_1_4_U1;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_21;
    sc_signal< sc_lv<7> > tmp_6_reg_111;
    sc_signal< sc_lv<7> > ap_reg_ppstg_tmp_6_reg_111_pp0_it1;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_3;
    sc_signal< bool > ap_sig_bdd_48;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_lv<1> > exitcond_reg_364;
    sc_signal< bool > ap_sig_bdd_57;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it2;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it3;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it4;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it5;
    sc_signal< sc_lv<1> > or_cond_reg_406;
    sc_signal< bool > ap_sig_bdd_77;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it6;
    sc_signal< sc_lv<7> > ap_reg_ppstg_tmp_6_reg_111_pp0_it2;
    sc_signal< sc_lv<7> > ap_reg_ppstg_tmp_6_reg_111_pp0_it3;
    sc_signal< sc_lv<7> > ap_reg_ppstg_tmp_6_reg_111_pp0_it4;
    sc_signal< sc_lv<7> > ap_reg_ppstg_tmp_6_reg_111_pp0_it5;
    sc_signal< sc_lv<32> > shift_buf_1_2_reg_123;
    sc_signal< sc_lv<32> > shift_buf_1_9_reg_133;
    sc_signal< sc_lv<32> > ap_reg_ppstg_shift_buf_1_9_reg_133_pp0_it2;
    sc_signal< sc_lv<32> > ap_reg_ppstg_shift_buf_1_9_reg_133_pp0_it3;
    sc_signal< sc_lv<32> > ap_reg_ppstg_shift_buf_1_9_reg_133_pp0_it4;
    sc_signal< sc_lv<32> > ap_reg_ppstg_shift_buf_1_9_reg_133_pp0_it5;
    sc_signal< sc_lv<2> > indvarinc_fu_157_p2;
    sc_signal< sc_lv<2> > indvarinc_reg_345;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_105;
    sc_signal< sc_lv<1> > tmp_1_fu_173_p2;
    sc_signal< sc_lv<1> > tmp_1_reg_350;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_116;
    sc_signal< sc_lv<1> > exitcond_fu_185_p2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_364_pp0_it1;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_364_pp0_it2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_364_pp0_it3;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_364_pp0_it4;
    sc_signal< sc_lv<7> > i_fu_191_p2;
    sc_signal< sc_lv<7> > i_reg_368;
    sc_signal< sc_lv<32> > tmp_20_reg_373;
    sc_signal< sc_lv<32> > ap_reg_ppstg_tmp_20_reg_373_pp0_it2;
    sc_signal< sc_lv<1> > tmp_2_fu_227_p2;
    sc_signal< sc_lv<1> > tmp_2_reg_380;
    sc_signal< sc_lv<1> > ap_reg_ppstg_tmp_2_reg_380_pp0_it2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_tmp_2_reg_380_pp0_it3;
    sc_signal< sc_lv<1> > tmp_7_fu_263_p2;
    sc_signal< sc_lv<1> > tmp_7_reg_385;
    sc_signal< sc_lv<1> > tmp_14_fu_298_p2;
    sc_signal< sc_lv<1> > tmp_14_reg_391;
    sc_signal< sc_lv<1> > tmp_11_fu_308_p2;
    sc_signal< sc_lv<1> > tmp_11_reg_396;
    sc_signal< sc_lv<1> > tmp_17_fu_318_p2;
    sc_signal< sc_lv<1> > tmp_17_reg_401;
    sc_signal< sc_lv<1> > or_cond_fu_324_p2;
    sc_signal< sc_lv<2> > invdar_phi_fu_104_p4;
    sc_signal< sc_lv<2> > invdar_reg_100;
    sc_signal< sc_lv<7> > tmp_6_phi_fu_115_p4;
    sc_signal< sc_lv<32> > shift_buf_1_2_phi_fu_126_p4;
    sc_signal< sc_lv<32> > shift_buf_1_9_phi_fu_138_p4;
    sc_signal< sc_lv<32> > shift_buf_fu_72;
    sc_signal< sc_lv<32> > shift_buf_1_fu_76;
    sc_signal< sc_lv<32> > shift_buf_1_2_to_int_fu_197_p1;
    sc_signal< sc_lv<8> > tmp_3_fu_201_p4;
    sc_signal< sc_lv<23> > tmp_4_fu_211_p1;
    sc_signal< sc_lv<1> > notrhs_fu_221_p2;
    sc_signal< sc_lv<1> > notlhs_fu_215_p2;
    sc_signal< sc_lv<32> > shift_buf_1_to_int_fu_233_p1;
    sc_signal< sc_lv<8> > tmp_8_fu_237_p4;
    sc_signal< sc_lv<23> > tmp_5_fu_247_p1;
    sc_signal< sc_lv<1> > notrhs5_fu_257_p2;
    sc_signal< sc_lv<1> > notlhs4_fu_251_p2;
    sc_signal< sc_lv<32> > shift_buf_0_to_int_fu_269_p1;
    sc_signal< sc_lv<8> > tmp_12_fu_272_p4;
    sc_signal< sc_lv<23> > tmp_13_fu_282_p1;
    sc_signal< sc_lv<1> > notrhs9_fu_292_p2;
    sc_signal< sc_lv<1> > notlhs8_fu_286_p2;
    sc_signal< sc_lv<1> > tmp_9_fu_304_p2;
    sc_signal< sc_lv<1> > grp_fu_145_p2;
    sc_signal< sc_lv<1> > tmp_15_fu_314_p2;
    sc_signal< sc_lv<1> > grp_fu_151_p2;
    sc_signal< sc_logic > grp_fu_145_ce;
    sc_signal< sc_lv<5> > grp_fu_145_opcode;
    sc_signal< sc_logic > grp_fu_151_ce;
    sc_signal< sc_lv<5> > grp_fu_151_opcode;
    sc_signal< sc_logic > ap_sig_cseq_ST_st11_fsm_4;
    sc_signal< bool > ap_sig_bdd_331;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_st1_fsm_0;
    static const sc_lv<5> ap_ST_st2_fsm_1;
    static const sc_lv<5> ap_ST_st3_fsm_2;
    static const sc_lv<5> ap_ST_pp0_stg0_fsm_3;
    static const sc_lv<5> ap_ST_st11_fsm_4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<7> ap_const_lv7_64;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_4;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<32> ap_const_lv32_4;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_amplitude_V_din();
    void thread_amplitude_V_write();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_105();
    void thread_ap_sig_bdd_116();
    void thread_ap_sig_bdd_21();
    void thread_ap_sig_bdd_331();
    void thread_ap_sig_bdd_48();
    void thread_ap_sig_bdd_57();
    void thread_ap_sig_bdd_77();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_3();
    void thread_ap_sig_cseq_ST_st11_fsm_4();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_exitcond_fu_185_p2();
    void thread_grp_fu_145_ce();
    void thread_grp_fu_145_opcode();
    void thread_grp_fu_151_ce();
    void thread_grp_fu_151_opcode();
    void thread_i_fu_191_p2();
    void thread_indvarinc_fu_157_p2();
    void thread_invdar_phi_fu_104_p4();
    void thread_locations_V_din();
    void thread_locations_V_write();
    void thread_notlhs4_fu_251_p2();
    void thread_notlhs8_fu_286_p2();
    void thread_notlhs_fu_215_p2();
    void thread_notrhs5_fu_257_p2();
    void thread_notrhs9_fu_292_p2();
    void thread_notrhs_fu_221_p2();
    void thread_or_cond_fu_324_p2();
    void thread_samples_V_read();
    void thread_shift_buf_0_to_int_fu_269_p1();
    void thread_shift_buf_1_2_phi_fu_126_p4();
    void thread_shift_buf_1_2_to_int_fu_197_p1();
    void thread_shift_buf_1_9_phi_fu_138_p4();
    void thread_shift_buf_1_fu_76();
    void thread_shift_buf_1_to_int_fu_233_p1();
    void thread_shift_buf_fu_72();
    void thread_tmp_11_fu_308_p2();
    void thread_tmp_12_fu_272_p4();
    void thread_tmp_13_fu_282_p1();
    void thread_tmp_14_fu_298_p2();
    void thread_tmp_15_fu_314_p2();
    void thread_tmp_17_fu_318_p2();
    void thread_tmp_1_fu_173_p2();
    void thread_tmp_2_fu_227_p2();
    void thread_tmp_3_fu_201_p4();
    void thread_tmp_4_fu_211_p1();
    void thread_tmp_5_fu_247_p1();
    void thread_tmp_6_phi_fu_115_p4();
    void thread_tmp_7_fu_263_p2();
    void thread_tmp_8_fu_237_p4();
    void thread_tmp_9_fu_304_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
