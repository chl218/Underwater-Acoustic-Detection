// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "peaks.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic peaks::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic peaks::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> peaks::ap_ST_st1_fsm_0 = "1";
const sc_lv<5> peaks::ap_ST_st2_fsm_1 = "10";
const sc_lv<5> peaks::ap_ST_st3_fsm_2 = "100";
const sc_lv<5> peaks::ap_ST_pp0_stg0_fsm_3 = "1000";
const sc_lv<5> peaks::ap_ST_st11_fsm_4 = "10000";
const sc_lv<32> peaks::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> peaks::ap_const_lv1_1 = "1";
const sc_lv<1> peaks::ap_const_lv1_0 = "0";
const sc_lv<32> peaks::ap_const_lv32_1 = "1";
const sc_lv<32> peaks::ap_const_lv32_2 = "10";
const sc_lv<32> peaks::ap_const_lv32_3 = "11";
const sc_lv<2> peaks::ap_const_lv2_0 = "00";
const sc_lv<17> peaks::ap_const_lv17_0 = "00000000000000000";
const sc_lv<2> peaks::ap_const_lv2_1 = "1";
const sc_lv<2> peaks::ap_const_lv2_2 = "10";
const sc_lv<17> peaks::ap_const_lv17_1D4C0 = "11101010011000000";
const sc_lv<17> peaks::ap_const_lv17_1 = "1";
const sc_lv<32> peaks::ap_const_lv32_17 = "10111";
const sc_lv<32> peaks::ap_const_lv32_1E = "11110";
const sc_lv<8> peaks::ap_const_lv8_FF = "11111111";
const sc_lv<23> peaks::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<5> peaks::ap_const_lv5_4 = "100";
const sc_lv<5> peaks::ap_const_lv5_2 = "10";
const sc_lv<32> peaks::ap_const_lv32_4 = "100";

peaks::peaks(sc_module_name name) : sc_module(name), mVcdFile(0) {
    peaks_fcmp_32ns_32ns_1_4_U0 = new peaks_fcmp_32ns_32ns_1_4<1,4,32,32,1>("peaks_fcmp_32ns_32ns_1_4_U0");
    peaks_fcmp_32ns_32ns_1_4_U0->clk(ap_clk);
    peaks_fcmp_32ns_32ns_1_4_U0->reset(ap_rst);
    peaks_fcmp_32ns_32ns_1_4_U0->din0(shift_buf_1_2_phi_fu_125_p4);
    peaks_fcmp_32ns_32ns_1_4_U0->din1(shift_buf_1_9_phi_fu_137_p4);
    peaks_fcmp_32ns_32ns_1_4_U0->ce(grp_fu_144_ce);
    peaks_fcmp_32ns_32ns_1_4_U0->opcode(grp_fu_144_opcode);
    peaks_fcmp_32ns_32ns_1_4_U0->dout(grp_fu_144_p2);
    peaks_fcmp_32ns_32ns_1_4_U1 = new peaks_fcmp_32ns_32ns_1_4<1,4,32,32,1>("peaks_fcmp_32ns_32ns_1_4_U1");
    peaks_fcmp_32ns_32ns_1_4_U1->clk(ap_clk);
    peaks_fcmp_32ns_32ns_1_4_U1->reset(ap_rst);
    peaks_fcmp_32ns_32ns_1_4_U1->din0(shift_buf_1_9_phi_fu_137_p4);
    peaks_fcmp_32ns_32ns_1_4_U1->din1(samples_V_dout);
    peaks_fcmp_32ns_32ns_1_4_U1->ce(grp_fu_150_ce);
    peaks_fcmp_32ns_32ns_1_4_U1->opcode(grp_fu_150_opcode);
    peaks_fcmp_32ns_32ns_1_4_U1->dout(grp_fu_150_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_amplitude_V_din);
    sensitive << ( ap_sig_bdd_52 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( or_cond_reg_409 );
    sensitive << ( ap_sig_bdd_72 );
    sensitive << ( ap_reg_ppiten_pp0_it6 );
    sensitive << ( ap_reg_ppstg_shift_buf_1_9_reg_132_pp0_it5 );

    SC_METHOD(thread_amplitude_V_write);
    sensitive << ( ap_sig_bdd_52 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( or_cond_reg_409 );
    sensitive << ( ap_sig_bdd_72 );
    sensitive << ( ap_reg_ppiten_pp0_it6 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sig_cseq_ST_st11_fsm_4 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st11_fsm_4 );

    SC_METHOD(thread_ap_sig_bdd_103);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_113);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_334);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_52);
    sensitive << ( samples_V_empty_n );
    sensitive << ( exitcond_reg_362 );

    SC_METHOD(thread_ap_sig_bdd_72);
    sensitive << ( amplitude_V_full_n );
    sensitive << ( locations_V_full_n );
    sensitive << ( or_cond_reg_409 );

    SC_METHOD(thread_ap_sig_bdd_92);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_3);
    sensitive << ( ap_sig_bdd_113 );

    SC_METHOD(thread_ap_sig_cseq_ST_st11_fsm_4);
    sensitive << ( ap_sig_bdd_334 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_21 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_bdd_92 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_bdd_103 );

    SC_METHOD(thread_exitcond_fu_184_p2);
    sensitive << ( tmp_6_reg_111 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_52 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_72 );
    sensitive << ( ap_reg_ppiten_pp0_it6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_3 );

    SC_METHOD(thread_grp_fu_144_ce);
    sensitive << ( ap_sig_bdd_52 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_72 );
    sensitive << ( ap_reg_ppiten_pp0_it6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_3 );

    SC_METHOD(thread_grp_fu_144_opcode);
    sensitive << ( exitcond_reg_362 );
    sensitive << ( ap_sig_bdd_52 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_72 );
    sensitive << ( ap_reg_ppiten_pp0_it6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_3 );

    SC_METHOD(thread_grp_fu_150_ce);
    sensitive << ( ap_sig_bdd_52 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_72 );
    sensitive << ( ap_reg_ppiten_pp0_it6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_3 );

    SC_METHOD(thread_grp_fu_150_opcode);
    sensitive << ( exitcond_reg_362 );
    sensitive << ( ap_sig_bdd_52 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_72 );
    sensitive << ( ap_reg_ppiten_pp0_it6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_3 );

    SC_METHOD(thread_i_fu_190_p2);
    sensitive << ( tmp_6_reg_111 );

    SC_METHOD(thread_indvarinc_fu_156_p2);
    sensitive << ( invdar_reg_100 );

    SC_METHOD(thread_invdar_phi_fu_104_p4);
    sensitive << ( invdar_reg_100 );

    SC_METHOD(thread_locations_V_din);
    sensitive << ( ap_sig_bdd_52 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( or_cond_reg_409 );
    sensitive << ( ap_sig_bdd_72 );
    sensitive << ( ap_reg_ppiten_pp0_it6 );
    sensitive << ( ap_reg_ppstg_tmp_18_reg_371_pp0_it5 );

    SC_METHOD(thread_locations_V_write);
    sensitive << ( ap_sig_bdd_52 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( or_cond_reg_409 );
    sensitive << ( ap_sig_bdd_72 );
    sensitive << ( ap_reg_ppiten_pp0_it6 );

    SC_METHOD(thread_notlhs4_fu_254_p2);
    sensitive << ( ap_sig_bdd_52 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( ap_sig_bdd_72 );
    sensitive << ( ap_reg_ppiten_pp0_it6 );
    sensitive << ( ap_reg_ppstg_exitcond_reg_362_pp0_it2 );
    sensitive << ( tmp_8_fu_240_p4 );

    SC_METHOD(thread_notlhs8_fu_289_p2);
    sensitive << ( ap_sig_bdd_52 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( ap_sig_bdd_72 );
    sensitive << ( ap_reg_ppiten_pp0_it6 );
    sensitive << ( ap_reg_ppstg_exitcond_reg_362_pp0_it2 );
    sensitive << ( tmp_12_fu_275_p4 );

    SC_METHOD(thread_notlhs_fu_218_p2);
    sensitive << ( exitcond_reg_362 );
    sensitive << ( ap_sig_bdd_52 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_72 );
    sensitive << ( ap_reg_ppiten_pp0_it6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_3 );
    sensitive << ( tmp_3_fu_204_p4 );

    SC_METHOD(thread_notrhs5_fu_260_p2);
    sensitive << ( ap_sig_bdd_52 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( ap_sig_bdd_72 );
    sensitive << ( ap_reg_ppiten_pp0_it6 );
    sensitive << ( ap_reg_ppstg_exitcond_reg_362_pp0_it2 );
    sensitive << ( tmp_5_fu_250_p1 );

    SC_METHOD(thread_notrhs9_fu_295_p2);
    sensitive << ( ap_sig_bdd_52 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( ap_sig_bdd_72 );
    sensitive << ( ap_reg_ppiten_pp0_it6 );
    sensitive << ( ap_reg_ppstg_exitcond_reg_362_pp0_it2 );
    sensitive << ( tmp_13_fu_285_p1 );

    SC_METHOD(thread_notrhs_fu_224_p2);
    sensitive << ( exitcond_reg_362 );
    sensitive << ( ap_sig_bdd_52 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_72 );
    sensitive << ( ap_reg_ppiten_pp0_it6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_3 );
    sensitive << ( tmp_4_fu_214_p1 );

    SC_METHOD(thread_or_cond_fu_327_p2);
    sensitive << ( tmp_11_reg_399 );
    sensitive << ( tmp_17_reg_404 );

    SC_METHOD(thread_samples_V_read);
    sensitive << ( exitcond_reg_362 );
    sensitive << ( ap_sig_bdd_52 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_72 );
    sensitive << ( ap_reg_ppiten_pp0_it6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_3 );

    SC_METHOD(thread_shift_buf_0_to_int_fu_272_p1);
    sensitive << ( ap_reg_ppstg_tmp_20_reg_376_pp0_it2 );

    SC_METHOD(thread_shift_buf_1_2_phi_fu_125_p4);
    sensitive << ( shift_buf_1_2_reg_122 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( shift_buf_1_9_reg_132 );
    sensitive << ( ap_reg_ppstg_exitcond_reg_362_pp0_it1 );

    SC_METHOD(thread_shift_buf_1_2_to_int_fu_200_p1);
    sensitive << ( shift_buf_1_2_phi_fu_125_p4 );

    SC_METHOD(thread_shift_buf_1_9_phi_fu_137_p4);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( shift_buf_1_9_reg_132 );
    sensitive << ( ap_reg_ppstg_exitcond_reg_362_pp0_it1 );
    sensitive << ( tmp_20_reg_376 );

    SC_METHOD(thread_shift_buf_1_fu_76);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( invdar_phi_fu_104_p4 );

    SC_METHOD(thread_shift_buf_1_to_int_fu_236_p1);
    sensitive << ( ap_reg_ppstg_shift_buf_1_9_reg_132_pp0_it2 );

    SC_METHOD(thread_shift_buf_fu_72);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( invdar_phi_fu_104_p4 );

    SC_METHOD(thread_tmp_11_fu_311_p2);
    sensitive << ( tmp_9_fu_307_p2 );
    sensitive << ( grp_fu_144_p2 );

    SC_METHOD(thread_tmp_12_fu_275_p4);
    sensitive << ( shift_buf_0_to_int_fu_272_p1 );

    SC_METHOD(thread_tmp_13_fu_285_p1);
    sensitive << ( shift_buf_0_to_int_fu_272_p1 );

    SC_METHOD(thread_tmp_14_fu_301_p2);
    sensitive << ( notrhs9_fu_295_p2 );
    sensitive << ( notlhs8_fu_289_p2 );

    SC_METHOD(thread_tmp_15_fu_317_p2);
    sensitive << ( tmp_7_reg_388 );
    sensitive << ( tmp_14_reg_394 );

    SC_METHOD(thread_tmp_17_fu_321_p2);
    sensitive << ( tmp_15_fu_317_p2 );
    sensitive << ( grp_fu_150_p2 );

    SC_METHOD(thread_tmp_18_fu_196_p1);
    sensitive << ( tmp_6_reg_111 );

    SC_METHOD(thread_tmp_1_fu_172_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( invdar_reg_100 );

    SC_METHOD(thread_tmp_2_fu_230_p2);
    sensitive << ( notrhs_fu_224_p2 );
    sensitive << ( notlhs_fu_218_p2 );

    SC_METHOD(thread_tmp_3_fu_204_p4);
    sensitive << ( shift_buf_1_2_to_int_fu_200_p1 );

    SC_METHOD(thread_tmp_4_fu_214_p1);
    sensitive << ( shift_buf_1_2_to_int_fu_200_p1 );

    SC_METHOD(thread_tmp_5_fu_250_p1);
    sensitive << ( shift_buf_1_to_int_fu_236_p1 );

    SC_METHOD(thread_tmp_7_fu_266_p2);
    sensitive << ( notrhs5_fu_260_p2 );
    sensitive << ( notlhs4_fu_254_p2 );

    SC_METHOD(thread_tmp_8_fu_240_p4);
    sensitive << ( shift_buf_1_to_int_fu_236_p1 );

    SC_METHOD(thread_tmp_9_fu_307_p2);
    sensitive << ( ap_reg_ppstg_tmp_2_reg_383_pp0_it3 );
    sensitive << ( tmp_7_reg_388 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_52 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_reg_ppiten_pp0_it5 );
    sensitive << ( ap_sig_bdd_72 );
    sensitive << ( ap_reg_ppiten_pp0_it6 );
    sensitive << ( tmp_1_reg_348 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_3 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00001";
    ap_reg_ppiten_pp0_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it2 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it3 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it4 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it5 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it6 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "peaks_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, samples_V_dout, "(port)samples_V_dout");
    sc_trace(mVcdFile, samples_V_empty_n, "(port)samples_V_empty_n");
    sc_trace(mVcdFile, samples_V_read, "(port)samples_V_read");
    sc_trace(mVcdFile, amplitude_V_din, "(port)amplitude_V_din");
    sc_trace(mVcdFile, amplitude_V_full_n, "(port)amplitude_V_full_n");
    sc_trace(mVcdFile, amplitude_V_write, "(port)amplitude_V_write");
    sc_trace(mVcdFile, locations_V_din, "(port)locations_V_din");
    sc_trace(mVcdFile, locations_V_full_n, "(port)locations_V_full_n");
    sc_trace(mVcdFile, locations_V_write, "(port)locations_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_21, "ap_sig_bdd_21");
    sc_trace(mVcdFile, tmp_6_reg_111, "tmp_6_reg_111");
    sc_trace(mVcdFile, shift_buf_1_2_reg_122, "shift_buf_1_2_reg_122");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, exitcond_reg_362, "exitcond_reg_362");
    sc_trace(mVcdFile, ap_sig_bdd_52, "ap_sig_bdd_52");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it2, "ap_reg_ppiten_pp0_it2");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it3, "ap_reg_ppiten_pp0_it3");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it4, "ap_reg_ppiten_pp0_it4");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it5, "ap_reg_ppiten_pp0_it5");
    sc_trace(mVcdFile, or_cond_reg_409, "or_cond_reg_409");
    sc_trace(mVcdFile, ap_sig_bdd_72, "ap_sig_bdd_72");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it6, "ap_reg_ppiten_pp0_it6");
    sc_trace(mVcdFile, shift_buf_1_9_reg_132, "shift_buf_1_9_reg_132");
    sc_trace(mVcdFile, ap_reg_ppstg_shift_buf_1_9_reg_132_pp0_it2, "ap_reg_ppstg_shift_buf_1_9_reg_132_pp0_it2");
    sc_trace(mVcdFile, ap_reg_ppstg_shift_buf_1_9_reg_132_pp0_it3, "ap_reg_ppstg_shift_buf_1_9_reg_132_pp0_it3");
    sc_trace(mVcdFile, ap_reg_ppstg_shift_buf_1_9_reg_132_pp0_it4, "ap_reg_ppstg_shift_buf_1_9_reg_132_pp0_it4");
    sc_trace(mVcdFile, ap_reg_ppstg_shift_buf_1_9_reg_132_pp0_it5, "ap_reg_ppstg_shift_buf_1_9_reg_132_pp0_it5");
    sc_trace(mVcdFile, indvarinc_fu_156_p2, "indvarinc_fu_156_p2");
    sc_trace(mVcdFile, indvarinc_reg_343, "indvarinc_reg_343");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_92, "ap_sig_bdd_92");
    sc_trace(mVcdFile, tmp_1_fu_172_p2, "tmp_1_fu_172_p2");
    sc_trace(mVcdFile, tmp_1_reg_348, "tmp_1_reg_348");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_103, "ap_sig_bdd_103");
    sc_trace(mVcdFile, exitcond_fu_184_p2, "exitcond_fu_184_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_3, "ap_sig_cseq_ST_pp0_stg0_fsm_3");
    sc_trace(mVcdFile, ap_sig_bdd_113, "ap_sig_bdd_113");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_362_pp0_it1, "ap_reg_ppstg_exitcond_reg_362_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_362_pp0_it2, "ap_reg_ppstg_exitcond_reg_362_pp0_it2");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_362_pp0_it3, "ap_reg_ppstg_exitcond_reg_362_pp0_it3");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_362_pp0_it4, "ap_reg_ppstg_exitcond_reg_362_pp0_it4");
    sc_trace(mVcdFile, i_fu_190_p2, "i_fu_190_p2");
    sc_trace(mVcdFile, tmp_18_fu_196_p1, "tmp_18_fu_196_p1");
    sc_trace(mVcdFile, tmp_18_reg_371, "tmp_18_reg_371");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_18_reg_371_pp0_it1, "ap_reg_ppstg_tmp_18_reg_371_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_18_reg_371_pp0_it2, "ap_reg_ppstg_tmp_18_reg_371_pp0_it2");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_18_reg_371_pp0_it3, "ap_reg_ppstg_tmp_18_reg_371_pp0_it3");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_18_reg_371_pp0_it4, "ap_reg_ppstg_tmp_18_reg_371_pp0_it4");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_18_reg_371_pp0_it5, "ap_reg_ppstg_tmp_18_reg_371_pp0_it5");
    sc_trace(mVcdFile, tmp_20_reg_376, "tmp_20_reg_376");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_20_reg_376_pp0_it2, "ap_reg_ppstg_tmp_20_reg_376_pp0_it2");
    sc_trace(mVcdFile, tmp_2_fu_230_p2, "tmp_2_fu_230_p2");
    sc_trace(mVcdFile, tmp_2_reg_383, "tmp_2_reg_383");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_2_reg_383_pp0_it2, "ap_reg_ppstg_tmp_2_reg_383_pp0_it2");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_2_reg_383_pp0_it3, "ap_reg_ppstg_tmp_2_reg_383_pp0_it3");
    sc_trace(mVcdFile, tmp_7_fu_266_p2, "tmp_7_fu_266_p2");
    sc_trace(mVcdFile, tmp_7_reg_388, "tmp_7_reg_388");
    sc_trace(mVcdFile, tmp_14_fu_301_p2, "tmp_14_fu_301_p2");
    sc_trace(mVcdFile, tmp_14_reg_394, "tmp_14_reg_394");
    sc_trace(mVcdFile, tmp_11_fu_311_p2, "tmp_11_fu_311_p2");
    sc_trace(mVcdFile, tmp_11_reg_399, "tmp_11_reg_399");
    sc_trace(mVcdFile, tmp_17_fu_321_p2, "tmp_17_fu_321_p2");
    sc_trace(mVcdFile, tmp_17_reg_404, "tmp_17_reg_404");
    sc_trace(mVcdFile, or_cond_fu_327_p2, "or_cond_fu_327_p2");
    sc_trace(mVcdFile, invdar_phi_fu_104_p4, "invdar_phi_fu_104_p4");
    sc_trace(mVcdFile, invdar_reg_100, "invdar_reg_100");
    sc_trace(mVcdFile, shift_buf_1_2_phi_fu_125_p4, "shift_buf_1_2_phi_fu_125_p4");
    sc_trace(mVcdFile, shift_buf_1_9_phi_fu_137_p4, "shift_buf_1_9_phi_fu_137_p4");
    sc_trace(mVcdFile, shift_buf_fu_72, "shift_buf_fu_72");
    sc_trace(mVcdFile, shift_buf_1_fu_76, "shift_buf_1_fu_76");
    sc_trace(mVcdFile, shift_buf_1_2_to_int_fu_200_p1, "shift_buf_1_2_to_int_fu_200_p1");
    sc_trace(mVcdFile, tmp_3_fu_204_p4, "tmp_3_fu_204_p4");
    sc_trace(mVcdFile, tmp_4_fu_214_p1, "tmp_4_fu_214_p1");
    sc_trace(mVcdFile, notrhs_fu_224_p2, "notrhs_fu_224_p2");
    sc_trace(mVcdFile, notlhs_fu_218_p2, "notlhs_fu_218_p2");
    sc_trace(mVcdFile, shift_buf_1_to_int_fu_236_p1, "shift_buf_1_to_int_fu_236_p1");
    sc_trace(mVcdFile, tmp_8_fu_240_p4, "tmp_8_fu_240_p4");
    sc_trace(mVcdFile, tmp_5_fu_250_p1, "tmp_5_fu_250_p1");
    sc_trace(mVcdFile, notrhs5_fu_260_p2, "notrhs5_fu_260_p2");
    sc_trace(mVcdFile, notlhs4_fu_254_p2, "notlhs4_fu_254_p2");
    sc_trace(mVcdFile, shift_buf_0_to_int_fu_272_p1, "shift_buf_0_to_int_fu_272_p1");
    sc_trace(mVcdFile, tmp_12_fu_275_p4, "tmp_12_fu_275_p4");
    sc_trace(mVcdFile, tmp_13_fu_285_p1, "tmp_13_fu_285_p1");
    sc_trace(mVcdFile, notrhs9_fu_295_p2, "notrhs9_fu_295_p2");
    sc_trace(mVcdFile, notlhs8_fu_289_p2, "notlhs8_fu_289_p2");
    sc_trace(mVcdFile, tmp_9_fu_307_p2, "tmp_9_fu_307_p2");
    sc_trace(mVcdFile, grp_fu_144_p2, "grp_fu_144_p2");
    sc_trace(mVcdFile, tmp_15_fu_317_p2, "tmp_15_fu_317_p2");
    sc_trace(mVcdFile, grp_fu_150_p2, "grp_fu_150_p2");
    sc_trace(mVcdFile, grp_fu_144_ce, "grp_fu_144_ce");
    sc_trace(mVcdFile, grp_fu_144_opcode, "grp_fu_144_opcode");
    sc_trace(mVcdFile, grp_fu_150_ce, "grp_fu_150_ce");
    sc_trace(mVcdFile, grp_fu_150_opcode, "grp_fu_150_opcode");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st11_fsm_4, "ap_sig_cseq_ST_st11_fsm_4");
    sc_trace(mVcdFile, ap_sig_bdd_334, "ap_sig_bdd_334");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("peaks.hdltvin.dat");
    mHdltvoutHandle.open("peaks.hdltvout.dat");
}

peaks::~peaks() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete peaks_fcmp_32ns_32ns_1_4_U0;
    delete peaks_fcmp_32ns_32ns_1_4_U1;
}

void peaks::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
    } else {
        if ((!((ap_sig_bdd_52.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()))) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_3.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_184_p2.read()))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
                    !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_348.read()))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((!((ap_sig_bdd_52.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()))) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_3.read()))) {
            ap_reg_ppiten_pp0_it1 = ap_reg_ppiten_pp0_it0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
                    !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_348.read()))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it2 = ap_const_logic_0;
    } else {
        if (!((ap_sig_bdd_52.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read())))) {
            if (!esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read())) {
                ap_reg_ppiten_pp0_it2 = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read())) {
                ap_reg_ppiten_pp0_it2 = ap_reg_ppiten_pp0_it1.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it3 = ap_const_logic_0;
    } else {
        if (!((ap_sig_bdd_52.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read())))) {
            ap_reg_ppiten_pp0_it3 = ap_reg_ppiten_pp0_it2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it4 = ap_const_logic_0;
    } else {
        if (!((ap_sig_bdd_52.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read())))) {
            ap_reg_ppiten_pp0_it4 = ap_reg_ppiten_pp0_it3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it5 = ap_const_logic_0;
    } else {
        if (!((ap_sig_bdd_52.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read())))) {
            ap_reg_ppiten_pp0_it5 = ap_reg_ppiten_pp0_it4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it6 = ap_const_logic_0;
    } else {
        if (!((ap_sig_bdd_52.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read())))) {
            ap_reg_ppiten_pp0_it6 = ap_reg_ppiten_pp0_it5.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
                    !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_348.read()))) {
            ap_reg_ppiten_pp0_it6 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_348.read()))) {
        invdar_reg_100 = indvarinc_reg_343.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        invdar_reg_100 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_348.read()))) {
        shift_buf_1_2_reg_122 = shift_buf_1_fu_76.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
                !((ap_sig_bdd_52.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()))) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_362_pp0_it1.read()))) {
        shift_buf_1_2_reg_122 = shift_buf_1_9_reg_132.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_348.read()))) {
        shift_buf_1_9_reg_132 = shift_buf_fu_72.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
                !((ap_sig_bdd_52.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()))) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_362_pp0_it1.read()))) {
        shift_buf_1_9_reg_132 = tmp_20_reg_376.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_348.read()))) {
        tmp_6_reg_111 = ap_const_lv17_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
                !((ap_sig_bdd_52.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()))) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_184_p2.read()))) {
        tmp_6_reg_111 = i_fu_190_p2.read();
    }
    if ((!((ap_sig_bdd_52.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_3.read()))) {
        ap_reg_ppstg_exitcond_reg_362_pp0_it1 = exitcond_reg_362.read();
        ap_reg_ppstg_tmp_18_reg_371_pp0_it1 = tmp_18_reg_371.read();
        exitcond_reg_362 = exitcond_fu_184_p2.read();
    }
    if (!((ap_sig_bdd_52.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read())))) {
        ap_reg_ppstg_exitcond_reg_362_pp0_it2 = ap_reg_ppstg_exitcond_reg_362_pp0_it1.read();
        ap_reg_ppstg_exitcond_reg_362_pp0_it3 = ap_reg_ppstg_exitcond_reg_362_pp0_it2.read();
        ap_reg_ppstg_exitcond_reg_362_pp0_it4 = ap_reg_ppstg_exitcond_reg_362_pp0_it3.read();
        ap_reg_ppstg_shift_buf_1_9_reg_132_pp0_it2 = shift_buf_1_9_reg_132.read();
        ap_reg_ppstg_shift_buf_1_9_reg_132_pp0_it3 = ap_reg_ppstg_shift_buf_1_9_reg_132_pp0_it2.read();
        ap_reg_ppstg_shift_buf_1_9_reg_132_pp0_it4 = ap_reg_ppstg_shift_buf_1_9_reg_132_pp0_it3.read();
        ap_reg_ppstg_shift_buf_1_9_reg_132_pp0_it5 = ap_reg_ppstg_shift_buf_1_9_reg_132_pp0_it4.read();
        ap_reg_ppstg_tmp_18_reg_371_pp0_it2 = ap_reg_ppstg_tmp_18_reg_371_pp0_it1.read();
        ap_reg_ppstg_tmp_18_reg_371_pp0_it3 = ap_reg_ppstg_tmp_18_reg_371_pp0_it2.read();
        ap_reg_ppstg_tmp_18_reg_371_pp0_it4 = ap_reg_ppstg_tmp_18_reg_371_pp0_it3.read();
        ap_reg_ppstg_tmp_18_reg_371_pp0_it5 = ap_reg_ppstg_tmp_18_reg_371_pp0_it4.read();
        ap_reg_ppstg_tmp_20_reg_376_pp0_it2 = tmp_20_reg_376.read();
        ap_reg_ppstg_tmp_2_reg_383_pp0_it2 = tmp_2_reg_383.read();
        ap_reg_ppstg_tmp_2_reg_383_pp0_it3 = ap_reg_ppstg_tmp_2_reg_383_pp0_it2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        indvarinc_reg_343 = indvarinc_fu_156_p2.read();
        tmp_1_reg_348 = tmp_1_fu_172_p2.read();
    }
    if ((!((ap_sig_bdd_52.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_362_pp0_it4.read()))) {
        or_cond_reg_409 = or_cond_fu_327_p2.read();
    }
    if ((!((ap_sig_bdd_52.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_362_pp0_it3.read()))) {
        tmp_11_reg_399 = tmp_11_fu_311_p2.read();
        tmp_17_reg_404 = tmp_17_fu_321_p2.read();
    }
    if ((!((ap_sig_bdd_52.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_362_pp0_it2.read()))) {
        tmp_14_reg_394 = tmp_14_fu_301_p2.read();
        tmp_7_reg_388 = tmp_7_fu_266_p2.read();
    }
    if ((!((ap_sig_bdd_52.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_184_p2.read()))) {
        tmp_18_reg_371 = tmp_18_fu_196_p1.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_reg_362.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && !((ap_sig_bdd_52.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_3.read()))) {
        tmp_20_reg_376 = samples_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_reg_362.read(), ap_const_lv1_0) && !((ap_sig_bdd_52.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_3.read()))) {
        tmp_2_reg_383 = tmp_2_fu_230_p2.read();
    }
}

void peaks::thread_amplitude_V_din() {
    amplitude_V_din = ap_reg_ppstg_shift_buf_1_9_reg_132_pp0_it5.read();
}

void peaks::thread_amplitude_V_write() {
    if ((!esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_409.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()) && 
         !((ap_sig_bdd_52.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()))))) {
        amplitude_V_write = ap_const_logic_1;
    } else {
        amplitude_V_write = ap_const_logic_0;
    }
}

void peaks::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_4.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void peaks::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void peaks::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_4.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void peaks::thread_ap_sig_bdd_103() {
    ap_sig_bdd_103 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void peaks::thread_ap_sig_bdd_113() {
    ap_sig_bdd_113 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void peaks::thread_ap_sig_bdd_21() {
    ap_sig_bdd_21 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void peaks::thread_ap_sig_bdd_334() {
    ap_sig_bdd_334 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void peaks::thread_ap_sig_bdd_52() {
    ap_sig_bdd_52 = (esl_seteq<1,1,1>(samples_V_empty_n.read(), ap_const_logic_0) && esl_seteq<1,1,1>(exitcond_reg_362.read(), ap_const_lv1_0));
}

void peaks::thread_ap_sig_bdd_72() {
    ap_sig_bdd_72 = ((esl_seteq<1,1,1>(locations_V_full_n.read(), ap_const_logic_0) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_409.read())) || (!esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_409.read()) && 
  esl_seteq<1,1,1>(amplitude_V_full_n.read(), ap_const_logic_0)));
}

void peaks::thread_ap_sig_bdd_92() {
    ap_sig_bdd_92 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void peaks::thread_ap_sig_cseq_ST_pp0_stg0_fsm_3() {
    if (ap_sig_bdd_113.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_3 = ap_const_logic_0;
    }
}

void peaks::thread_ap_sig_cseq_ST_st11_fsm_4() {
    if (ap_sig_bdd_334.read()) {
        ap_sig_cseq_ST_st11_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st11_fsm_4 = ap_const_logic_0;
    }
}

void peaks::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_21.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void peaks::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_bdd_92.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void peaks::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_bdd_103.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void peaks::thread_exitcond_fu_184_p2() {
    exitcond_fu_184_p2 = (!tmp_6_reg_111.read().is_01() || !ap_const_lv17_1D4C0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_6_reg_111.read() == ap_const_lv17_1D4C0);
}

void peaks::thread_grp_fu_144_ce() {
    if ((!((ap_sig_bdd_52.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_3.read()))) {
        grp_fu_144_ce = ap_const_logic_1;
    } else {
        grp_fu_144_ce = ap_const_logic_0;
    }
}

void peaks::thread_grp_fu_144_opcode() {
    grp_fu_144_opcode = ap_const_lv5_4;
}

void peaks::thread_grp_fu_150_ce() {
    if ((!((ap_sig_bdd_52.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_3.read()))) {
        grp_fu_150_ce = ap_const_logic_1;
    } else {
        grp_fu_150_ce = ap_const_logic_0;
    }
}

void peaks::thread_grp_fu_150_opcode() {
    grp_fu_150_opcode = ap_const_lv5_2;
}

void peaks::thread_i_fu_190_p2() {
    i_fu_190_p2 = (!tmp_6_reg_111.read().is_01() || !ap_const_lv17_1.is_01())? sc_lv<17>(): (sc_biguint<17>(tmp_6_reg_111.read()) + sc_biguint<17>(ap_const_lv17_1));
}

void peaks::thread_indvarinc_fu_156_p2() {
    indvarinc_fu_156_p2 = (!invdar_reg_100.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(invdar_reg_100.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void peaks::thread_invdar_phi_fu_104_p4() {
    invdar_phi_fu_104_p4 = invdar_reg_100.read();
}

void peaks::thread_locations_V_din() {
    locations_V_din = ap_reg_ppstg_tmp_18_reg_371_pp0_it5.read();
}

void peaks::thread_locations_V_write() {
    if ((!esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_409.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()) && 
         !((ap_sig_bdd_52.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()))))) {
        locations_V_write = ap_const_logic_1;
    } else {
        locations_V_write = ap_const_logic_0;
    }
}

void peaks::thread_notlhs4_fu_254_p2() {
    notlhs4_fu_254_p2 = (!tmp_8_fu_240_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_8_fu_240_p4.read() != ap_const_lv8_FF);
}

void peaks::thread_notlhs8_fu_289_p2() {
    notlhs8_fu_289_p2 = (!tmp_12_fu_275_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_12_fu_275_p4.read() != ap_const_lv8_FF);
}

void peaks::thread_notlhs_fu_218_p2() {
    notlhs_fu_218_p2 = (!tmp_3_fu_204_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_3_fu_204_p4.read() != ap_const_lv8_FF);
}

void peaks::thread_notrhs5_fu_260_p2() {
    notrhs5_fu_260_p2 = (!tmp_5_fu_250_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_5_fu_250_p1.read() == ap_const_lv23_0);
}

void peaks::thread_notrhs9_fu_295_p2() {
    notrhs9_fu_295_p2 = (!tmp_13_fu_285_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_13_fu_285_p1.read() == ap_const_lv23_0);
}

void peaks::thread_notrhs_fu_224_p2() {
    notrhs_fu_224_p2 = (!tmp_4_fu_214_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_4_fu_214_p1.read() == ap_const_lv23_0);
}

void peaks::thread_or_cond_fu_327_p2() {
    or_cond_fu_327_p2 = (tmp_11_reg_399.read() & tmp_17_reg_404.read());
}

void peaks::thread_samples_V_read() {
    if ((esl_seteq<1,1,1>(exitcond_reg_362.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !((ap_sig_bdd_52.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_3.read()))) {
        samples_V_read = ap_const_logic_1;
    } else {
        samples_V_read = ap_const_logic_0;
    }
}

void peaks::thread_shift_buf_0_to_int_fu_272_p1() {
    shift_buf_0_to_int_fu_272_p1 = ap_reg_ppstg_tmp_20_reg_376_pp0_it2.read();
}

void peaks::thread_shift_buf_1_2_phi_fu_125_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_362_pp0_it1.read()))) {
        shift_buf_1_2_phi_fu_125_p4 = shift_buf_1_9_reg_132.read();
    } else {
        shift_buf_1_2_phi_fu_125_p4 = shift_buf_1_2_reg_122.read();
    }
}

void peaks::thread_shift_buf_1_2_to_int_fu_200_p1() {
    shift_buf_1_2_to_int_fu_200_p1 = shift_buf_1_2_phi_fu_125_p4.read();
}

void peaks::thread_shift_buf_1_9_phi_fu_137_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_362_pp0_it1.read()))) {
        shift_buf_1_9_phi_fu_137_p4 = tmp_20_reg_376.read();
    } else {
        shift_buf_1_9_phi_fu_137_p4 = shift_buf_1_9_reg_132.read();
    }
}

void peaks::thread_shift_buf_1_fu_76() {
    shift_buf_1_fu_76 = ap_const_lv32_0;
}

void peaks::thread_shift_buf_1_to_int_fu_236_p1() {
    shift_buf_1_to_int_fu_236_p1 = ap_reg_ppstg_shift_buf_1_9_reg_132_pp0_it2.read();
}

void peaks::thread_shift_buf_fu_72() {
    shift_buf_fu_72 = ap_const_lv32_0;
}

void peaks::thread_tmp_11_fu_311_p2() {
    tmp_11_fu_311_p2 = (tmp_9_fu_307_p2.read() & grp_fu_144_p2.read());
}

void peaks::thread_tmp_12_fu_275_p4() {
    tmp_12_fu_275_p4 = shift_buf_0_to_int_fu_272_p1.read().range(30, 23);
}

void peaks::thread_tmp_13_fu_285_p1() {
    tmp_13_fu_285_p1 = shift_buf_0_to_int_fu_272_p1.read().range(23-1, 0);
}

void peaks::thread_tmp_14_fu_301_p2() {
    tmp_14_fu_301_p2 = (notrhs9_fu_295_p2.read() | notlhs8_fu_289_p2.read());
}

void peaks::thread_tmp_15_fu_317_p2() {
    tmp_15_fu_317_p2 = (tmp_7_reg_388.read() & tmp_14_reg_394.read());
}

void peaks::thread_tmp_17_fu_321_p2() {
    tmp_17_fu_321_p2 = (tmp_15_fu_317_p2.read() & grp_fu_150_p2.read());
}

void peaks::thread_tmp_18_fu_196_p1() {
    tmp_18_fu_196_p1 = esl_zext<32,17>(tmp_6_reg_111.read());
}

void peaks::thread_tmp_1_fu_172_p2() {
    tmp_1_fu_172_p2 = (!invdar_reg_100.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(invdar_reg_100.read() == ap_const_lv2_2);
}

void peaks::thread_tmp_2_fu_230_p2() {
    tmp_2_fu_230_p2 = (notrhs_fu_224_p2.read() | notlhs_fu_218_p2.read());
}

void peaks::thread_tmp_3_fu_204_p4() {
    tmp_3_fu_204_p4 = shift_buf_1_2_to_int_fu_200_p1.read().range(30, 23);
}

void peaks::thread_tmp_4_fu_214_p1() {
    tmp_4_fu_214_p1 = shift_buf_1_2_to_int_fu_200_p1.read().range(23-1, 0);
}

void peaks::thread_tmp_5_fu_250_p1() {
    tmp_5_fu_250_p1 = shift_buf_1_to_int_fu_236_p1.read().range(23-1, 0);
}

void peaks::thread_tmp_7_fu_266_p2() {
    tmp_7_fu_266_p2 = (notrhs5_fu_260_p2.read() | notlhs4_fu_254_p2.read());
}

void peaks::thread_tmp_8_fu_240_p4() {
    tmp_8_fu_240_p4 = shift_buf_1_to_int_fu_236_p1.read().range(30, 23);
}

void peaks::thread_tmp_9_fu_307_p2() {
    tmp_9_fu_307_p2 = (ap_reg_ppstg_tmp_2_reg_383_pp0_it3.read() & tmp_7_reg_388.read());
}

void peaks::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 4 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_348.read())) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            }
            break;
        case 8 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()) && !((ap_sig_bdd_52.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()))) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read())) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && !((ap_sig_bdd_52.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_3.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read())))) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_3;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()) && 
  !((ap_sig_bdd_52.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()))) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
  !((ap_sig_bdd_52.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_72.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_3.read()) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read())))) {
                ap_NS_fsm = ap_ST_st11_fsm_4;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_3;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

void peaks::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"samples_V_dout\" :  \"" << samples_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"samples_V_empty_n\" :  \"" << samples_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"samples_V_read\" :  \"" << samples_V_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"amplitude_V_din\" :  \"" << amplitude_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"amplitude_V_full_n\" :  \"" << amplitude_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"amplitude_V_write\" :  \"" << amplitude_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"locations_V_din\" :  \"" << locations_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"locations_V_full_n\" :  \"" << locations_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"locations_V_write\" :  \"" << locations_V_write.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

