// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="parse_audio,hls_ip_2015_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=3.940000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=64,HLS_SYN_DSP=0,HLS_SYN_FF=369,HLS_SYN_LUT=323}" *)

module parse_audio (
        ap_clk,
        ap_rst,
        signals_V_dout,
        signals_V_empty_n,
        signals_V_read,
        hits_V_dout,
        hits_V_empty_n,
        hits_V_read,
        locs_V_dout,
        locs_V_empty_n,
        locs_V_read,
        pairs_amplitude_V_din,
        pairs_amplitude_V_full_n,
        pairs_amplitude_V_write,
        pairs_duration_V_din,
        pairs_duration_V_full_n,
        pairs_duration_V_write,
        ap_done,
        ap_start,
        ap_idle,
        ap_ready
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_true = 1'b1;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_1 = 4'b1;

input   ap_clk;
input   ap_rst;
input  [31:0] signals_V_dout;
input   signals_V_empty_n;
output   signals_V_read;
input  [31:0] hits_V_dout;
input   hits_V_empty_n;
output   hits_V_read;
input  [31:0] locs_V_dout;
input   locs_V_empty_n;
output   locs_V_read;
output  [31:0] pairs_amplitude_V_din;
input   pairs_amplitude_V_full_n;
output   pairs_amplitude_V_write;
output  [31:0] pairs_duration_V_din;
input   pairs_duration_V_full_n;
output   pairs_duration_V_write;
output   ap_done;
input   ap_start;
output   ap_idle;
output   ap_ready;

reg ap_idle;
wire   [13:0] sig_buf_i_address0;
wire    sig_buf_i_ce0;
wire    sig_buf_i_we0;
wire   [31:0] sig_buf_i_d0;
wire   [31:0] sig_buf_i_q0;
wire   [13:0] sig_buf_t_address0;
wire    sig_buf_t_ce0;
wire    sig_buf_t_we0;
wire   [31:0] sig_buf_t_d0;
wire   [31:0] sig_buf_t_q0;
wire    sig_buf_U_ap_dummy_ce;
wire   [3:0] loc_buf_i_address0;
wire    loc_buf_i_ce0;
wire    loc_buf_i_we0;
wire   [31:0] loc_buf_i_d0;
wire   [31:0] loc_buf_i_q0;
wire   [3:0] loc_buf_i_address1;
wire    loc_buf_i_ce1;
wire   [31:0] loc_buf_i_q1;
wire   [3:0] loc_buf_t_address0;
wire    loc_buf_t_ce0;
wire    loc_buf_t_we0;
wire   [31:0] loc_buf_t_d0;
wire   [31:0] loc_buf_t_q0;
wire   [3:0] loc_buf_t_address1;
wire    loc_buf_t_ce1;
wire   [31:0] loc_buf_t_q1;
wire    loc_buf_U_ap_dummy_ce;
wire    parse_audio_buffer_signal_U0_ap_start;
wire    parse_audio_buffer_signal_U0_ap_done;
wire    parse_audio_buffer_signal_U0_ap_continue;
wire    parse_audio_buffer_signal_U0_ap_idle;
wire    parse_audio_buffer_signal_U0_ap_ready;
wire   [31:0] parse_audio_buffer_signal_U0_signals_V_dout;
wire    parse_audio_buffer_signal_U0_signals_V_empty_n;
wire    parse_audio_buffer_signal_U0_signals_V_read;
wire   [13:0] parse_audio_buffer_signal_U0_amp_buf_address0;
wire    parse_audio_buffer_signal_U0_amp_buf_ce0;
wire    parse_audio_buffer_signal_U0_amp_buf_we0;
wire   [31:0] parse_audio_buffer_signal_U0_amp_buf_d0;
wire    ap_chn_write_parse_audio_buffer_signal_U0_sig_buf;
wire    parse_audio_buffer_signal_U0_amp_buf_pipo_status;
wire    parse_audio_buffer_target_U0_ap_start;
wire    parse_audio_buffer_target_U0_ap_done;
wire    parse_audio_buffer_target_U0_ap_continue;
wire    parse_audio_buffer_target_U0_ap_idle;
wire    parse_audio_buffer_target_U0_ap_ready;
wire   [31:0] parse_audio_buffer_target_U0_hits_V_dout;
wire    parse_audio_buffer_target_U0_hits_V_empty_n;
wire    parse_audio_buffer_target_U0_hits_V_read;
wire   [31:0] parse_audio_buffer_target_U0_locs_V_dout;
wire    parse_audio_buffer_target_U0_locs_V_empty_n;
wire    parse_audio_buffer_target_U0_locs_V_read;
wire   [3:0] parse_audio_buffer_target_U0_loc_buf_address0;
wire    parse_audio_buffer_target_U0_loc_buf_ce0;
wire    parse_audio_buffer_target_U0_loc_buf_we0;
wire   [31:0] parse_audio_buffer_target_U0_loc_buf_d0;
wire    ap_chn_write_parse_audio_buffer_target_U0_loc_buf;
wire    parse_audio_buffer_target_U0_loc_buf_pipo_status;
wire    parse_audio_parse_signal_U0_ap_start;
wire    parse_audio_parse_signal_U0_ap_done;
wire    parse_audio_parse_signal_U0_ap_continue;
wire    parse_audio_parse_signal_U0_ap_idle;
wire    parse_audio_parse_signal_U0_ap_ready;
wire   [13:0] parse_audio_parse_signal_U0_signal_r_address0;
wire    parse_audio_parse_signal_U0_signal_r_ce0;
wire   [31:0] parse_audio_parse_signal_U0_signal_r_q0;
wire   [3:0] parse_audio_parse_signal_U0_locs_address0;
wire    parse_audio_parse_signal_U0_locs_ce0;
wire   [31:0] parse_audio_parse_signal_U0_locs_q0;
wire   [3:0] parse_audio_parse_signal_U0_locs_address1;
wire    parse_audio_parse_signal_U0_locs_ce1;
wire   [31:0] parse_audio_parse_signal_U0_locs_q1;
wire   [31:0] parse_audio_parse_signal_U0_pairs_amplitude_V_din;
wire    parse_audio_parse_signal_U0_pairs_amplitude_V_full_n;
wire    parse_audio_parse_signal_U0_pairs_amplitude_V_write;
wire   [31:0] parse_audio_parse_signal_U0_pairs_duration_V_din;
wire    parse_audio_parse_signal_U0_pairs_duration_V_full_n;
wire    parse_audio_parse_signal_U0_pairs_duration_V_write;
wire    ap_sig_hs_continue;
wire    sig_buf_i_full_n;
wire    sig_buf_i_write;
wire    sig_buf_t_empty_n;
wire    sig_buf_t_read;
wire    loc_buf_i_full_n;
wire    loc_buf_i_write;
wire    loc_buf_t_empty_n;
wire    loc_buf_t_read;
wire   [31:0] loc_buf_t_d1;
wire    loc_buf_t_we1;
reg    ap_reg_procdone_parse_audio_buffer_signal_U0 = 1'b0;
reg    ap_sig_hs_done;
reg    ap_reg_procdone_parse_audio_buffer_target_U0 = 1'b0;
reg    ap_reg_procdone_parse_audio_parse_signal_U0 = 1'b0;
reg    ap_CS;
reg    ap_sig_top_allready;
reg    ap_reg_ready_parse_audio_buffer_target_U0_ap_ready = 1'b0;
reg    ap_sig_ready_parse_audio_buffer_target_U0_ap_ready;
reg    ap_sig_start_in_parse_audio_buffer_target_U0_ap_start;
reg    ap_reg_ready_parse_audio_buffer_signal_U0_ap_ready = 1'b0;
reg    ap_sig_ready_parse_audio_buffer_signal_U0_ap_ready;
reg    ap_sig_start_in_parse_audio_buffer_signal_U0_ap_start;


parse_audio_sig_buf #(
    .DataWidth( 32 ),
    .AddressRange( 10000 ),
    .AddressWidth( 14 ))
sig_buf_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .i_address0( sig_buf_i_address0 ),
    .i_ce0( sig_buf_i_ce0 ),
    .i_we0( sig_buf_i_we0 ),
    .i_d0( sig_buf_i_d0 ),
    .i_q0( sig_buf_i_q0 ),
    .t_address0( sig_buf_t_address0 ),
    .t_ce0( sig_buf_t_ce0 ),
    .t_we0( sig_buf_t_we0 ),
    .t_d0( sig_buf_t_d0 ),
    .t_q0( sig_buf_t_q0 ),
    .i_ce( sig_buf_U_ap_dummy_ce ),
    .t_ce( sig_buf_U_ap_dummy_ce ),
    .i_full_n( sig_buf_i_full_n ),
    .i_write( sig_buf_i_write ),
    .t_empty_n( sig_buf_t_empty_n ),
    .t_read( sig_buf_t_read )
);

parse_audio_loc_buf #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
loc_buf_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .i_address0( loc_buf_i_address0 ),
    .i_ce0( loc_buf_i_ce0 ),
    .i_we0( loc_buf_i_we0 ),
    .i_d0( loc_buf_i_d0 ),
    .i_q0( loc_buf_i_q0 ),
    .i_address1( loc_buf_i_address1 ),
    .i_ce1( loc_buf_i_ce1 ),
    .i_q1( loc_buf_i_q1 ),
    .t_address0( loc_buf_t_address0 ),
    .t_ce0( loc_buf_t_ce0 ),
    .t_we0( loc_buf_t_we0 ),
    .t_d0( loc_buf_t_d0 ),
    .t_q0( loc_buf_t_q0 ),
    .t_address1( loc_buf_t_address1 ),
    .t_ce1( loc_buf_t_ce1 ),
    .t_q1( loc_buf_t_q1 ),
    .i_ce( loc_buf_U_ap_dummy_ce ),
    .t_ce( loc_buf_U_ap_dummy_ce ),
    .i_full_n( loc_buf_i_full_n ),
    .i_write( loc_buf_i_write ),
    .t_empty_n( loc_buf_t_empty_n ),
    .t_read( loc_buf_t_read )
);

parse_audio_buffer_signal parse_audio_buffer_signal_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( parse_audio_buffer_signal_U0_ap_start ),
    .ap_done( parse_audio_buffer_signal_U0_ap_done ),
    .ap_continue( parse_audio_buffer_signal_U0_ap_continue ),
    .ap_idle( parse_audio_buffer_signal_U0_ap_idle ),
    .ap_ready( parse_audio_buffer_signal_U0_ap_ready ),
    .signals_V_dout( parse_audio_buffer_signal_U0_signals_V_dout ),
    .signals_V_empty_n( parse_audio_buffer_signal_U0_signals_V_empty_n ),
    .signals_V_read( parse_audio_buffer_signal_U0_signals_V_read ),
    .amp_buf_address0( parse_audio_buffer_signal_U0_amp_buf_address0 ),
    .amp_buf_ce0( parse_audio_buffer_signal_U0_amp_buf_ce0 ),
    .amp_buf_we0( parse_audio_buffer_signal_U0_amp_buf_we0 ),
    .amp_buf_d0( parse_audio_buffer_signal_U0_amp_buf_d0 )
);

parse_audio_buffer_target parse_audio_buffer_target_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( parse_audio_buffer_target_U0_ap_start ),
    .ap_done( parse_audio_buffer_target_U0_ap_done ),
    .ap_continue( parse_audio_buffer_target_U0_ap_continue ),
    .ap_idle( parse_audio_buffer_target_U0_ap_idle ),
    .ap_ready( parse_audio_buffer_target_U0_ap_ready ),
    .hits_V_dout( parse_audio_buffer_target_U0_hits_V_dout ),
    .hits_V_empty_n( parse_audio_buffer_target_U0_hits_V_empty_n ),
    .hits_V_read( parse_audio_buffer_target_U0_hits_V_read ),
    .locs_V_dout( parse_audio_buffer_target_U0_locs_V_dout ),
    .locs_V_empty_n( parse_audio_buffer_target_U0_locs_V_empty_n ),
    .locs_V_read( parse_audio_buffer_target_U0_locs_V_read ),
    .loc_buf_address0( parse_audio_buffer_target_U0_loc_buf_address0 ),
    .loc_buf_ce0( parse_audio_buffer_target_U0_loc_buf_ce0 ),
    .loc_buf_we0( parse_audio_buffer_target_U0_loc_buf_we0 ),
    .loc_buf_d0( parse_audio_buffer_target_U0_loc_buf_d0 )
);

parse_audio_parse_signal parse_audio_parse_signal_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( parse_audio_parse_signal_U0_ap_start ),
    .ap_done( parse_audio_parse_signal_U0_ap_done ),
    .ap_continue( parse_audio_parse_signal_U0_ap_continue ),
    .ap_idle( parse_audio_parse_signal_U0_ap_idle ),
    .ap_ready( parse_audio_parse_signal_U0_ap_ready ),
    .signal_r_address0( parse_audio_parse_signal_U0_signal_r_address0 ),
    .signal_r_ce0( parse_audio_parse_signal_U0_signal_r_ce0 ),
    .signal_r_q0( parse_audio_parse_signal_U0_signal_r_q0 ),
    .locs_address0( parse_audio_parse_signal_U0_locs_address0 ),
    .locs_ce0( parse_audio_parse_signal_U0_locs_ce0 ),
    .locs_q0( parse_audio_parse_signal_U0_locs_q0 ),
    .locs_address1( parse_audio_parse_signal_U0_locs_address1 ),
    .locs_ce1( parse_audio_parse_signal_U0_locs_ce1 ),
    .locs_q1( parse_audio_parse_signal_U0_locs_q1 ),
    .pairs_amplitude_V_din( parse_audio_parse_signal_U0_pairs_amplitude_V_din ),
    .pairs_amplitude_V_full_n( parse_audio_parse_signal_U0_pairs_amplitude_V_full_n ),
    .pairs_amplitude_V_write( parse_audio_parse_signal_U0_pairs_amplitude_V_write ),
    .pairs_duration_V_din( parse_audio_parse_signal_U0_pairs_duration_V_din ),
    .pairs_duration_V_full_n( parse_audio_parse_signal_U0_pairs_duration_V_full_n ),
    .pairs_duration_V_write( parse_audio_parse_signal_U0_pairs_duration_V_write )
);



always @ (posedge ap_clk) begin : ap_ret_ap_reg_procdone_parse_audio_buffer_signal_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_parse_audio_buffer_signal_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_parse_audio_buffer_signal_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == parse_audio_buffer_signal_U0_ap_done)) begin
            ap_reg_procdone_parse_audio_buffer_signal_U0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_procdone_parse_audio_buffer_target_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_parse_audio_buffer_target_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_parse_audio_buffer_target_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == parse_audio_buffer_target_U0_ap_done)) begin
            ap_reg_procdone_parse_audio_buffer_target_U0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_procdone_parse_audio_parse_signal_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_parse_audio_parse_signal_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_parse_audio_parse_signal_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == parse_audio_parse_signal_U0_ap_done)) begin
            ap_reg_procdone_parse_audio_parse_signal_U0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ready_parse_audio_buffer_signal_U0_ap_ready
    if (ap_rst == 1'b1) begin
        ap_reg_ready_parse_audio_buffer_signal_U0_ap_ready <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_top_allready))) begin
            ap_reg_ready_parse_audio_buffer_signal_U0_ap_ready <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == parse_audio_buffer_signal_U0_ap_ready)) begin
            ap_reg_ready_parse_audio_buffer_signal_U0_ap_ready <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ready_parse_audio_buffer_target_U0_ap_ready
    if (ap_rst == 1'b1) begin
        ap_reg_ready_parse_audio_buffer_target_U0_ap_ready <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_top_allready))) begin
            ap_reg_ready_parse_audio_buffer_target_U0_ap_ready <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == parse_audio_buffer_target_U0_ap_ready)) begin
            ap_reg_ready_parse_audio_buffer_target_U0_ap_ready <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_CS <= ap_const_logic_0;
end

always @ (parse_audio_buffer_signal_U0_ap_idle or parse_audio_buffer_target_U0_ap_idle or parse_audio_parse_signal_U0_ap_idle or sig_buf_t_empty_n or loc_buf_t_empty_n) begin
    if (((ap_const_logic_1 == parse_audio_buffer_signal_U0_ap_idle) & (ap_const_logic_1 == parse_audio_buffer_target_U0_ap_idle) & (ap_const_logic_1 == parse_audio_parse_signal_U0_ap_idle) & (ap_const_logic_0 == sig_buf_t_empty_n) & (ap_const_logic_0 == loc_buf_t_empty_n))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (parse_audio_parse_signal_U0_ap_done) begin
    if ((ap_const_logic_1 == parse_audio_parse_signal_U0_ap_done)) begin
        ap_sig_hs_done = ap_const_logic_1;
    end else begin
        ap_sig_hs_done = ap_const_logic_0;
    end
end

always @ (parse_audio_buffer_signal_U0_ap_ready or ap_reg_ready_parse_audio_buffer_signal_U0_ap_ready) begin
    if ((ap_const_logic_0 == ap_reg_ready_parse_audio_buffer_signal_U0_ap_ready)) begin
        ap_sig_ready_parse_audio_buffer_signal_U0_ap_ready = parse_audio_buffer_signal_U0_ap_ready;
    end else begin
        ap_sig_ready_parse_audio_buffer_signal_U0_ap_ready = ap_const_logic_1;
    end
end

always @ (parse_audio_buffer_target_U0_ap_ready or ap_reg_ready_parse_audio_buffer_target_U0_ap_ready) begin
    if ((ap_const_logic_0 == ap_reg_ready_parse_audio_buffer_target_U0_ap_ready)) begin
        ap_sig_ready_parse_audio_buffer_target_U0_ap_ready = parse_audio_buffer_target_U0_ap_ready;
    end else begin
        ap_sig_ready_parse_audio_buffer_target_U0_ap_ready = ap_const_logic_1;
    end
end

always @ (ap_start or ap_reg_ready_parse_audio_buffer_signal_U0_ap_ready) begin
    if (((ap_const_logic_1 == ap_start) & (ap_const_logic_0 == ap_reg_ready_parse_audio_buffer_signal_U0_ap_ready))) begin
        ap_sig_start_in_parse_audio_buffer_signal_U0_ap_start = ap_const_logic_1;
    end else begin
        ap_sig_start_in_parse_audio_buffer_signal_U0_ap_start = ap_const_logic_0;
    end
end

always @ (ap_start or ap_reg_ready_parse_audio_buffer_target_U0_ap_ready) begin
    if (((ap_const_logic_0 == ap_reg_ready_parse_audio_buffer_target_U0_ap_ready) & (ap_const_logic_1 == ap_start))) begin
        ap_sig_start_in_parse_audio_buffer_target_U0_ap_start = ap_const_logic_1;
    end else begin
        ap_sig_start_in_parse_audio_buffer_target_U0_ap_start = ap_const_logic_0;
    end
end

always @ (ap_sig_ready_parse_audio_buffer_target_U0_ap_ready or ap_sig_ready_parse_audio_buffer_signal_U0_ap_ready) begin
    if (((ap_const_logic_1 == ap_sig_ready_parse_audio_buffer_target_U0_ap_ready) & (ap_const_logic_1 == ap_sig_ready_parse_audio_buffer_signal_U0_ap_ready))) begin
        ap_sig_top_allready = ap_const_logic_1;
    end else begin
        ap_sig_top_allready = ap_const_logic_0;
    end
end

assign ap_chn_write_parse_audio_buffer_signal_U0_sig_buf = parse_audio_buffer_signal_U0_ap_done;

assign ap_chn_write_parse_audio_buffer_target_U0_loc_buf = parse_audio_buffer_target_U0_ap_done;

assign ap_done = ap_sig_hs_done;

assign ap_ready = ap_sig_top_allready;

assign ap_sig_hs_continue = ap_const_logic_1;

assign hits_V_read = parse_audio_buffer_target_U0_hits_V_read;

assign loc_buf_U_ap_dummy_ce = ap_const_logic_1;

assign loc_buf_i_address0 = parse_audio_buffer_target_U0_loc_buf_address0;

assign loc_buf_i_address1 = ap_const_lv4_0;

assign loc_buf_i_ce0 = parse_audio_buffer_target_U0_loc_buf_ce0;

assign loc_buf_i_ce1 = ap_const_logic_0;

assign loc_buf_i_d0 = parse_audio_buffer_target_U0_loc_buf_d0;

assign loc_buf_i_we0 = parse_audio_buffer_target_U0_loc_buf_we0;

assign loc_buf_i_write = parse_audio_buffer_target_U0_ap_done;

assign loc_buf_t_address0 = parse_audio_parse_signal_U0_locs_address0;

assign loc_buf_t_address1 = parse_audio_parse_signal_U0_locs_address1;

assign loc_buf_t_ce0 = parse_audio_parse_signal_U0_locs_ce0;

assign loc_buf_t_ce1 = parse_audio_parse_signal_U0_locs_ce1;

assign loc_buf_t_d0 = ap_const_lv32_0;

assign loc_buf_t_d1 = ap_const_lv32_0;

assign loc_buf_t_read = parse_audio_parse_signal_U0_ap_ready;

assign loc_buf_t_we0 = ap_const_logic_0;

assign loc_buf_t_we1 = ap_const_logic_0;

assign locs_V_read = parse_audio_buffer_target_U0_locs_V_read;

assign pairs_amplitude_V_din = parse_audio_parse_signal_U0_pairs_amplitude_V_din;

assign pairs_amplitude_V_write = parse_audio_parse_signal_U0_pairs_amplitude_V_write;

assign pairs_duration_V_din = parse_audio_parse_signal_U0_pairs_duration_V_din;

assign pairs_duration_V_write = parse_audio_parse_signal_U0_pairs_duration_V_write;

assign parse_audio_buffer_signal_U0_amp_buf_pipo_status = sig_buf_i_full_n;

assign parse_audio_buffer_signal_U0_ap_continue = parse_audio_buffer_signal_U0_amp_buf_pipo_status;

assign parse_audio_buffer_signal_U0_ap_start = ap_sig_start_in_parse_audio_buffer_signal_U0_ap_start;

assign parse_audio_buffer_signal_U0_signals_V_dout = signals_V_dout;

assign parse_audio_buffer_signal_U0_signals_V_empty_n = signals_V_empty_n;

assign parse_audio_buffer_target_U0_ap_continue = parse_audio_buffer_target_U0_loc_buf_pipo_status;

assign parse_audio_buffer_target_U0_ap_start = ap_sig_start_in_parse_audio_buffer_target_U0_ap_start;

assign parse_audio_buffer_target_U0_hits_V_dout = hits_V_dout;

assign parse_audio_buffer_target_U0_hits_V_empty_n = hits_V_empty_n;

assign parse_audio_buffer_target_U0_loc_buf_pipo_status = loc_buf_i_full_n;

assign parse_audio_buffer_target_U0_locs_V_dout = locs_V_dout;

assign parse_audio_buffer_target_U0_locs_V_empty_n = locs_V_empty_n;

assign parse_audio_parse_signal_U0_ap_continue = ap_sig_hs_continue;

assign parse_audio_parse_signal_U0_ap_start = (sig_buf_t_empty_n & loc_buf_t_empty_n);

assign parse_audio_parse_signal_U0_locs_q0 = loc_buf_t_q0;

assign parse_audio_parse_signal_U0_locs_q1 = loc_buf_t_q1;

assign parse_audio_parse_signal_U0_pairs_amplitude_V_full_n = pairs_amplitude_V_full_n;

assign parse_audio_parse_signal_U0_pairs_duration_V_full_n = pairs_duration_V_full_n;

assign parse_audio_parse_signal_U0_signal_r_q0 = sig_buf_t_q0;

assign sig_buf_U_ap_dummy_ce = ap_const_logic_1;

assign sig_buf_i_address0 = parse_audio_buffer_signal_U0_amp_buf_address0;

assign sig_buf_i_ce0 = parse_audio_buffer_signal_U0_amp_buf_ce0;

assign sig_buf_i_d0 = parse_audio_buffer_signal_U0_amp_buf_d0;

assign sig_buf_i_we0 = parse_audio_buffer_signal_U0_amp_buf_we0;

assign sig_buf_i_write = parse_audio_buffer_signal_U0_ap_done;

assign sig_buf_t_address0 = parse_audio_parse_signal_U0_signal_r_address0;

assign sig_buf_t_ce0 = parse_audio_parse_signal_U0_signal_r_ce0;

assign sig_buf_t_d0 = ap_const_lv32_0;

assign sig_buf_t_read = parse_audio_parse_signal_U0_ap_ready;

assign sig_buf_t_we0 = ap_const_logic_0;

assign signals_V_read = parse_audio_buffer_signal_U0_signals_V_read;


endmodule //parse_audio

