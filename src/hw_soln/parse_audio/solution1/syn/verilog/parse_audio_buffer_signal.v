// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module parse_audio_buffer_signal (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        signals_V_dout,
        signals_V_empty_n,
        signals_V_read,
        amp_buf_address0,
        amp_buf_ce0,
        amp_buf_we0,
        amp_buf_d0
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 3'b1;
parameter    ap_ST_pp0_stg0_fsm_1 = 3'b10;
parameter    ap_ST_st4_fsm_2 = 3'b100;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv14_0 = 14'b00000000000000;
parameter    ap_const_lv14_2710 = 14'b10011100010000;
parameter    ap_const_lv14_2 = 14'b10;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] signals_V_dout;
input   signals_V_empty_n;
output   signals_V_read;
output  [13:0] amp_buf_address0;
output   amp_buf_ce0;
output   amp_buf_we0;
output  [31:0] amp_buf_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg signals_V_read;
reg amp_buf_ce0;
reg amp_buf_we0;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm = 3'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_22;
reg   [13:0] i_reg_63;
wire   [0:0] tmp_fu_75_p2;
reg   [0:0] tmp_reg_92;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_1;
reg    ap_sig_bdd_49;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_sig_bdd_58;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
wire   [13:0] i_2_fu_81_p2;
reg   [13:0] i_2_reg_96;
reg    ap_sig_bdd_74;
reg   [13:0] i_phi_fu_67_p4;
wire   [63:0] tmp_s_fu_87_p1;
reg    ap_sig_cseq_ST_st4_fsm_2;
reg    ap_sig_bdd_106;
reg   [2:0] ap_NS_fsm;




always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_2)) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_58 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (tmp_fu_75_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_74)) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_58 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(tmp_fu_75_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_74) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_58 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (tmp_fu_75_p2 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(tmp_reg_92 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_58 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        i_reg_63 <= i_2_reg_96;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_74)) begin
        i_reg_63 <= ap_const_lv14_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_58 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(tmp_fu_75_p2 == ap_const_lv1_0))) begin
        i_2_reg_96 <= i_2_fu_81_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_58 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        tmp_reg_92 <= tmp_fu_75_p2;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_58 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_58 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        amp_buf_ce0 = ap_const_logic_1;
    end else begin
        amp_buf_ce0 = ap_const_logic_0;
    end
end

always @ (tmp_reg_92 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_58 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(tmp_reg_92 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_58 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        amp_buf_we0 = ap_const_logic_1;
    end else begin
        amp_buf_we0 = ap_const_logic_0;
    end
end

always @ (ap_done_reg or ap_sig_cseq_ST_st4_fsm_2) begin
    if (((ap_const_logic_1 == ap_done_reg) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_2))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st4_fsm_2) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_2)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_49) begin
    if (ap_sig_bdd_49) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_22) begin
    if (ap_sig_bdd_22) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_106) begin
    if (ap_sig_bdd_106) begin
        ap_sig_cseq_ST_st4_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_2 = ap_const_logic_0;
    end
end

always @ (i_reg_63 or tmp_reg_92 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it1 or i_2_reg_96) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(tmp_reg_92 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        i_phi_fu_67_p4 = i_2_reg_96;
    end else begin
        i_phi_fu_67_p4 = i_reg_63;
    end
end

always @ (tmp_reg_92 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_58 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(tmp_reg_92 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_58 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        signals_V_read = ap_const_logic_1;
    end else begin
        signals_V_read = ap_const_logic_0;
    end
end
always @ (ap_CS_fsm or tmp_fu_75_p2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_58 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_74) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_74) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_pp0_stg0_fsm_1 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_58 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (tmp_fu_75_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_58 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (tmp_fu_75_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st4_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end
        end
        ap_ST_st4_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign amp_buf_address0 = tmp_s_fu_87_p1;

assign amp_buf_d0 = signals_V_dout;


always @ (ap_CS_fsm) begin
    ap_sig_bdd_106 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_22 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_49 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (signals_V_empty_n or tmp_reg_92) begin
    ap_sig_bdd_58 = ((signals_V_empty_n == ap_const_logic_0) & ~(tmp_reg_92 == ap_const_lv1_0));
end


always @ (ap_start or ap_done_reg) begin
    ap_sig_bdd_74 = ((ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end

assign i_2_fu_81_p2 = (i_phi_fu_67_p4 + ap_const_lv14_2);

assign tmp_fu_75_p2 = (i_phi_fu_67_p4 < ap_const_lv14_2710? 1'b1: 1'b0);

assign tmp_s_fu_87_p1 = i_reg_63;


endmodule //parse_audio_buffer_signal

