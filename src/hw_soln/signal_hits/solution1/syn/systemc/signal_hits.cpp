// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "signal_hits.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic signal_hits::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic signal_hits::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> signal_hits::ap_ST_st1_fsm_0 = "1";
const sc_lv<3> signal_hits::ap_ST_pp0_stg0_fsm_1 = "10";
const sc_lv<3> signal_hits::ap_ST_st8_fsm_2 = "100";
const sc_lv<32> signal_hits::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> signal_hits::ap_const_lv1_1 = "1";
const sc_lv<32> signal_hits::ap_const_lv32_1 = "1";
const sc_lv<1> signal_hits::ap_const_lv1_0 = "0";
const sc_lv<17> signal_hits::ap_const_lv17_0 = "00000000000000000";
const sc_lv<23> signal_hits::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<17> signal_hits::ap_const_lv17_1D4C0 = "11101010011000000";
const sc_lv<17> signal_hits::ap_const_lv17_1 = "1";
const sc_lv<32> signal_hits::ap_const_lv32_17 = "10111";
const sc_lv<32> signal_hits::ap_const_lv32_1E = "11110";
const sc_lv<8> signal_hits::ap_const_lv8_FF = "11111111";
const sc_lv<5> signal_hits::ap_const_lv5_2 = "10";
const sc_lv<32> signal_hits::ap_const_lv32_2 = "10";

signal_hits::signal_hits(sc_module_name name) : sc_module(name), mVcdFile(0) {
    signal_hits_fcmp_32ns_32ns_1_4_U0 = new signal_hits_fcmp_32ns_32ns_1_4<1,4,32,32,1>("signal_hits_fcmp_32ns_32ns_1_4_U0");
    signal_hits_fcmp_32ns_32ns_1_4_U0->clk(ap_clk);
    signal_hits_fcmp_32ns_32ns_1_4_U0->reset(ap_rst);
    signal_hits_fcmp_32ns_32ns_1_4_U0->din0(signals_V_dout);
    signal_hits_fcmp_32ns_32ns_1_4_U0->din1(threshold);
    signal_hits_fcmp_32ns_32ns_1_4_U0->ce(grp_fu_121_ce);
    signal_hits_fcmp_32ns_32ns_1_4_U0->opcode(grp_fu_121_opcode);
    signal_hits_fcmp_32ns_32ns_1_4_U0->dout(grp_fu_121_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sig_cseq_ST_st8_fsm_2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st8_fsm_2 );

    SC_METHOD(thread_ap_sig_bdd_19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_210);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_57);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_80);
    sensitive << ( hits_V_full_n );
    sensitive << ( locs_V_full_n );
    sensitive << ( tmp_10_reg_267 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_1);
    sensitive << ( ap_sig_bdd_57 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_19 );

    SC_METHOD(thread_ap_sig_cseq_ST_st8_fsm_2);
    sensitive << ( ap_sig_bdd_210 );

    SC_METHOD(thread_currAmp_to_int_fu_176_p1);
    sensitive << ( ap_reg_ppstg_tmp_11_reg_255_pp0_it2 );

    SC_METHOD(thread_exitcond_fu_140_p2);
    sensitive << ( signals_V_empty_n );
    sensitive << ( tmp_5_reg_110 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_80 );
    sensitive << ( ap_reg_ppiten_pp0_it5 );

    SC_METHOD(thread_grp_fu_121_ce);
    sensitive << ( signals_V_empty_n );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_80 );
    sensitive << ( ap_reg_ppiten_pp0_it5 );

    SC_METHOD(thread_grp_fu_121_opcode);
    sensitive << ( signals_V_empty_n );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_80 );
    sensitive << ( ap_reg_ppiten_pp0_it5 );

    SC_METHOD(thread_hits_V_din);
    sensitive << ( signals_V_empty_n );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_10_reg_267 );
    sensitive << ( ap_sig_bdd_80 );
    sensitive << ( ap_reg_ppiten_pp0_it5 );
    sensitive << ( ap_reg_ppstg_tmp_11_reg_255_pp0_it4 );

    SC_METHOD(thread_hits_V_write);
    sensitive << ( signals_V_empty_n );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_10_reg_267 );
    sensitive << ( ap_sig_bdd_80 );
    sensitive << ( ap_reg_ppiten_pp0_it5 );

    SC_METHOD(thread_i_fu_146_p2);
    sensitive << ( tmp_5_reg_110 );

    SC_METHOD(thread_locs_V_din);
    sensitive << ( signals_V_empty_n );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_10_reg_267 );
    sensitive << ( ap_sig_bdd_80 );
    sensitive << ( ap_reg_ppiten_pp0_it5 );
    sensitive << ( ap_reg_ppstg_tmp_12_reg_245_pp0_it4 );

    SC_METHOD(thread_locs_V_write);
    sensitive << ( signals_V_empty_n );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_10_reg_267 );
    sensitive << ( ap_sig_bdd_80 );
    sensitive << ( ap_reg_ppiten_pp0_it5 );

    SC_METHOD(thread_notlhs2_fu_165_p2);
    sensitive << ( signals_V_empty_n );
    sensitive << ( exitcond_fu_140_p2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_80 );
    sensitive << ( ap_reg_ppiten_pp0_it5 );
    sensitive << ( tmp_7_fu_156_p4 );

    SC_METHOD(thread_notlhs_fu_193_p2);
    sensitive << ( signals_V_empty_n );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( ap_sig_bdd_80 );
    sensitive << ( ap_reg_ppiten_pp0_it5 );
    sensitive << ( tmp_1_fu_179_p4 );

    SC_METHOD(thread_notrhs3_fu_134_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( tmp_fu_130_p1 );

    SC_METHOD(thread_notrhs_fu_199_p2);
    sensitive << ( signals_V_empty_n );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( ap_sig_bdd_80 );
    sensitive << ( ap_reg_ppiten_pp0_it5 );
    sensitive << ( tmp_4_fu_189_p1 );

    SC_METHOD(thread_signals_V_read);
    sensitive << ( signals_V_empty_n );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_80 );
    sensitive << ( ap_reg_ppiten_pp0_it5 );

    SC_METHOD(thread_threshold_to_int_fu_126_p1);
    sensitive << ( threshold );

    SC_METHOD(thread_tmp_10_fu_215_p2);
    sensitive << ( tmp_6_fu_211_p2 );
    sensitive << ( grp_fu_121_p2 );

    SC_METHOD(thread_tmp_12_fu_152_p1);
    sensitive << ( tmp_5_reg_110 );

    SC_METHOD(thread_tmp_1_fu_179_p4);
    sensitive << ( currAmp_to_int_fu_176_p1 );

    SC_METHOD(thread_tmp_2_fu_171_p2);
    sensitive << ( notrhs3_reg_231 );
    sensitive << ( notlhs2_fu_165_p2 );

    SC_METHOD(thread_tmp_4_fu_189_p1);
    sensitive << ( currAmp_to_int_fu_176_p1 );

    SC_METHOD(thread_tmp_6_fu_211_p2);
    sensitive << ( ap_reg_ppstg_tmp_2_reg_250_pp0_it3 );
    sensitive << ( tmp_9_reg_262 );

    SC_METHOD(thread_tmp_7_fu_156_p4);
    sensitive << ( threshold_to_int_reg_226 );

    SC_METHOD(thread_tmp_9_fu_205_p2);
    sensitive << ( notrhs_fu_199_p2 );
    sensitive << ( notlhs_fu_193_p2 );

    SC_METHOD(thread_tmp_fu_130_p1);
    sensitive << ( threshold_to_int_fu_126_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( signals_V_empty_n );
    sensitive << ( exitcond_fu_140_p2 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it4 );
    sensitive << ( ap_sig_bdd_80 );
    sensitive << ( ap_reg_ppiten_pp0_it5 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "001";
    ap_reg_ppiten_pp0_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it2 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it3 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it4 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it5 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "signal_hits_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, threshold, "(port)threshold");
    sc_trace(mVcdFile, signals_V_dout, "(port)signals_V_dout");
    sc_trace(mVcdFile, signals_V_empty_n, "(port)signals_V_empty_n");
    sc_trace(mVcdFile, signals_V_read, "(port)signals_V_read");
    sc_trace(mVcdFile, hits_V_din, "(port)hits_V_din");
    sc_trace(mVcdFile, hits_V_full_n, "(port)hits_V_full_n");
    sc_trace(mVcdFile, hits_V_write, "(port)hits_V_write");
    sc_trace(mVcdFile, locs_V_din, "(port)locs_V_din");
    sc_trace(mVcdFile, locs_V_full_n, "(port)locs_V_full_n");
    sc_trace(mVcdFile, locs_V_write, "(port)locs_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_19, "ap_sig_bdd_19");
    sc_trace(mVcdFile, tmp_5_reg_110, "tmp_5_reg_110");
    sc_trace(mVcdFile, threshold_to_int_fu_126_p1, "threshold_to_int_fu_126_p1");
    sc_trace(mVcdFile, threshold_to_int_reg_226, "threshold_to_int_reg_226");
    sc_trace(mVcdFile, notrhs3_fu_134_p2, "notrhs3_fu_134_p2");
    sc_trace(mVcdFile, notrhs3_reg_231, "notrhs3_reg_231");
    sc_trace(mVcdFile, exitcond_fu_140_p2, "exitcond_fu_140_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_1, "ap_sig_cseq_ST_pp0_stg0_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_57, "ap_sig_bdd_57");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it2, "ap_reg_ppiten_pp0_it2");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it3, "ap_reg_ppiten_pp0_it3");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it4, "ap_reg_ppiten_pp0_it4");
    sc_trace(mVcdFile, tmp_10_reg_267, "tmp_10_reg_267");
    sc_trace(mVcdFile, ap_sig_bdd_80, "ap_sig_bdd_80");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it5, "ap_reg_ppiten_pp0_it5");
    sc_trace(mVcdFile, i_fu_146_p2, "i_fu_146_p2");
    sc_trace(mVcdFile, tmp_12_fu_152_p1, "tmp_12_fu_152_p1");
    sc_trace(mVcdFile, tmp_12_reg_245, "tmp_12_reg_245");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_12_reg_245_pp0_it1, "ap_reg_ppstg_tmp_12_reg_245_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_12_reg_245_pp0_it2, "ap_reg_ppstg_tmp_12_reg_245_pp0_it2");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_12_reg_245_pp0_it3, "ap_reg_ppstg_tmp_12_reg_245_pp0_it3");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_12_reg_245_pp0_it4, "ap_reg_ppstg_tmp_12_reg_245_pp0_it4");
    sc_trace(mVcdFile, tmp_2_fu_171_p2, "tmp_2_fu_171_p2");
    sc_trace(mVcdFile, tmp_2_reg_250, "tmp_2_reg_250");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_2_reg_250_pp0_it1, "ap_reg_ppstg_tmp_2_reg_250_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_2_reg_250_pp0_it2, "ap_reg_ppstg_tmp_2_reg_250_pp0_it2");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_2_reg_250_pp0_it3, "ap_reg_ppstg_tmp_2_reg_250_pp0_it3");
    sc_trace(mVcdFile, tmp_11_reg_255, "tmp_11_reg_255");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_11_reg_255_pp0_it2, "ap_reg_ppstg_tmp_11_reg_255_pp0_it2");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_11_reg_255_pp0_it3, "ap_reg_ppstg_tmp_11_reg_255_pp0_it3");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_11_reg_255_pp0_it4, "ap_reg_ppstg_tmp_11_reg_255_pp0_it4");
    sc_trace(mVcdFile, tmp_9_fu_205_p2, "tmp_9_fu_205_p2");
    sc_trace(mVcdFile, tmp_9_reg_262, "tmp_9_reg_262");
    sc_trace(mVcdFile, tmp_10_fu_215_p2, "tmp_10_fu_215_p2");
    sc_trace(mVcdFile, tmp_fu_130_p1, "tmp_fu_130_p1");
    sc_trace(mVcdFile, tmp_7_fu_156_p4, "tmp_7_fu_156_p4");
    sc_trace(mVcdFile, notlhs2_fu_165_p2, "notlhs2_fu_165_p2");
    sc_trace(mVcdFile, currAmp_to_int_fu_176_p1, "currAmp_to_int_fu_176_p1");
    sc_trace(mVcdFile, tmp_1_fu_179_p4, "tmp_1_fu_179_p4");
    sc_trace(mVcdFile, tmp_4_fu_189_p1, "tmp_4_fu_189_p1");
    sc_trace(mVcdFile, notrhs_fu_199_p2, "notrhs_fu_199_p2");
    sc_trace(mVcdFile, notlhs_fu_193_p2, "notlhs_fu_193_p2");
    sc_trace(mVcdFile, tmp_6_fu_211_p2, "tmp_6_fu_211_p2");
    sc_trace(mVcdFile, grp_fu_121_p2, "grp_fu_121_p2");
    sc_trace(mVcdFile, grp_fu_121_ce, "grp_fu_121_ce");
    sc_trace(mVcdFile, grp_fu_121_opcode, "grp_fu_121_opcode");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st8_fsm_2, "ap_sig_cseq_ST_st8_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_210, "ap_sig_bdd_210");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("signal_hits.hdltvin.dat");
    mHdltvoutHandle.open("signal_hits.hdltvout.dat");
}

signal_hits::~signal_hits() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete signal_hits_fcmp_32ns_32ns_1_4_U0;
}

void signal_hits::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
             !((esl_seteq<1,1,1>(signals_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_80.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()))) && 
             !esl_seteq<1,1,1>(exitcond_fu_140_p2.read(), ap_const_lv1_0))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
             !((esl_seteq<1,1,1>(signals_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_80.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()))) && 
             esl_seteq<1,1,1>(exitcond_fu_140_p2.read(), ap_const_lv1_0))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                     !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
                     !((esl_seteq<1,1,1>(signals_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_80.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()))) && 
                     !esl_seteq<1,1,1>(exitcond_fu_140_p2.read(), ap_const_lv1_0)))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it2 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(signals_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_80.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read())))) {
            ap_reg_ppiten_pp0_it2 = ap_reg_ppiten_pp0_it1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it3 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(signals_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_80.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read())))) {
            ap_reg_ppiten_pp0_it3 = ap_reg_ppiten_pp0_it2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it4 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(signals_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_80.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read())))) {
            ap_reg_ppiten_pp0_it4 = ap_reg_ppiten_pp0_it3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it5 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(signals_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_80.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read())))) {
            ap_reg_ppiten_pp0_it5 = ap_reg_ppiten_pp0_it4.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it5 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !((esl_seteq<1,1,1>(signals_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_80.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()))) && 
         esl_seteq<1,1,1>(exitcond_fu_140_p2.read(), ap_const_lv1_0))) {
        tmp_5_reg_110 = i_fu_146_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        tmp_5_reg_110 = ap_const_lv17_0;
    }
    if (!((esl_seteq<1,1,1>(signals_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_80.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read())))) {
        ap_reg_ppstg_tmp_11_reg_255_pp0_it2 = tmp_11_reg_255.read();
        ap_reg_ppstg_tmp_11_reg_255_pp0_it3 = ap_reg_ppstg_tmp_11_reg_255_pp0_it2.read();
        ap_reg_ppstg_tmp_11_reg_255_pp0_it4 = ap_reg_ppstg_tmp_11_reg_255_pp0_it3.read();
        ap_reg_ppstg_tmp_12_reg_245_pp0_it2 = ap_reg_ppstg_tmp_12_reg_245_pp0_it1.read();
        ap_reg_ppstg_tmp_12_reg_245_pp0_it3 = ap_reg_ppstg_tmp_12_reg_245_pp0_it2.read();
        ap_reg_ppstg_tmp_12_reg_245_pp0_it4 = ap_reg_ppstg_tmp_12_reg_245_pp0_it3.read();
        ap_reg_ppstg_tmp_2_reg_250_pp0_it2 = ap_reg_ppstg_tmp_2_reg_250_pp0_it1.read();
        ap_reg_ppstg_tmp_2_reg_250_pp0_it3 = ap_reg_ppstg_tmp_2_reg_250_pp0_it2.read();
        tmp_10_reg_267 = tmp_10_fu_215_p2.read();
        tmp_9_reg_262 = tmp_9_fu_205_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && !((esl_seteq<1,1,1>(signals_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_80.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()))))) {
        ap_reg_ppstg_tmp_12_reg_245_pp0_it1 = tmp_12_reg_245.read();
        ap_reg_ppstg_tmp_2_reg_250_pp0_it1 = tmp_2_reg_250.read();
        tmp_11_reg_255 = signals_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        notrhs3_reg_231 = notrhs3_fu_134_p2.read();
        threshold_to_int_reg_226 = threshold_to_int_fu_126_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && !((esl_seteq<1,1,1>(signals_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_80.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()))) && esl_seteq<1,1,1>(exitcond_fu_140_p2.read(), ap_const_lv1_0))) {
        tmp_12_reg_245 = tmp_12_fu_152_p1.read();
        tmp_2_reg_250 = tmp_2_fu_171_p2.read();
    }
}

void signal_hits::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_2.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void signal_hits::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void signal_hits::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_2.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void signal_hits::thread_ap_sig_bdd_19() {
    ap_sig_bdd_19 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void signal_hits::thread_ap_sig_bdd_210() {
    ap_sig_bdd_210 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void signal_hits::thread_ap_sig_bdd_57() {
    ap_sig_bdd_57 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void signal_hits::thread_ap_sig_bdd_80() {
    ap_sig_bdd_80 = ((esl_seteq<1,1,1>(hits_V_full_n.read(), ap_const_logic_0) && 
  !esl_seteq<1,1,1>(tmp_10_reg_267.read(), ap_const_lv1_0)) || (!esl_seteq<1,1,1>(tmp_10_reg_267.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(locs_V_full_n.read(), ap_const_logic_0)));
}

void signal_hits::thread_ap_sig_cseq_ST_pp0_stg0_fsm_1() {
    if (ap_sig_bdd_57.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    }
}

void signal_hits::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_19.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void signal_hits::thread_ap_sig_cseq_ST_st8_fsm_2() {
    if (ap_sig_bdd_210.read()) {
        ap_sig_cseq_ST_st8_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st8_fsm_2 = ap_const_logic_0;
    }
}

void signal_hits::thread_currAmp_to_int_fu_176_p1() {
    currAmp_to_int_fu_176_p1 = ap_reg_ppstg_tmp_11_reg_255_pp0_it2.read();
}

void signal_hits::thread_exitcond_fu_140_p2() {
    exitcond_fu_140_p2 = (!tmp_5_reg_110.read().is_01() || !ap_const_lv17_1D4C0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_5_reg_110.read() == ap_const_lv17_1D4C0);
}

void signal_hits::thread_grp_fu_121_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         !((esl_seteq<1,1,1>(signals_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_80.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()))))) {
        grp_fu_121_ce = ap_const_logic_1;
    } else {
        grp_fu_121_ce = ap_const_logic_0;
    }
}

void signal_hits::thread_grp_fu_121_opcode() {
    grp_fu_121_opcode = ap_const_lv5_2;
}

void signal_hits::thread_hits_V_din() {
    hits_V_din = ap_reg_ppstg_tmp_11_reg_255_pp0_it4.read();
}

void signal_hits::thread_hits_V_write() {
    if ((!esl_seteq<1,1,1>(tmp_10_reg_267.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()) && 
         !((esl_seteq<1,1,1>(signals_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_80.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()))))) {
        hits_V_write = ap_const_logic_1;
    } else {
        hits_V_write = ap_const_logic_0;
    }
}

void signal_hits::thread_i_fu_146_p2() {
    i_fu_146_p2 = (!tmp_5_reg_110.read().is_01() || !ap_const_lv17_1.is_01())? sc_lv<17>(): (sc_biguint<17>(tmp_5_reg_110.read()) + sc_biguint<17>(ap_const_lv17_1));
}

void signal_hits::thread_locs_V_din() {
    locs_V_din = ap_reg_ppstg_tmp_12_reg_245_pp0_it4.read();
}

void signal_hits::thread_locs_V_write() {
    if ((!esl_seteq<1,1,1>(tmp_10_reg_267.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()) && 
         !((esl_seteq<1,1,1>(signals_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_80.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()))))) {
        locs_V_write = ap_const_logic_1;
    } else {
        locs_V_write = ap_const_logic_0;
    }
}

void signal_hits::thread_notlhs2_fu_165_p2() {
    notlhs2_fu_165_p2 = (!tmp_7_fu_156_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_7_fu_156_p4.read() != ap_const_lv8_FF);
}

void signal_hits::thread_notlhs_fu_193_p2() {
    notlhs_fu_193_p2 = (!tmp_1_fu_179_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_1_fu_179_p4.read() != ap_const_lv8_FF);
}

void signal_hits::thread_notrhs3_fu_134_p2() {
    notrhs3_fu_134_p2 = (!tmp_fu_130_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_130_p1.read() == ap_const_lv23_0);
}

void signal_hits::thread_notrhs_fu_199_p2() {
    notrhs_fu_199_p2 = (!tmp_4_fu_189_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_4_fu_189_p1.read() == ap_const_lv23_0);
}

void signal_hits::thread_signals_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !((esl_seteq<1,1,1>(signals_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_80.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()))))) {
        signals_V_read = ap_const_logic_1;
    } else {
        signals_V_read = ap_const_logic_0;
    }
}

void signal_hits::thread_threshold_to_int_fu_126_p1() {
    threshold_to_int_fu_126_p1 = threshold.read();
}

void signal_hits::thread_tmp_10_fu_215_p2() {
    tmp_10_fu_215_p2 = (tmp_6_fu_211_p2.read() & grp_fu_121_p2.read());
}

void signal_hits::thread_tmp_12_fu_152_p1() {
    tmp_12_fu_152_p1 = esl_zext<32,17>(tmp_5_reg_110.read());
}

void signal_hits::thread_tmp_1_fu_179_p4() {
    tmp_1_fu_179_p4 = currAmp_to_int_fu_176_p1.read().range(30, 23);
}

void signal_hits::thread_tmp_2_fu_171_p2() {
    tmp_2_fu_171_p2 = (notrhs3_reg_231.read() | notlhs2_fu_165_p2.read());
}

void signal_hits::thread_tmp_4_fu_189_p1() {
    tmp_4_fu_189_p1 = currAmp_to_int_fu_176_p1.read().range(23-1, 0);
}

void signal_hits::thread_tmp_6_fu_211_p2() {
    tmp_6_fu_211_p2 = (tmp_9_reg_262.read() & ap_reg_ppstg_tmp_2_reg_250_pp0_it3.read());
}

void signal_hits::thread_tmp_7_fu_156_p4() {
    tmp_7_fu_156_p4 = threshold_to_int_reg_226.read().range(30, 23);
}

void signal_hits::thread_tmp_9_fu_205_p2() {
    tmp_9_fu_205_p2 = (notrhs_fu_199_p2.read() | notlhs_fu_193_p2.read());
}

void signal_hits::thread_tmp_fu_130_p1() {
    tmp_fu_130_p1 = threshold_to_int_fu_126_p1.read().range(23-1, 0);
}

void signal_hits::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()) && !((esl_seteq<1,1,1>(signals_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_80.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()))) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it4.read())) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !((esl_seteq<1,1,1>(signals_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_80.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()))) && !esl_seteq<1,1,1>(exitcond_fu_140_p2.read(), ap_const_lv1_0) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()) && 
  !((esl_seteq<1,1,1>(signals_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_80.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()))) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it4.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  !((esl_seteq<1,1,1>(signals_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_80.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it5.read()))) && 
  !esl_seteq<1,1,1>(exitcond_fu_140_p2.read(), ap_const_lv1_0) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
                ap_NS_fsm = ap_ST_st8_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

void signal_hits::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"threshold\" :  \"" << threshold.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"signals_V_dout\" :  \"" << signals_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"signals_V_empty_n\" :  \"" << signals_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"signals_V_read\" :  \"" << signals_V_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"hits_V_din\" :  \"" << hits_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"hits_V_full_n\" :  \"" << hits_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"hits_V_write\" :  \"" << hits_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"locs_V_din\" :  \"" << locs_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"locs_V_full_n\" :  \"" << locs_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"locs_V_write\" :  \"" << locs_V_write.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

