// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="running_threshold,hls_ip_2015_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.353000,HLS_SYN_LAT=1080043,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=5,HLS_SYN_FF=2128,HLS_SYN_LUT=2025}" *)

module running_threshold (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        amplitude_V_dout,
        amplitude_V_empty_n,
        amplitude_V_read,
        threshold_V_din,
        threshold_V_full_n,
        threshold_V_write
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 51'b1;
parameter    ap_ST_pp0_stg0_fsm_1 = 51'b10;
parameter    ap_ST_pp0_stg1_fsm_2 = 51'b100;
parameter    ap_ST_pp0_stg2_fsm_3 = 51'b1000;
parameter    ap_ST_pp0_stg3_fsm_4 = 51'b10000;
parameter    ap_ST_pp0_stg4_fsm_5 = 51'b100000;
parameter    ap_ST_pp0_stg5_fsm_6 = 51'b1000000;
parameter    ap_ST_pp0_stg6_fsm_7 = 51'b10000000;
parameter    ap_ST_pp0_stg7_fsm_8 = 51'b100000000;
parameter    ap_ST_pp0_stg8_fsm_9 = 51'b1000000000;
parameter    ap_ST_st13_fsm_10 = 51'b10000000000;
parameter    ap_ST_st14_fsm_11 = 51'b100000000000;
parameter    ap_ST_st15_fsm_12 = 51'b1000000000000;
parameter    ap_ST_st16_fsm_13 = 51'b10000000000000;
parameter    ap_ST_st17_fsm_14 = 51'b100000000000000;
parameter    ap_ST_st18_fsm_15 = 51'b1000000000000000;
parameter    ap_ST_st19_fsm_16 = 51'b10000000000000000;
parameter    ap_ST_st20_fsm_17 = 51'b100000000000000000;
parameter    ap_ST_st21_fsm_18 = 51'b1000000000000000000;
parameter    ap_ST_st22_fsm_19 = 51'b10000000000000000000;
parameter    ap_ST_st23_fsm_20 = 51'b100000000000000000000;
parameter    ap_ST_st24_fsm_21 = 51'b1000000000000000000000;
parameter    ap_ST_st25_fsm_22 = 51'b10000000000000000000000;
parameter    ap_ST_st26_fsm_23 = 51'b100000000000000000000000;
parameter    ap_ST_st27_fsm_24 = 51'b1000000000000000000000000;
parameter    ap_ST_st28_fsm_25 = 51'b10000000000000000000000000;
parameter    ap_ST_st29_fsm_26 = 51'b100000000000000000000000000;
parameter    ap_ST_st30_fsm_27 = 51'b1000000000000000000000000000;
parameter    ap_ST_st31_fsm_28 = 51'b10000000000000000000000000000;
parameter    ap_ST_st32_fsm_29 = 51'b100000000000000000000000000000;
parameter    ap_ST_st33_fsm_30 = 51'b1000000000000000000000000000000;
parameter    ap_ST_st34_fsm_31 = 51'b10000000000000000000000000000000;
parameter    ap_ST_st35_fsm_32 = 51'b100000000000000000000000000000000;
parameter    ap_ST_st36_fsm_33 = 51'b1000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_34 = 51'b10000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_35 = 51'b100000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_36 = 51'b1000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_37 = 51'b10000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_38 = 51'b100000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_39 = 51'b1000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_40 = 51'b10000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_41 = 51'b100000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_42 = 51'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_43 = 51'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_44 = 51'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_45 = 51'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_46 = 51'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_47 = 51'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_48 = 51'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_49 = 51'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_50 = 51'b100000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_31 = 32'b110001;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv17_0 = 17'b00000000000000000;
parameter    ap_const_lv32_32 = 32'b110010;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_40A00000 = 32'b1000000101000000000000000000000;
parameter    ap_const_lv32_42700000 = 32'b1000010011100000000000000000000;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_const_lv32_44FA0000 = 32'b1000100111110100000000000000000;
parameter    ap_const_lv17_1D4C0 = 17'b11101010011000000;
parameter    ap_const_lv17_1 = 17'b1;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] amplitude_V_dout;
input   amplitude_V_empty_n;
output   amplitude_V_read;
output  [31:0] threshold_V_din;
input   threshold_V_full_n;
output   threshold_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg amplitude_V_read;
reg threshold_V_write;
(* fsm_encoding = "none" *) reg   [50:0] ap_CS_fsm = 51'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_67;
reg   [31:0] mean_reg_79;
reg   [16:0] i_reg_91;
wire   [31:0] grp_fu_107_p2;
reg   [31:0] reg_119;
reg    ap_sig_cseq_ST_st17_fsm_14;
reg    ap_sig_bdd_93;
reg    ap_sig_cseq_ST_st52_fsm_49;
reg    ap_sig_bdd_100;
wire   [0:0] exitcond_fu_125_p2;
reg   [0:0] exitcond_reg_137;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_1;
reg    ap_sig_bdd_110;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond_reg_137_pp0_it1;
wire   [16:0] i_1_fu_131_p2;
reg   [16:0] i_1_reg_141;
reg   [31:0] tmp_3_reg_146;
reg    ap_sig_cseq_ST_pp0_stg1_fsm_2;
reg    ap_sig_bdd_128;
reg    ap_sig_bdd_134;
wire   [31:0] grp_fu_102_p2;
wire   [31:0] grp_fu_114_p2;
reg   [31:0] tmp_1_reg_156;
reg    ap_sig_cseq_ST_st47_fsm_44;
reg    ap_sig_bdd_152;
reg    ap_sig_cseq_ST_pp0_stg8_fsm_9;
reg    ap_sig_bdd_165;
reg   [16:0] i_phi_fu_95_p4;
reg    ap_sig_cseq_ST_st53_fsm_50;
reg    ap_sig_bdd_186;
reg    ap_sig_cseq_ST_pp0_stg2_fsm_3;
reg    ap_sig_bdd_198;
reg   [31:0] grp_fu_107_p0;
reg   [31:0] grp_fu_107_p1;
reg    ap_sig_cseq_ST_st13_fsm_10;
reg    ap_sig_bdd_210;
reg    ap_sig_cseq_ST_st48_fsm_45;
reg    ap_sig_bdd_217;
reg    grp_fu_102_ce;
reg    ap_sig_cseq_ST_pp0_stg3_fsm_4;
reg    ap_sig_bdd_243;
reg    ap_sig_cseq_ST_pp0_stg4_fsm_5;
reg    ap_sig_bdd_251;
reg    ap_sig_cseq_ST_pp0_stg5_fsm_6;
reg    ap_sig_bdd_259;
reg    ap_sig_cseq_ST_pp0_stg6_fsm_7;
reg    ap_sig_bdd_267;
reg    ap_sig_cseq_ST_pp0_stg7_fsm_8;
reg    ap_sig_bdd_275;
wire    grp_fu_107_ce;
wire    grp_fu_114_ce;
reg   [50:0] ap_NS_fsm;


running_threshold_fadd_32ns_32ns_32_9_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
running_threshold_fadd_32ns_32ns_32_9_full_dsp_U0(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( mean_reg_79 ),
    .din1( tmp_3_reg_146 ),
    .ce( grp_fu_102_ce ),
    .dout( grp_fu_102_p2 )
);

running_threshold_fmul_32ns_32ns_32_5_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
running_threshold_fmul_32ns_32ns_32_5_max_dsp_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_107_p0 ),
    .din1( grp_fu_107_p1 ),
    .ce( grp_fu_107_ce ),
    .dout( grp_fu_107_p2 )
);

running_threshold_fdiv_32ns_32ns_32_30 #(
    .ID( 1 ),
    .NUM_STAGE( 30 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
running_threshold_fdiv_32ns_32ns_32_30_U2(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( reg_119 ),
    .din1( ap_const_lv32_44FA0000 ),
    .ce( grp_fu_114_ce ),
    .dout( grp_fu_114_p2 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(exitcond_fu_125_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((exitcond_reg_137 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_9))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_9) & ~(exitcond_reg_137 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_137 == ap_const_lv1_0))) begin
        i_reg_91 <= i_1_reg_141;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_91 <= ap_const_lv17_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_134) & (ap_reg_ppstg_exitcond_reg_137_pp0_it1 == ap_const_lv1_0))) begin
        mean_reg_79 <= grp_fu_102_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        mean_reg_79 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)) begin
        ap_reg_ppstg_exitcond_reg_137_pp0_it1 <= exitcond_reg_137;
        exitcond_reg_137 <= exitcond_fu_125_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        i_1_reg_141 <= i_1_fu_131_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_14) | (ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_49))) begin
        reg_119 <= grp_fu_107_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_44)) begin
        tmp_1_reg_156 <= grp_fu_114_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (exitcond_reg_137 == ap_const_lv1_0) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_134))) begin
        tmp_3_reg_146 <= amplitude_V_dout;
    end
end

always @ (exitcond_reg_137 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_bdd_134) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (exitcond_reg_137 == ap_const_lv1_0) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_134))) begin
        amplitude_V_read = ap_const_logic_1;
    end else begin
        amplitude_V_read = ap_const_logic_0;
    end
end

always @ (threshold_V_full_n or ap_sig_cseq_ST_st53_fsm_50) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st53_fsm_50) & ~(threshold_V_full_n == ap_const_logic_0))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (threshold_V_full_n or ap_sig_cseq_ST_st53_fsm_50) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st53_fsm_50) & ~(threshold_V_full_n == ap_const_logic_0))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_110) begin
    if (ap_sig_bdd_110) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_128) begin
    if (ap_sig_bdd_128) begin
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_198) begin
    if (ap_sig_bdd_198) begin
        ap_sig_cseq_ST_pp0_stg2_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg2_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_243) begin
    if (ap_sig_bdd_243) begin
        ap_sig_cseq_ST_pp0_stg3_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg3_fsm_4 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_251) begin
    if (ap_sig_bdd_251) begin
        ap_sig_cseq_ST_pp0_stg4_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg4_fsm_5 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_259) begin
    if (ap_sig_bdd_259) begin
        ap_sig_cseq_ST_pp0_stg5_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg5_fsm_6 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_267) begin
    if (ap_sig_bdd_267) begin
        ap_sig_cseq_ST_pp0_stg6_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg6_fsm_7 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_275) begin
    if (ap_sig_bdd_275) begin
        ap_sig_cseq_ST_pp0_stg7_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg7_fsm_8 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_165) begin
    if (ap_sig_bdd_165) begin
        ap_sig_cseq_ST_pp0_stg8_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg8_fsm_9 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_210) begin
    if (ap_sig_bdd_210) begin
        ap_sig_cseq_ST_st13_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_10 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_93) begin
    if (ap_sig_bdd_93) begin
        ap_sig_cseq_ST_st17_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_14 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_67) begin
    if (ap_sig_bdd_67) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_152) begin
    if (ap_sig_bdd_152) begin
        ap_sig_cseq_ST_st47_fsm_44 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st47_fsm_44 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_217) begin
    if (ap_sig_bdd_217) begin
        ap_sig_cseq_ST_st48_fsm_45 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st48_fsm_45 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_100) begin
    if (ap_sig_bdd_100) begin
        ap_sig_cseq_ST_st52_fsm_49 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st52_fsm_49 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_186) begin
    if (ap_sig_bdd_186) begin
        ap_sig_cseq_ST_st53_fsm_50 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st53_fsm_50 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_bdd_134 or ap_sig_cseq_ST_pp0_stg8_fsm_9 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or ap_sig_cseq_ST_pp0_stg4_fsm_5 or ap_sig_cseq_ST_pp0_stg5_fsm_6 or ap_sig_cseq_ST_pp0_stg6_fsm_7 or ap_sig_cseq_ST_pp0_stg7_fsm_8) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_134)) | (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_9) | (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_8))) begin
        grp_fu_102_ce = ap_const_logic_1;
    end else begin
        grp_fu_102_ce = ap_const_logic_0;
    end
end

always @ (mean_reg_79 or tmp_1_reg_156 or ap_sig_cseq_ST_st13_fsm_10 or ap_sig_cseq_ST_st48_fsm_45) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st48_fsm_45)) begin
        grp_fu_107_p0 = tmp_1_reg_156;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_10)) begin
        grp_fu_107_p0 = mean_reg_79;
    end else begin
        grp_fu_107_p0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st13_fsm_10 or ap_sig_cseq_ST_st48_fsm_45) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st48_fsm_45)) begin
        grp_fu_107_p1 = ap_const_lv32_42700000;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_10)) begin
        grp_fu_107_p1 = ap_const_lv32_40A00000;
    end else begin
        grp_fu_107_p1 = 'bx;
    end
end

always @ (i_reg_91 or exitcond_reg_137 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it1 or i_1_reg_141) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_137 == ap_const_lv1_0))) begin
        i_phi_fu_95_p4 = i_1_reg_141;
    end else begin
        i_phi_fu_95_p4 = i_reg_91;
    end
end

always @ (threshold_V_full_n or ap_sig_cseq_ST_st53_fsm_50) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st53_fsm_50) & ~(threshold_V_full_n == ap_const_logic_0))) begin
        threshold_V_write = ap_const_logic_1;
    end else begin
        threshold_V_write = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or threshold_V_full_n or exitcond_fu_125_p2 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_bdd_134) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_pp0_stg0_fsm_1 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(exitcond_fu_125_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st13_fsm_10;
            end
        end
        ap_ST_pp0_stg1_fsm_2 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_134) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_134) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it0)))) begin
                ap_NS_fsm = ap_ST_pp0_stg2_fsm_3;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_134) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
                ap_NS_fsm = ap_ST_st13_fsm_10;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_2;
            end
        end
        ap_ST_pp0_stg2_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg3_fsm_4;
        end
        ap_ST_pp0_stg3_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg4_fsm_5;
        end
        ap_ST_pp0_stg4_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg5_fsm_6;
        end
        ap_ST_pp0_stg5_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg6_fsm_7;
        end
        ap_ST_pp0_stg6_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg7_fsm_8;
        end
        ap_ST_pp0_stg7_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg8_fsm_9;
        end
        ap_ST_pp0_stg8_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
        end
        ap_ST_st13_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_11;
        end
        ap_ST_st14_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_12;
        end
        ap_ST_st15_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_13;
        end
        ap_ST_st16_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_14;
        end
        ap_ST_st17_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_15;
        end
        ap_ST_st18_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_16;
        end
        ap_ST_st19_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_17;
        end
        ap_ST_st20_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_18;
        end
        ap_ST_st21_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_19;
        end
        ap_ST_st22_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_20;
        end
        ap_ST_st23_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_21;
        end
        ap_ST_st24_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_22;
        end
        ap_ST_st25_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_23;
        end
        ap_ST_st26_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_24;
        end
        ap_ST_st27_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_25;
        end
        ap_ST_st28_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_26;
        end
        ap_ST_st29_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_27;
        end
        ap_ST_st30_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_28;
        end
        ap_ST_st31_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_29;
        end
        ap_ST_st32_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_30;
        end
        ap_ST_st33_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st34_fsm_31;
        end
        ap_ST_st34_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st35_fsm_32;
        end
        ap_ST_st35_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st36_fsm_33;
        end
        ap_ST_st36_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st37_fsm_34;
        end
        ap_ST_st37_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st38_fsm_35;
        end
        ap_ST_st38_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_36;
        end
        ap_ST_st39_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_37;
        end
        ap_ST_st40_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_38;
        end
        ap_ST_st41_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st42_fsm_39;
        end
        ap_ST_st42_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st43_fsm_40;
        end
        ap_ST_st43_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st44_fsm_41;
        end
        ap_ST_st44_fsm_41 : 
        begin
            ap_NS_fsm = ap_ST_st45_fsm_42;
        end
        ap_ST_st45_fsm_42 : 
        begin
            ap_NS_fsm = ap_ST_st46_fsm_43;
        end
        ap_ST_st46_fsm_43 : 
        begin
            ap_NS_fsm = ap_ST_st47_fsm_44;
        end
        ap_ST_st47_fsm_44 : 
        begin
            ap_NS_fsm = ap_ST_st48_fsm_45;
        end
        ap_ST_st48_fsm_45 : 
        begin
            ap_NS_fsm = ap_ST_st49_fsm_46;
        end
        ap_ST_st49_fsm_46 : 
        begin
            ap_NS_fsm = ap_ST_st50_fsm_47;
        end
        ap_ST_st50_fsm_47 : 
        begin
            ap_NS_fsm = ap_ST_st51_fsm_48;
        end
        ap_ST_st51_fsm_48 : 
        begin
            ap_NS_fsm = ap_ST_st52_fsm_49;
        end
        ap_ST_st52_fsm_49 : 
        begin
            ap_NS_fsm = ap_ST_st53_fsm_50;
        end
        ap_ST_st53_fsm_50 : 
        begin
            if (~(threshold_V_full_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st53_fsm_50;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end



always @ (ap_CS_fsm) begin
    ap_sig_bdd_100 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_31]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_110 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_128 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (amplitude_V_empty_n or exitcond_reg_137) begin
    ap_sig_bdd_134 = ((amplitude_V_empty_n == ap_const_logic_0) & (exitcond_reg_137 == ap_const_lv1_0));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_152 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2C]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_165 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_186 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_32]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_198 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_210 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_217 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2D]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_243 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_251 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_259 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_267 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_275 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_67 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_93 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end

assign exitcond_fu_125_p2 = (i_phi_fu_95_p4 == ap_const_lv17_1D4C0? 1'b1: 1'b0);

assign grp_fu_107_ce = ap_const_logic_1;

assign grp_fu_114_ce = ap_const_logic_1;

assign i_1_fu_131_p2 = (i_phi_fu_95_p4 + ap_const_lv17_1);

assign threshold_V_din = reg_119;


endmodule //running_threshold

