-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity detect is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    signals_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    signals_V_empty_n : IN STD_LOGIC;
    signals_V_read : OUT STD_LOGIC;
    threshold_x : IN STD_LOGIC_VECTOR (31 downto 0);
    loc_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    loc_V_full_n : IN STD_LOGIC;
    loc_V_write : OUT STD_LOGIC;
    hits_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    hits_out_full_n : IN STD_LOGIC;
    hits_out_write : OUT STD_LOGIC );
end;


architecture behav of detect is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv20_927C0 : STD_LOGIC_VECTOR (19 downto 0) := "10010010011111000000";
    constant ap_const_lv20_1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal signals_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal loc_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal tmp_28_reg_287 : STD_LOGIC_VECTOR (0 downto 0);
    signal hits_out_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_30_reg_102 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal p_read_to_int_fu_122_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_read_to_int_reg_251 : STD_LOGIC_VECTOR (31 downto 0);
    signal notrhs2_fu_130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs2_reg_256 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_fu_141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state7 : BOOLEAN;
    signal i_fu_147_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_6_fu_153_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_270 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_reg_270 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_reg_270 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_6_reg_270 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_6_reg_270 : STD_LOGIC_VECTOR (31 downto 0);
    signal notlhs1_fu_166_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs1_reg_275 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter1_notlhs1_reg_275 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_notlhs1_reg_275 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_notlhs1_reg_275 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_280 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_29_reg_280 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_29_reg_280 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_fu_217_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal hits_def_channel_fu_62 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_i_i_fu_223_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_126_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_22_fu_157_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal currAmp_to_int_fu_172_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_175_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_24_fu_185_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs_fu_195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_fu_189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_201_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_211_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_113_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_113_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_enable_pp0 : BOOLEAN;

    component detect_calls_fcmpbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    detect_calls_fcmpbkb_x_U14 : component detect_calls_fcmpbkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => signals_V_dout,
        din1 => threshold_x,
        ce => grp_fu_113_ce,
        opcode => ap_const_lv5_2,
        dout => grp_fu_113_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state8) and not((ap_const_logic_0 = hits_out_full_n)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = signals_V_empty_n)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_boolean_1 = ap_block_state7)))) and not((ap_const_lv1_0 = exitcond_i_i_fu_141_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_const_boolean_1 = ap_block_state1)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = signals_V_empty_n)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_boolean_1 = ap_block_state7)))) and (ap_const_lv1_0 = exitcond_i_i_fu_141_p2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_const_boolean_1 = ap_block_state1))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = signals_V_empty_n)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_boolean_1 = ap_block_state7)))) and not((ap_const_lv1_0 = exitcond_i_i_fu_141_p2))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = signals_V_empty_n)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_boolean_1 = ap_block_state7))))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = signals_V_empty_n)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_boolean_1 = ap_block_state7))))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = signals_V_empty_n)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_boolean_1 = ap_block_state7))))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = signals_V_empty_n)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_boolean_1 = ap_block_state7))))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_const_boolean_1 = ap_block_state1)))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    hits_def_channel_fu_62_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((tmp_28_reg_287 = ap_const_lv1_0)) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = signals_V_empty_n)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_boolean_1 = ap_block_state7)))))) then 
                hits_def_channel_fu_62 <= tmp_14_i_i_fu_223_p2;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_const_boolean_1 = ap_block_state1)))) then 
                hits_def_channel_fu_62 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_30_reg_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = signals_V_empty_n)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_boolean_1 = ap_block_state7)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = exitcond_i_i_fu_141_p2))) then 
                tmp_30_reg_102 <= i_fu_147_p2;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_const_boolean_1 = ap_block_state1)))) then 
                tmp_30_reg_102 <= ap_const_lv20_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = signals_V_empty_n)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_boolean_1 = ap_block_state7)))))) then
                ap_pipeline_reg_pp0_iter1_notlhs1_reg_275 <= notlhs1_reg_275;
                    ap_pipeline_reg_pp0_iter1_tmp_6_reg_270(19 downto 0) <= tmp_6_reg_270(19 downto 0);
                tmp_29_reg_280 <= signals_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = signals_V_empty_n)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_boolean_1 = ap_block_state7))))) then
                ap_pipeline_reg_pp0_iter2_notlhs1_reg_275 <= ap_pipeline_reg_pp0_iter1_notlhs1_reg_275;
                ap_pipeline_reg_pp0_iter2_tmp_29_reg_280 <= tmp_29_reg_280;
                    ap_pipeline_reg_pp0_iter2_tmp_6_reg_270(19 downto 0) <= ap_pipeline_reg_pp0_iter1_tmp_6_reg_270(19 downto 0);
                ap_pipeline_reg_pp0_iter3_notlhs1_reg_275 <= ap_pipeline_reg_pp0_iter2_notlhs1_reg_275;
                ap_pipeline_reg_pp0_iter3_tmp_29_reg_280 <= ap_pipeline_reg_pp0_iter2_tmp_29_reg_280;
                    ap_pipeline_reg_pp0_iter3_tmp_6_reg_270(19 downto 0) <= ap_pipeline_reg_pp0_iter2_tmp_6_reg_270(19 downto 0);
                    ap_pipeline_reg_pp0_iter4_tmp_6_reg_270(19 downto 0) <= ap_pipeline_reg_pp0_iter3_tmp_6_reg_270(19 downto 0);
                tmp_28_reg_287 <= tmp_28_fu_217_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = signals_V_empty_n)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_boolean_1 = ap_block_state7)))) and (ap_const_lv1_0 = exitcond_i_i_fu_141_p2))) then
                notlhs1_reg_275 <= notlhs1_fu_166_p2;
                    tmp_6_reg_270(19 downto 0) <= tmp_6_fu_153_p1(19 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_const_boolean_1 = ap_block_state1)))) then
                notrhs2_reg_256 <= notrhs2_fu_130_p2;
                p_read_to_int_reg_251 <= p_read_to_int_fu_122_p1;
            end if;
        end if;
    end process;
    tmp_6_reg_270(31 downto 20) <= "000000000000";
    ap_pipeline_reg_pp0_iter1_tmp_6_reg_270(31 downto 20) <= "000000000000";
    ap_pipeline_reg_pp0_iter2_tmp_6_reg_270(31 downto 20) <= "000000000000";
    ap_pipeline_reg_pp0_iter3_tmp_6_reg_270(31 downto 20) <= "000000000000";
    ap_pipeline_reg_pp0_iter4_tmp_6_reg_270(31 downto 20) <= "000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, signals_V_empty_n, hits_out_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_block_state1, exitcond_i_i_fu_141_p2, ap_block_state7, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_const_boolean_1 = ap_block_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = signals_V_empty_n)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_boolean_1 = ap_block_state7)))) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter4)))) and not((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = signals_V_empty_n)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_boolean_1 = ap_block_state7)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_i_i_fu_141_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = signals_V_empty_n)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_boolean_1 = ap_block_state7)))) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter4))) or (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = signals_V_empty_n)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_boolean_1 = ap_block_state7)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_i_i_fu_141_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state8 => 
                if (not((ap_const_logic_0 = hits_out_full_n))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state8 <= ap_CS_fsm(2 downto 2);

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_const_logic_0 = ap_start) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state7_assign_proc : process(loc_V_full_n, tmp_28_reg_287)
    begin
                ap_block_state7 <= (not((tmp_28_reg_287 = ap_const_lv1_0)) and (ap_const_logic_0 = loc_V_full_n));
    end process;


    ap_done_assign_proc : process(ap_done_reg, hits_out_full_n, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and not((ap_const_logic_0 = hits_out_full_n))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
                ap_enable_pp0 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) or (ap_enable_reg_pp0_iter1 = ap_const_logic_1) or (ap_enable_reg_pp0_iter2 = ap_const_logic_1) or (ap_enable_reg_pp0_iter3 = ap_const_logic_1) or (ap_enable_reg_pp0_iter4 = ap_const_logic_1) or (ap_enable_reg_pp0_iter5 = ap_const_logic_1));
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(hits_out_full_n, ap_CS_fsm_state8)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state8) and not((ap_const_logic_0 = hits_out_full_n)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    currAmp_to_int_fu_172_p1 <= ap_pipeline_reg_pp0_iter3_tmp_29_reg_280;
    exitcond_i_i_fu_141_p2 <= "1" when (tmp_30_reg_102 = ap_const_lv20_927C0) else "0";

    grp_fu_113_ce_assign_proc : process(signals_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_block_state7)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = signals_V_empty_n)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_boolean_1 = ap_block_state7)))))) then 
            grp_fu_113_ce <= ap_const_logic_1;
        else 
            grp_fu_113_ce <= ap_const_logic_0;
        end if; 
    end process;


    hits_out_blk_n_assign_proc : process(hits_out_full_n, ap_CS_fsm_state8)
    begin
        if ((ap_const_lv1_1 = ap_CS_fsm_state8)) then 
            hits_out_blk_n <= hits_out_full_n;
        else 
            hits_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    hits_out_din <= hits_def_channel_fu_62;

    hits_out_write_assign_proc : process(hits_out_full_n, ap_CS_fsm_state8)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state8) and not((ap_const_logic_0 = hits_out_full_n)))) then 
            hits_out_write <= ap_const_logic_1;
        else 
            hits_out_write <= ap_const_logic_0;
        end if; 
    end process;

    i_fu_147_p2 <= std_logic_vector(unsigned(tmp_30_reg_102) + unsigned(ap_const_lv20_1));

    loc_V_blk_n_assign_proc : process(loc_V_full_n, ap_enable_reg_pp0_iter5, tmp_28_reg_287)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((tmp_28_reg_287 = ap_const_lv1_0)))) then 
            loc_V_blk_n <= loc_V_full_n;
        else 
            loc_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    loc_V_din <= ap_pipeline_reg_pp0_iter4_tmp_6_reg_270;

    loc_V_write_assign_proc : process(signals_V_empty_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, tmp_28_reg_287, ap_block_state7)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((tmp_28_reg_287 = ap_const_lv1_0)) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = signals_V_empty_n)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_boolean_1 = ap_block_state7)))))) then 
            loc_V_write <= ap_const_logic_1;
        else 
            loc_V_write <= ap_const_logic_0;
        end if; 
    end process;

    notlhs1_fu_166_p2 <= "0" when (tmp_22_fu_157_p4 = ap_const_lv8_FF) else "1";
    notlhs_fu_189_p2 <= "0" when (tmp_21_fu_175_p4 = ap_const_lv8_FF) else "1";
    notrhs2_fu_130_p2 <= "1" when (tmp_fu_126_p1 = ap_const_lv23_0) else "0";
    notrhs_fu_195_p2 <= "1" when (tmp_24_fu_185_p1 = ap_const_lv23_0) else "0";
    p_read_to_int_fu_122_p1 <= threshold_x;

    signals_V_blk_n_assign_proc : process(signals_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            signals_V_blk_n <= signals_V_empty_n;
        else 
            signals_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    signals_V_read_assign_proc : process(signals_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_block_state7)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = signals_V_empty_n)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_boolean_1 = ap_block_state7)))))) then 
            signals_V_read <= ap_const_logic_1;
        else 
            signals_V_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp_14_i_i_fu_223_p2 <= std_logic_vector(unsigned(hits_def_channel_fu_62) + unsigned(ap_const_lv32_1));
    tmp_21_fu_175_p4 <= currAmp_to_int_fu_172_p1(30 downto 23);
    tmp_22_fu_157_p4 <= p_read_to_int_reg_251(30 downto 23);
    tmp_23_fu_201_p2 <= (notrhs_fu_195_p2 or notlhs_fu_189_p2);
    tmp_24_fu_185_p1 <= currAmp_to_int_fu_172_p1(23 - 1 downto 0);
    tmp_25_fu_207_p2 <= (notrhs2_reg_256 or ap_pipeline_reg_pp0_iter3_notlhs1_reg_275);
    tmp_26_fu_211_p2 <= (tmp_23_fu_201_p2 and tmp_25_fu_207_p2);
    tmp_28_fu_217_p2 <= (tmp_26_fu_211_p2 and grp_fu_113_p2);
    tmp_6_fu_153_p1 <= std_logic_vector(resize(unsigned(tmp_30_reg_102),32));
    tmp_fu_126_p1 <= p_read_to_int_fu_122_p1(23 - 1 downto 0);
end behav;
