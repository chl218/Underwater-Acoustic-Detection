-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity findpeaks is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    samples_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    samples_V_empty_n : IN STD_LOGIC;
    samples_V_read : OUT STD_LOGIC;
    amplitude_V : OUT STD_LOGIC_VECTOR (31 downto 0);
    amplitude_V_ap_vld : OUT STD_LOGIC;
    locations_V : OUT STD_LOGIC_VECTOR (31 downto 0);
    locations_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of findpeaks is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv20_927C0 : STD_LOGIC_VECTOR (19 downto 0) := "10010010011111000000";
    constant ap_const_lv20_1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal samples_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal exitcond_reg_396 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_109 : STD_LOGIC_VECTOR (19 downto 0);
    signal shift_buf_1_2_reg_120 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state4 : BOOLEAN;
    signal shift_buf_1_13_reg_130 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_shift_buf_1_13_reg_130 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_shift_buf_1_13_reg_130 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_shift_buf_1_13_reg_130 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvarinc_fu_160_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal shift_buf_0_1_fu_186_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal shift_buf_1_1_fu_194_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_fu_218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter1_exitcond_reg_396 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_exitcond_reg_396 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_exitcond_reg_396 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_224_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_5_fu_230_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_405 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_5_reg_405 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_5_reg_405 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_5_reg_405 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_5_reg_405 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_reg_410 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_22_reg_410 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_22_reg_410 : STD_LOGIC_VECTOR (31 downto 0);
    signal notlhs_fu_252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_reg_417 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_notlhs_reg_417 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_notlhs_reg_417 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_notlhs_reg_417 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs_fu_258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs_reg_422 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_notrhs_reg_422 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_notrhs_reg_422 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_notrhs_reg_422 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_427 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_11_reg_427 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_433 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_438 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal invdar_reg_98 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal shift_buf_1_2_phi_fu_123_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal shift_buf_1_13_phi_fu_135_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal shift_buf_fu_70 : STD_LOGIC_VECTOR (31 downto 0);
    signal shift_buf_1_fu_74 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_fu_360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_166_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_172_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal shift_buf_1_2_to_int_fu_234_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_238_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_248_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal shift_buf_1_to_int_fu_264_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_268_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_278_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs3_fu_288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs2_fu_282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shift_buf_0_to_int_fu_300_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_303_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_313_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs7_fu_323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs6_fu_317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_142_ce : STD_LOGIC;
    signal grp_fu_148_ce : STD_LOGIC;
    signal ap_CS_fsm_state9 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_pp0 : BOOLEAN;

    component detect_calls_fcmpbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    detect_calls_fcmpbkb_U5 : component detect_calls_fcmpbkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => shift_buf_1_2_phi_fu_123_p4,
        din1 => shift_buf_1_13_phi_fu_135_p4,
        ce => grp_fu_142_ce,
        opcode => ap_const_lv5_4,
        dout => grp_fu_142_p2);

    detect_calls_fcmpbkb_U6 : component detect_calls_fcmpbkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => shift_buf_1_13_phi_fu_135_p4,
        din1 => samples_V_dout,
        ce => grp_fu_148_ce,
        opcode => ap_const_lv5_2,
        dout => grp_fu_148_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_lv1_1 = ap_CS_fsm_state9)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state4))) and not((ap_const_lv1_0 = exitcond_fu_218_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state2) and not((ap_const_lv1_0 = tmp_fu_202_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state4))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state2) and not((ap_const_lv1_0 = tmp_fu_202_p2)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state4)))) then
                    if (not((ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
                        ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state4)))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state4)))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state4)))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state2) and not((ap_const_lv1_0 = tmp_fu_202_p2)))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    invdar_reg_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = tmp_fu_202_p2))) then 
                invdar_reg_98 <= indvarinc_fu_160_p2;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_const_boolean_1 = ap_block_state1)))) then 
                invdar_reg_98 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    shift_buf_1_13_reg_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2) and not((ap_const_lv1_0 = tmp_fu_202_p2)))) then 
                shift_buf_1_13_reg_130 <= shift_buf_0_1_fu_186_p3;
            elsif ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state4))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_396))) then 
                shift_buf_1_13_reg_130 <= tmp_22_reg_410;
            end if; 
        end if;
    end process;

    shift_buf_1_2_reg_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2) and not((ap_const_lv1_0 = tmp_fu_202_p2)))) then 
                shift_buf_1_2_reg_120 <= shift_buf_1_1_fu_194_p3;
            elsif ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state4))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_396))) then 
                shift_buf_1_2_reg_120 <= shift_buf_1_13_reg_130;
            end if; 
        end if;
    end process;

    tmp_3_reg_109_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2) and not((ap_const_lv1_0 = tmp_fu_202_p2)))) then 
                tmp_3_reg_109 <= ap_const_lv20_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state4))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = exitcond_fu_218_p2))) then 
                tmp_3_reg_109 <= i_fu_224_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state4))))) then
                ap_pipeline_reg_pp0_iter1_exitcond_reg_396 <= exitcond_reg_396;
                    ap_pipeline_reg_pp0_iter1_tmp_5_reg_405(19 downto 0) <= tmp_5_reg_405(19 downto 0);
                exitcond_reg_396 <= exitcond_fu_218_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state4)))) then
                ap_pipeline_reg_pp0_iter2_exitcond_reg_396 <= ap_pipeline_reg_pp0_iter1_exitcond_reg_396;
                ap_pipeline_reg_pp0_iter2_notlhs_reg_417 <= notlhs_reg_417;
                ap_pipeline_reg_pp0_iter2_notrhs_reg_422 <= notrhs_reg_422;
                ap_pipeline_reg_pp0_iter2_shift_buf_1_13_reg_130 <= shift_buf_1_13_reg_130;
                ap_pipeline_reg_pp0_iter2_tmp_22_reg_410 <= tmp_22_reg_410;
                    ap_pipeline_reg_pp0_iter2_tmp_5_reg_405(19 downto 0) <= ap_pipeline_reg_pp0_iter1_tmp_5_reg_405(19 downto 0);
                ap_pipeline_reg_pp0_iter3_exitcond_reg_396 <= ap_pipeline_reg_pp0_iter2_exitcond_reg_396;
                ap_pipeline_reg_pp0_iter3_notlhs_reg_417 <= ap_pipeline_reg_pp0_iter2_notlhs_reg_417;
                ap_pipeline_reg_pp0_iter3_notrhs_reg_422 <= ap_pipeline_reg_pp0_iter2_notrhs_reg_422;
                ap_pipeline_reg_pp0_iter3_shift_buf_1_13_reg_130 <= ap_pipeline_reg_pp0_iter2_shift_buf_1_13_reg_130;
                ap_pipeline_reg_pp0_iter3_tmp_22_reg_410 <= ap_pipeline_reg_pp0_iter2_tmp_22_reg_410;
                    ap_pipeline_reg_pp0_iter3_tmp_5_reg_405(19 downto 0) <= ap_pipeline_reg_pp0_iter2_tmp_5_reg_405(19 downto 0);
                ap_pipeline_reg_pp0_iter4_notlhs_reg_417 <= ap_pipeline_reg_pp0_iter3_notlhs_reg_417;
                ap_pipeline_reg_pp0_iter4_notrhs_reg_422 <= ap_pipeline_reg_pp0_iter3_notrhs_reg_422;
                ap_pipeline_reg_pp0_iter4_shift_buf_1_13_reg_130 <= ap_pipeline_reg_pp0_iter3_shift_buf_1_13_reg_130;
                ap_pipeline_reg_pp0_iter4_tmp_11_reg_427 <= tmp_11_reg_427;
                    ap_pipeline_reg_pp0_iter4_tmp_5_reg_405(19 downto 0) <= ap_pipeline_reg_pp0_iter3_tmp_5_reg_405(19 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_reg_396 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state4))))) then
                notlhs_reg_417 <= notlhs_fu_252_p2;
                notrhs_reg_422 <= notrhs_fu_258_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_lv1_1 = ap_CS_fsm_state2)) then
                shift_buf_1_fu_74 <= shift_buf_1_1_fu_194_p3;
                shift_buf_fu_70 <= shift_buf_0_1_fu_186_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state4))) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_reg_396))) then
                tmp_11_reg_427 <= tmp_11_fu_294_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state4))) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_reg_396))) then
                tmp_13_reg_433 <= grp_fu_142_p2;
                tmp_20_reg_438 <= tmp_20_fu_340_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_reg_396 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state4))))) then
                tmp_22_reg_410 <= samples_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state4))) and (ap_const_lv1_0 = exitcond_fu_218_p2))) then
                    tmp_5_reg_405(19 downto 0) <= tmp_5_fu_230_p1(19 downto 0);
            end if;
        end if;
    end process;
    tmp_5_reg_405(31 downto 20) <= "000000000000";
    ap_pipeline_reg_pp0_iter1_tmp_5_reg_405(31 downto 20) <= "000000000000";
    ap_pipeline_reg_pp0_iter2_tmp_5_reg_405(31 downto 20) <= "000000000000";
    ap_pipeline_reg_pp0_iter3_tmp_5_reg_405(31 downto 20) <= "000000000000";
    ap_pipeline_reg_pp0_iter4_tmp_5_reg_405(31 downto 20) <= "000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_state4, tmp_fu_202_p2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_block_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_const_boolean_1 = ap_block_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (not((ap_const_lv1_0 = tmp_fu_202_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state4))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter4)))) and not(((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state4))) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter2)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state4))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter4))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state4))) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter2))))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    amplitude_V <= ap_pipeline_reg_pp0_iter4_shift_buf_1_13_reg_130;

    amplitude_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state4, ap_enable_reg_pp0_iter5, or_cond_fu_360_p2)
    begin
        if ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state4))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = or_cond_fu_360_p2)))) then 
            amplitude_V_ap_vld <= ap_const_logic_1;
        else 
            amplitude_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state9 <= ap_CS_fsm(3 downto 3);

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_const_logic_0 = ap_start) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state4_assign_proc : process(samples_V_empty_n, exitcond_reg_396)
    begin
                ap_block_state4 <= ((exitcond_reg_396 = ap_const_lv1_0) and (ap_const_logic_0 = samples_V_empty_n));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or (ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
                ap_enable_pp0 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) or (ap_enable_reg_pp0_iter1 = ap_const_logic_1) or (ap_enable_reg_pp0_iter2 = ap_const_logic_1) or (ap_enable_reg_pp0_iter3 = ap_const_logic_1) or (ap_enable_reg_pp0_iter4 = ap_const_logic_1) or (ap_enable_reg_pp0_iter5 = ap_const_logic_1));
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_lv1_1 = ap_CS_fsm_state9)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_fu_218_p2 <= "1" when (tmp_3_reg_109 = ap_const_lv20_927C0) else "0";

    grp_fu_142_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_state4)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state4))))) then 
            grp_fu_142_ce <= ap_const_logic_1;
        else 
            grp_fu_142_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_148_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_state4)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state4))))) then 
            grp_fu_148_ce <= ap_const_logic_1;
        else 
            grp_fu_148_ce <= ap_const_logic_0;
        end if; 
    end process;

    i_fu_224_p2 <= std_logic_vector(unsigned(tmp_3_reg_109) + unsigned(ap_const_lv20_1));
    indvarinc_fu_160_p2 <= std_logic_vector(unsigned(invdar_reg_98) + unsigned(ap_const_lv2_1));
    locations_V <= ap_pipeline_reg_pp0_iter4_tmp_5_reg_405;

    locations_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state4, ap_enable_reg_pp0_iter5, or_cond_fu_360_p2)
    begin
        if ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state4))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = or_cond_fu_360_p2)))) then 
            locations_V_ap_vld <= ap_const_logic_1;
        else 
            locations_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    notlhs2_fu_282_p2 <= "0" when (tmp_6_fu_268_p4 = ap_const_lv8_FF) else "1";
    notlhs6_fu_317_p2 <= "0" when (tmp_15_fu_303_p4 = ap_const_lv8_FF) else "1";
    notlhs_fu_252_p2 <= "0" when (tmp_8_fu_238_p4 = ap_const_lv8_FF) else "1";
    notrhs3_fu_288_p2 <= "1" when (tmp_9_fu_278_p1 = ap_const_lv23_0) else "0";
    notrhs7_fu_323_p2 <= "1" when (tmp_16_fu_313_p1 = ap_const_lv23_0) else "0";
    notrhs_fu_258_p2 <= "1" when (tmp_7_fu_248_p1 = ap_const_lv23_0) else "0";
    or_cond_fu_360_p2 <= (tmp_14_fu_355_p2 and tmp_20_reg_438);

    samples_V_blk_n_assign_proc : process(samples_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_396)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_reg_396 = ap_const_lv1_0))) then 
            samples_V_blk_n <= samples_V_empty_n;
        else 
            samples_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    samples_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_396, ap_block_state4)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_reg_396 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state4))))) then 
            samples_V_read <= ap_const_logic_1;
        else 
            samples_V_read <= ap_const_logic_0;
        end if; 
    end process;

    shift_buf_0_1_fu_186_p3 <= 
        shift_buf_fu_70 when (tmp_2_fu_180_p2(0) = '1') else 
        tmp_1_fu_172_p3;
    shift_buf_0_to_int_fu_300_p1 <= ap_pipeline_reg_pp0_iter3_tmp_22_reg_410;

    shift_buf_1_13_phi_fu_135_p4_assign_proc : process(shift_buf_1_13_reg_130, ap_pipeline_reg_pp0_iter1_exitcond_reg_396, tmp_22_reg_410, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_396))) then 
            shift_buf_1_13_phi_fu_135_p4 <= tmp_22_reg_410;
        else 
            shift_buf_1_13_phi_fu_135_p4 <= shift_buf_1_13_reg_130;
        end if; 
    end process;

    shift_buf_1_1_fu_194_p3 <= 
        ap_const_lv32_0 when (tmp_2_fu_180_p2(0) = '1') else 
        shift_buf_1_fu_74;

    shift_buf_1_2_phi_fu_123_p4_assign_proc : process(shift_buf_1_2_reg_120, shift_buf_1_13_reg_130, ap_pipeline_reg_pp0_iter1_exitcond_reg_396, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_396))) then 
            shift_buf_1_2_phi_fu_123_p4 <= shift_buf_1_13_reg_130;
        else 
            shift_buf_1_2_phi_fu_123_p4 <= shift_buf_1_2_reg_120;
        end if; 
    end process;

    shift_buf_1_2_to_int_fu_234_p1 <= shift_buf_1_2_phi_fu_123_p4;
    shift_buf_1_to_int_fu_264_p1 <= ap_pipeline_reg_pp0_iter2_shift_buf_1_13_reg_130;
    tmp_10_fu_346_p2 <= (ap_pipeline_reg_pp0_iter4_notrhs_reg_422 or ap_pipeline_reg_pp0_iter4_notlhs_reg_417);
    tmp_11_fu_294_p2 <= (notrhs3_fu_288_p2 or notlhs2_fu_282_p2);
    tmp_12_fu_350_p2 <= (tmp_10_fu_346_p2 and ap_pipeline_reg_pp0_iter4_tmp_11_reg_427);
    tmp_14_fu_355_p2 <= (tmp_12_fu_350_p2 and tmp_13_reg_433);
    tmp_15_fu_303_p4 <= shift_buf_0_to_int_fu_300_p1(30 downto 23);
    tmp_16_fu_313_p1 <= shift_buf_0_to_int_fu_300_p1(23 - 1 downto 0);
    tmp_17_fu_329_p2 <= (notrhs7_fu_323_p2 or notlhs6_fu_317_p2);
    tmp_18_fu_335_p2 <= (tmp_11_reg_427 and tmp_17_fu_329_p2);
    tmp_1_fu_172_p3 <= 
        ap_const_lv32_0 when (tmp_s_fu_166_p2(0) = '1') else 
        shift_buf_fu_70;
    tmp_20_fu_340_p2 <= (tmp_18_fu_335_p2 and grp_fu_148_p2);
    tmp_2_fu_180_p2 <= "1" when (invdar_reg_98 = ap_const_lv2_1) else "0";
    tmp_5_fu_230_p1 <= std_logic_vector(resize(unsigned(tmp_3_reg_109),32));
    tmp_6_fu_268_p4 <= shift_buf_1_to_int_fu_264_p1(30 downto 23);
    tmp_7_fu_248_p1 <= shift_buf_1_2_to_int_fu_234_p1(23 - 1 downto 0);
    tmp_8_fu_238_p4 <= shift_buf_1_2_to_int_fu_234_p1(30 downto 23);
    tmp_9_fu_278_p1 <= shift_buf_1_to_int_fu_264_p1(23 - 1 downto 0);
    tmp_fu_202_p2 <= "1" when (invdar_reg_98 = ap_const_lv2_2) else "0";
    tmp_s_fu_166_p2 <= "1" when (invdar_reg_98 = ap_const_lv2_0) else "0";
end behav;
